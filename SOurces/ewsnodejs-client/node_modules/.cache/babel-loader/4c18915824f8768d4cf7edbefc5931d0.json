{"ast":null,"code":"import define, { extend } from \"./define.js\";\nimport { Color, rgbConvert, Rgb, darker as _darker, brighter as _brighter } from \"./color.js\";\nimport { deg2rad, rad2deg } from \"./math.js\";\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)),\n      // NaN if l=0 or l=1\n  h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function brighter(k) {\n    k = k == null ? _brighter : Math.pow(_brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function darker(k) {\n    k = k == null ? _darker : Math.pow(_darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function rgb() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);\n  }\n}));","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/d3-color/src/cubehelix.js"],"names":["define","extend","Color","rgbConvert","Rgb","darker","brighter","deg2rad","rad2deg","A","B","C","D","E","ED","EB","BC_DA","cubehelixConvert","o","Cubehelix","h","s","l","opacity","r","g","b","bl","k","Math","sqrt","atan2","NaN","cubehelix","arguments","length","pow","rgb","isNaN","a","cosh","cos","sinh","sin"],"mappings":"AAAA,OAAOA,MAAP,IAAgBC,MAAhB,QAA6B,aAA7B;AACA,SAAQC,KAAR,EAAeC,UAAf,EAA2BC,GAA3B,EAAgCC,MAAM,IAANA,OAAhC,EAAwCC,QAAQ,IAARA,SAAxC,QAAuD,YAAvD;AACA,SAAQC,OAAR,EAAiBC,OAAjB,QAA+B,WAA/B;AAEA,IAAIC,CAAC,GAAG,CAAC,OAAT;AAAA,IACIC,CAAC,GAAG,CAAC,OADT;AAAA,IAEIC,CAAC,GAAG,CAAC,OAFT;AAAA,IAGIC,CAAC,GAAG,CAAC,OAHT;AAAA,IAIIC,CAAC,GAAG,CAAC,OAJT;AAAA,IAKIC,EAAE,GAAGD,CAAC,GAAGD,CALb;AAAA,IAMIG,EAAE,GAAGF,CAAC,GAAGH,CANb;AAAA,IAOIM,KAAK,GAAGN,CAAC,GAAGC,CAAJ,GAAQC,CAAC,GAAGH,CAPxB;;AASA,SAASQ,gBAAT,CAA0BC,CAA1B,EAA6B;AAC3B,MAAIA,CAAC,YAAYC,SAAjB,EAA4B,OAAO,IAAIA,SAAJ,CAAcD,CAAC,CAACE,CAAhB,EAAmBF,CAAC,CAACG,CAArB,EAAwBH,CAAC,CAACI,CAA1B,EAA6BJ,CAAC,CAACK,OAA/B,CAAP;AAC5B,MAAI,EAAEL,CAAC,YAAYd,GAAf,CAAJ,EAAyBc,CAAC,GAAGf,UAAU,CAACe,CAAD,CAAd;AACzB,MAAIM,CAAC,GAAGN,CAAC,CAACM,CAAF,GAAM,GAAd;AAAA,MACIC,CAAC,GAAGP,CAAC,CAACO,CAAF,GAAM,GADd;AAAA,MAEIC,CAAC,GAAGR,CAAC,CAACQ,CAAF,GAAM,GAFd;AAAA,MAGIJ,CAAC,GAAG,CAACN,KAAK,GAAGU,CAAR,GAAYZ,EAAE,GAAGU,CAAjB,GAAqBT,EAAE,GAAGU,CAA3B,KAAiCT,KAAK,GAAGF,EAAR,GAAaC,EAA9C,CAHR;AAAA,MAIIY,EAAE,GAAGD,CAAC,GAAGJ,CAJb;AAAA,MAKIM,CAAC,GAAG,CAACf,CAAC,IAAIY,CAAC,GAAGH,CAAR,CAAD,GAAcX,CAAC,GAAGgB,EAAnB,IAAyBf,CALjC;AAAA,MAMIS,CAAC,GAAGQ,IAAI,CAACC,IAAL,CAAUF,CAAC,GAAGA,CAAJ,GAAQD,EAAE,GAAGA,EAAvB,KAA8Bd,CAAC,GAAGS,CAAJ,IAAS,IAAIA,CAAb,CAA9B,CANR;AAAA,MAMwD;AACpDF,EAAAA,CAAC,GAAGC,CAAC,GAAGQ,IAAI,CAACE,KAAL,CAAWH,CAAX,EAAcD,EAAd,IAAoBnB,OAApB,GAA8B,GAAjC,GAAuCwB,GAPhD;AAQA,SAAO,IAAIb,SAAJ,CAAcC,CAAC,GAAG,CAAJ,GAAQA,CAAC,GAAG,GAAZ,GAAkBA,CAAhC,EAAmCC,CAAnC,EAAsCC,CAAtC,EAAyCJ,CAAC,CAACK,OAA3C,CAAP;AACD;;AAED,eAAe,SAASU,SAAT,CAAmBb,CAAnB,EAAsBC,CAAtB,EAAyBC,CAAzB,EAA4BC,OAA5B,EAAqC;AAClD,SAAOW,SAAS,CAACC,MAAV,KAAqB,CAArB,GAAyBlB,gBAAgB,CAACG,CAAD,CAAzC,GAA+C,IAAID,SAAJ,CAAcC,CAAd,EAAiBC,CAAjB,EAAoBC,CAApB,EAAuBC,OAAO,IAAI,IAAX,GAAkB,CAAlB,GAAsBA,OAA7C,CAAtD;AACD;AAED,OAAO,SAASJ,SAAT,CAAmBC,CAAnB,EAAsBC,CAAtB,EAAyBC,CAAzB,EAA4BC,OAA5B,EAAqC;AAC1C,OAAKH,CAAL,GAAS,CAACA,CAAV;AACA,OAAKC,CAAL,GAAS,CAACA,CAAV;AACA,OAAKC,CAAL,GAAS,CAACA,CAAV;AACA,OAAKC,OAAL,GAAe,CAACA,OAAhB;AACD;AAEDvB,MAAM,CAACmB,SAAD,EAAYc,SAAZ,EAAuBhC,MAAM,CAACC,KAAD,EAAQ;AACzCI,EAAAA,QAAQ,EAAE,kBAASsB,CAAT,EAAY;AACpBA,IAAAA,CAAC,GAAGA,CAAC,IAAI,IAAL,GAAYtB,SAAZ,GAAuBuB,IAAI,CAACO,GAAL,CAAS9B,SAAT,EAAmBsB,CAAnB,CAA3B;AACA,WAAO,IAAIT,SAAJ,CAAc,KAAKC,CAAnB,EAAsB,KAAKC,CAA3B,EAA8B,KAAKC,CAAL,GAASM,CAAvC,EAA0C,KAAKL,OAA/C,CAAP;AACD,GAJwC;AAKzClB,EAAAA,MAAM,EAAE,gBAASuB,CAAT,EAAY;AAClBA,IAAAA,CAAC,GAAGA,CAAC,IAAI,IAAL,GAAYvB,OAAZ,GAAqBwB,IAAI,CAACO,GAAL,CAAS/B,OAAT,EAAiBuB,CAAjB,CAAzB;AACA,WAAO,IAAIT,SAAJ,CAAc,KAAKC,CAAnB,EAAsB,KAAKC,CAA3B,EAA8B,KAAKC,CAAL,GAASM,CAAvC,EAA0C,KAAKL,OAA/C,CAAP;AACD,GARwC;AASzCc,EAAAA,GAAG,EAAE,eAAW;AACd,QAAIjB,CAAC,GAAGkB,KAAK,CAAC,KAAKlB,CAAN,CAAL,GAAgB,CAAhB,GAAoB,CAAC,KAAKA,CAAL,GAAS,GAAV,IAAiBb,OAA7C;AAAA,QACIe,CAAC,GAAG,CAAC,KAAKA,CADd;AAAA,QAEIiB,CAAC,GAAGD,KAAK,CAAC,KAAKjB,CAAN,CAAL,GAAgB,CAAhB,GAAoB,KAAKA,CAAL,GAASC,CAAT,IAAc,IAAIA,CAAlB,CAF5B;AAAA,QAGIkB,IAAI,GAAGX,IAAI,CAACY,GAAL,CAASrB,CAAT,CAHX;AAAA,QAIIsB,IAAI,GAAGb,IAAI,CAACc,GAAL,CAASvB,CAAT,CAJX;AAKA,WAAO,IAAIhB,GAAJ,CACL,OAAOkB,CAAC,GAAGiB,CAAC,IAAI9B,CAAC,GAAG+B,IAAJ,GAAW9B,CAAC,GAAGgC,IAAnB,CAAZ,CADK,EAEL,OAAOpB,CAAC,GAAGiB,CAAC,IAAI5B,CAAC,GAAG6B,IAAJ,GAAW5B,CAAC,GAAG8B,IAAnB,CAAZ,CAFK,EAGL,OAAOpB,CAAC,GAAGiB,CAAC,IAAI1B,CAAC,GAAG2B,IAAR,CAAZ,CAHK,EAIL,KAAKjB,OAJA,CAAP;AAMD;AArBwC,CAAR,CAA7B,CAAN","sourcesContent":["import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color.js\";\nimport {deg2rad, rad2deg} from \"./math.js\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n"]},"metadata":{},"sourceType":"module"}