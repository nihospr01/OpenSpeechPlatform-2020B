{"ast":null,"code":"import { csvParse, dsvFormat, tsvParse } from \"d3-dsv\";\nimport text from \"./text.js\";\n\nfunction dsvParse(parse) {\n  return function (input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function (response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function (response) {\n    return format.parse(response, row);\n  });\n}\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/d3-fetch/src/dsv.js"],"names":["csvParse","dsvFormat","tsvParse","text","dsvParse","parse","input","init","row","arguments","length","undefined","then","response","dsv","delimiter","format","csv","tsv"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,EAA6BC,QAA7B,QAA4C,QAA5C;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,SAAO,UAASC,KAAT,EAAgBC,IAAhB,EAAsBC,GAAtB,EAA2B;AAChC,QAAIC,SAAS,CAACC,MAAV,KAAqB,CAArB,IAA0B,OAAOH,IAAP,KAAgB,UAA9C,EAA0DC,GAAG,GAAGD,IAAN,EAAYA,IAAI,GAAGI,SAAnB;AAC1D,WAAOR,IAAI,CAACG,KAAD,EAAQC,IAAR,CAAJ,CAAkBK,IAAlB,CAAuB,UAASC,QAAT,EAAmB;AAC/C,aAAOR,KAAK,CAACQ,QAAD,EAAWL,GAAX,CAAZ;AACD,KAFM,CAAP;AAGD,GALD;AAMD;;AAED,eAAe,SAASM,GAAT,CAAaC,SAAb,EAAwBT,KAAxB,EAA+BC,IAA/B,EAAqCC,GAArC,EAA0C;AACvD,MAAIC,SAAS,CAACC,MAAV,KAAqB,CAArB,IAA0B,OAAOH,IAAP,KAAgB,UAA9C,EAA0DC,GAAG,GAAGD,IAAN,EAAYA,IAAI,GAAGI,SAAnB;AAC1D,MAAIK,MAAM,GAAGf,SAAS,CAACc,SAAD,CAAtB;AACA,SAAOZ,IAAI,CAACG,KAAD,EAAQC,IAAR,CAAJ,CAAkBK,IAAlB,CAAuB,UAASC,QAAT,EAAmB;AAC/C,WAAOG,MAAM,CAACX,KAAP,CAAaQ,QAAb,EAAuBL,GAAvB,CAAP;AACD,GAFM,CAAP;AAGD;AAED,OAAO,IAAIS,GAAG,GAAGb,QAAQ,CAACJ,QAAD,CAAlB;AACP,OAAO,IAAIkB,GAAG,GAAGd,QAAQ,CAACF,QAAD,CAAlB","sourcesContent":["import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text.js\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n"]},"metadata":{},"sourceType":"module"}