{"ast":null,"code":"import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar shouldWarnAboutInterpolatingClassNameFromCss = true;\n\nfunction handleInterpolation(mergedProps, registered, interpolation, couldBeSelectorInterpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result, couldBeSelectorInterpolation);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n\n  if (process.env.NODE_ENV !== 'production' && couldBeSelectorInterpolation && shouldWarnAboutInterpolatingClassNameFromCss && cached !== undefined) {\n    console.error('Interpolating a className from css`` is not recommended and will cause problems with composition.\\n' + 'Interpolating a className from css`` will be completely unsupported in a future major version of Emotion');\n    shouldWarnAboutInterpolatingClassNameFromCss = false;\n  }\n\n  return cached !== undefined && !couldBeSelectorInterpolation ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i], false);\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value, false);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\n\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings, false);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i], styles.charCodeAt(styles.length - 1) === 46);\n\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexport { serializeStyles };","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/@emotion/serialize/dist/serialize.browser.esm.js"],"names":["hashString","unitless","memoize","ILLEGAL_ESCAPE_SEQUENCE_ERROR","UNDEFINED_AS_OBJECT_KEY_ERROR","hyphenateRegex","animationRegex","isCustomProperty","property","charCodeAt","isProcessableValue","value","processStyleName","styleName","replace","toLowerCase","processStyleValue","key","match","p1","p2","cursor","name","styles","next","process","env","NODE_ENV","contentValuePattern","contentValues","oldProcessStyleValue","msPattern","hyphenPattern","hyphenatedCache","indexOf","test","charAt","length","console","error","processed","undefined","str","_char","toUpperCase","shouldWarnAboutInterpolatingClassNameFromCss","handleInterpolation","mergedProps","registered","interpolation","couldBeSelectorInterpolation","__emotion_styles","toString","Error","anim","map","createStringFromObject","previousCursor","result","matched","replaced","fakeVarName","push","concat","join","cached","obj","string","Array","isArray","i","_key","_i","interpolated","labelPattern","sourceMapPattern","serializeStyles","args","stringMode","strings","raw","sourceMap","lastIndex","identifierName","exec"],"mappings":"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","sourcesContent":["import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar shouldWarnAboutInterpolatingClassNameFromCss = true;\n\nfunction handleInterpolation(mergedProps, registered, interpolation, couldBeSelectorInterpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result, couldBeSelectorInterpolation);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n\n  if (process.env.NODE_ENV !== 'production' && couldBeSelectorInterpolation && shouldWarnAboutInterpolatingClassNameFromCss && cached !== undefined) {\n    console.error('Interpolating a className from css`` is not recommended and will cause problems with composition.\\n' + 'Interpolating a className from css`` will be completely unsupported in a future major version of Emotion');\n    shouldWarnAboutInterpolatingClassNameFromCss = false;\n  }\n\n  return cached !== undefined && !couldBeSelectorInterpolation ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i], false);\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value, false);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings, false);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i], styles.charCodeAt(styles.length - 1) === 46);\n\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexport { serializeStyles };\n"]},"metadata":{},"sourceType":"module"}