{"ast":null,"code":"import { atan, exp, halfPi, log, tan } from \"../math.js\";\nimport { mercatorProjection } from \"./mercator.js\";\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function (x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function () {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function (_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function (_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90]).scale(159.155);\n}","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/d3-geo/src/projection/transverseMercator.js"],"names":["atan","exp","halfPi","log","tan","mercatorProjection","transverseMercatorRaw","lambda","phi","invert","x","y","m","center","rotate","_","arguments","length","scale"],"mappings":"AAAA,SAAQA,IAAR,EAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA0C,YAA1C;AACA,SAAQC,kBAAR,QAAiC,eAAjC;AAEA,OAAO,SAASC,qBAAT,CAA+BC,MAA/B,EAAuCC,GAAvC,EAA4C;AACjD,SAAO,CAACL,GAAG,CAACC,GAAG,CAAC,CAACF,MAAM,GAAGM,GAAV,IAAiB,CAAlB,CAAJ,CAAJ,EAA+B,CAACD,MAAhC,CAAP;AACD;;AAEDD,qBAAqB,CAACG,MAAtB,GAA+B,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAC5C,SAAO,CAAC,CAACA,CAAF,EAAK,IAAIX,IAAI,CAACC,GAAG,CAACS,CAAD,CAAJ,CAAR,GAAmBR,MAAxB,CAAP;AACD,CAFD;;AAIA,eAAe,YAAW;AACxB,MAAIU,CAAC,GAAGP,kBAAkB,CAACC,qBAAD,CAA1B;AAAA,MACIO,MAAM,GAAGD,CAAC,CAACC,MADf;AAAA,MAEIC,MAAM,GAAGF,CAAC,CAACE,MAFf;;AAIAF,EAAAA,CAAC,CAACC,MAAF,GAAW,UAASE,CAAT,EAAY;AACrB,WAAOC,SAAS,CAACC,MAAV,GAAmBJ,MAAM,CAAC,CAAC,CAACE,CAAC,CAAC,CAAD,CAAH,EAAQA,CAAC,CAAC,CAAD,CAAT,CAAD,CAAzB,IAA4CA,CAAC,GAAGF,MAAM,EAAV,EAAc,CAACE,CAAC,CAAC,CAAD,CAAF,EAAO,CAACA,CAAC,CAAC,CAAD,CAAT,CAA1D,CAAP;AACD,GAFD;;AAIAH,EAAAA,CAAC,CAACE,MAAF,GAAW,UAASC,CAAT,EAAY;AACrB,WAAOC,SAAS,CAACC,MAAV,GAAmBH,MAAM,CAAC,CAACC,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAaA,CAAC,CAACE,MAAF,GAAW,CAAX,GAAeF,CAAC,CAAC,CAAD,CAAD,GAAO,EAAtB,GAA2B,EAAxC,CAAD,CAAzB,IAA0EA,CAAC,GAAGD,MAAM,EAAV,EAAc,CAACC,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAaA,CAAC,CAAC,CAAD,CAAD,GAAO,EAApB,CAAxF,CAAP;AACD,GAFD;;AAIA,SAAOD,MAAM,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CAAD,CAAN,CACFI,KADE,CACI,OADJ,CAAP;AAED","sourcesContent":["import {atan, exp, halfPi, log, tan} from \"../math.js\";\nimport {mercatorProjection} from \"./mercator.js\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n"]},"metadata":{},"sourceType":"module"}