{"ast":null,"code":"import { StyleSheet } from '@emotion/sheet';\nimport Stylis from '@emotion/stylis';\nimport '@emotion/weak-memoize'; // https://github.com/thysultan/stylis.js/tree/master/plugins/rule-sheet\n// inlined to avoid umd wrapper and peerDep warnings/installing stylis\n// since we use stylis after closure compiler\n\nvar delimiter = '/*|*/';\nvar needle = delimiter + '}';\n\nfunction toSheet(block) {\n  if (block) {\n    Sheet.current.insert(block + '}');\n  }\n}\n\nvar Sheet = {\n  current: null\n};\n\nvar ruleSheet = function ruleSheet(context, content, selectors, parents, line, column, length, ns, depth, at) {\n  switch (context) {\n    // property\n    case 1:\n      {\n        switch (content.charCodeAt(0)) {\n          case 64:\n            {\n              // @import\n              Sheet.current.insert(content + ';');\n              return '';\n            }\n          // charcode for l\n\n          case 108:\n            {\n              // charcode for b\n              // this ignores label\n              if (content.charCodeAt(2) === 98) {\n                return '';\n              }\n            }\n        }\n\n        break;\n      }\n    // selector\n\n    case 2:\n      {\n        if (ns === 0) return content + delimiter;\n        break;\n      }\n    // at-rule\n\n    case 3:\n      {\n        switch (ns) {\n          // @font-face, @page\n          case 102:\n          case 112:\n            {\n              Sheet.current.insert(selectors[0] + content);\n              return '';\n            }\n\n          default:\n            {\n              return content + (at === 0 ? delimiter : '');\n            }\n        }\n      }\n\n    case -2:\n      {\n        content.split(needle).forEach(toSheet);\n      }\n  }\n};\n\nvar createCache = function createCache(options) {\n  if (options === undefined) options = {};\n  var key = options.key || 'css';\n  var stylisOptions;\n\n  if (options.prefix !== undefined) {\n    stylisOptions = {\n      prefix: options.prefix\n    };\n  }\n\n  var stylis = new Stylis(stylisOptions);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {}; // $FlowFixMe\n\n  var container;\n  {\n    container = options.container || document.head;\n    var nodes = document.querySelectorAll(\"style[data-emotion-\" + key + \"]\");\n    Array.prototype.forEach.call(nodes, function (node) {\n      var attrib = node.getAttribute(\"data-emotion-\" + key); // $FlowFixMe\n\n      attrib.split(' ').forEach(function (id) {\n        inserted[id] = true;\n      });\n\n      if (node.parentNode !== container) {\n        container.appendChild(node);\n      }\n    });\n  }\n\n  var _insert;\n\n  {\n    stylis.use(options.stylisPlugins)(ruleSheet);\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      var name = serialized.name;\n      Sheet.current = sheet;\n\n      if (process.env.NODE_ENV !== 'production' && serialized.map !== undefined) {\n        var map = serialized.map;\n        Sheet.current = {\n          insert: function insert(rule) {\n            sheet.insert(rule + map);\n          }\n        };\n      }\n\n      stylis(selector, serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[name] = true;\n      }\n    };\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // https://esbench.com/bench/5bf7371a4cd7e6009ef61d0a\n    var commentStart = /\\/\\*/g;\n    var commentEnd = /\\*\\//g;\n    stylis.use(function (context, content) {\n      switch (context) {\n        case -1:\n          {\n            while (commentStart.test(content)) {\n              commentEnd.lastIndex = commentStart.lastIndex;\n\n              if (commentEnd.test(content)) {\n                commentStart.lastIndex = commentEnd.lastIndex;\n                continue;\n              }\n\n              throw new Error('Your styles have an unterminated comment (\"/*\" without corresponding \"*/\").');\n            }\n\n            commentStart.lastIndex = 0;\n            break;\n          }\n      }\n    });\n    stylis.use(function (context, content, selectors) {\n      switch (context) {\n        case -1:\n          {\n            var flag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n            var unsafePseudoClasses = content.match(/(:first|:nth|:nth-last)-child/g);\n\n            if (unsafePseudoClasses && cache.compat !== true) {\n              unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n                var ignoreRegExp = new RegExp(unsafePseudoClass + \".*\\\\/\\\\* \" + flag + \" \\\\*\\\\/\");\n                var ignore = ignoreRegExp.test(content);\n\n                if (unsafePseudoClass && !ignore) {\n                  console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n                }\n              });\n            }\n\n            break;\n          }\n      }\n    });\n  }\n\n  var cache = {\n    key: key,\n    sheet: new StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  return cache;\n};\n\nexport default createCache;","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/@emotion/cache/dist/cache.browser.esm.js"],"names":["StyleSheet","Stylis","delimiter","needle","toSheet","block","Sheet","current","insert","ruleSheet","context","content","selectors","parents","line","column","length","ns","depth","at","charCodeAt","split","forEach","createCache","options","undefined","key","stylisOptions","prefix","stylis","process","env","NODE_ENV","test","Error","inserted","container","document","head","nodes","querySelectorAll","Array","prototype","call","node","attrib","getAttribute","id","parentNode","appendChild","_insert","use","stylisPlugins","selector","serialized","sheet","shouldCache","name","map","rule","styles","cache","commentStart","commentEnd","lastIndex","flag","unsafePseudoClasses","match","compat","unsafePseudoClass","ignoreRegExp","RegExp","ignore","console","error","nonce","speedy","registered"],"mappings":"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","sourcesContent":["import { StyleSheet } from '@emotion/sheet';\nimport Stylis from '@emotion/stylis';\nimport '@emotion/weak-memoize';\n\n// https://github.com/thysultan/stylis.js/tree/master/plugins/rule-sheet\n// inlined to avoid umd wrapper and peerDep warnings/installing stylis\n// since we use stylis after closure compiler\nvar delimiter = '/*|*/';\nvar needle = delimiter + '}';\n\nfunction toSheet(block) {\n  if (block) {\n    Sheet.current.insert(block + '}');\n  }\n}\n\nvar Sheet = {\n  current: null\n};\nvar ruleSheet = function ruleSheet(context, content, selectors, parents, line, column, length, ns, depth, at) {\n  switch (context) {\n    // property\n    case 1:\n      {\n        switch (content.charCodeAt(0)) {\n          case 64:\n            {\n              // @import\n              Sheet.current.insert(content + ';');\n              return '';\n            }\n          // charcode for l\n\n          case 108:\n            {\n              // charcode for b\n              // this ignores label\n              if (content.charCodeAt(2) === 98) {\n                return '';\n              }\n            }\n        }\n\n        break;\n      }\n    // selector\n\n    case 2:\n      {\n        if (ns === 0) return content + delimiter;\n        break;\n      }\n    // at-rule\n\n    case 3:\n      {\n        switch (ns) {\n          // @font-face, @page\n          case 102:\n          case 112:\n            {\n              Sheet.current.insert(selectors[0] + content);\n              return '';\n            }\n\n          default:\n            {\n              return content + (at === 0 ? delimiter : '');\n            }\n        }\n      }\n\n    case -2:\n      {\n        content.split(needle).forEach(toSheet);\n      }\n  }\n};\n\nvar createCache = function createCache(options) {\n  if (options === undefined) options = {};\n  var key = options.key || 'css';\n  var stylisOptions;\n\n  if (options.prefix !== undefined) {\n    stylisOptions = {\n      prefix: options.prefix\n    };\n  }\n\n  var stylis = new Stylis(stylisOptions);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {}; // $FlowFixMe\n\n  var container;\n\n  {\n    container = options.container || document.head;\n    var nodes = document.querySelectorAll(\"style[data-emotion-\" + key + \"]\");\n    Array.prototype.forEach.call(nodes, function (node) {\n      var attrib = node.getAttribute(\"data-emotion-\" + key); // $FlowFixMe\n\n      attrib.split(' ').forEach(function (id) {\n        inserted[id] = true;\n      });\n\n      if (node.parentNode !== container) {\n        container.appendChild(node);\n      }\n    });\n  }\n\n  var _insert;\n\n  {\n    stylis.use(options.stylisPlugins)(ruleSheet);\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      var name = serialized.name;\n      Sheet.current = sheet;\n\n      if (process.env.NODE_ENV !== 'production' && serialized.map !== undefined) {\n        var map = serialized.map;\n        Sheet.current = {\n          insert: function insert(rule) {\n            sheet.insert(rule + map);\n          }\n        };\n      }\n\n      stylis(selector, serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[name] = true;\n      }\n    };\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // https://esbench.com/bench/5bf7371a4cd7e6009ef61d0a\n    var commentStart = /\\/\\*/g;\n    var commentEnd = /\\*\\//g;\n    stylis.use(function (context, content) {\n      switch (context) {\n        case -1:\n          {\n            while (commentStart.test(content)) {\n              commentEnd.lastIndex = commentStart.lastIndex;\n\n              if (commentEnd.test(content)) {\n                commentStart.lastIndex = commentEnd.lastIndex;\n                continue;\n              }\n\n              throw new Error('Your styles have an unterminated comment (\"/*\" without corresponding \"*/\").');\n            }\n\n            commentStart.lastIndex = 0;\n            break;\n          }\n      }\n    });\n    stylis.use(function (context, content, selectors) {\n      switch (context) {\n        case -1:\n          {\n            var flag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n            var unsafePseudoClasses = content.match(/(:first|:nth|:nth-last)-child/g);\n\n            if (unsafePseudoClasses && cache.compat !== true) {\n              unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n                var ignoreRegExp = new RegExp(unsafePseudoClass + \".*\\\\/\\\\* \" + flag + \" \\\\*\\\\/\");\n                var ignore = ignoreRegExp.test(content);\n\n                if (unsafePseudoClass && !ignore) {\n                  console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n                }\n              });\n            }\n\n            break;\n          }\n      }\n    });\n  }\n\n  var cache = {\n    key: key,\n    sheet: new StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  return cache;\n};\n\nexport default createCache;\n"]},"metadata":{},"sourceType":"module"}