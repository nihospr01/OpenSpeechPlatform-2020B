{"ast":null,"code":"import { set } from \"./schedule.js\";\nexport default function () {\n  var on0,\n      on1,\n      that = this,\n      id = that._id,\n      size = that.size();\n  return new Promise(function (resolve, reject) {\n    var cancel = {\n      value: reject\n    },\n        end = {\n      value: function value() {\n        if (--size === 0) resolve();\n      }\n    };\n    that.each(function () {\n      var schedule = set(this, id),\n          on = schedule.on; // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n\n        on1._.cancel.push(cancel);\n\n        on1._.interrupt.push(cancel);\n\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/d3-transition/src/transition/end.js"],"names":["set","on0","on1","that","id","_id","size","Promise","resolve","reject","cancel","value","end","each","schedule","on","copy","_","push","interrupt"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,eAAlB;AAEA,eAAe,YAAW;AACxB,MAAIC,GAAJ;AAAA,MAASC,GAAT;AAAA,MAAcC,IAAI,GAAG,IAArB;AAAA,MAA2BC,EAAE,GAAGD,IAAI,CAACE,GAArC;AAAA,MAA0CC,IAAI,GAAGH,IAAI,CAACG,IAAL,EAAjD;AACA,SAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAC3C,QAAIC,MAAM,GAAG;AAACC,MAAAA,KAAK,EAAEF;AAAR,KAAb;AAAA,QACIG,GAAG,GAAG;AAACD,MAAAA,KAAK,EAAE,iBAAW;AAAE,YAAI,EAAEL,IAAF,KAAW,CAAf,EAAkBE,OAAO;AAAK;AAAnD,KADV;AAGAL,IAAAA,IAAI,CAACU,IAAL,CAAU,YAAW;AACnB,UAAIC,QAAQ,GAAGd,GAAG,CAAC,IAAD,EAAOI,EAAP,CAAlB;AAAA,UACIW,EAAE,GAAGD,QAAQ,CAACC,EADlB,CADmB,CAInB;AACA;AACA;;AACA,UAAIA,EAAE,KAAKd,GAAX,EAAgB;AACdC,QAAAA,GAAG,GAAG,CAACD,GAAG,GAAGc,EAAP,EAAWC,IAAX,EAAN;;AACAd,QAAAA,GAAG,CAACe,CAAJ,CAAMP,MAAN,CAAaQ,IAAb,CAAkBR,MAAlB;;AACAR,QAAAA,GAAG,CAACe,CAAJ,CAAME,SAAN,CAAgBD,IAAhB,CAAqBR,MAArB;;AACAR,QAAAA,GAAG,CAACe,CAAJ,CAAML,GAAN,CAAUM,IAAV,CAAeN,GAAf;AACD;;AAEDE,MAAAA,QAAQ,CAACC,EAAT,GAAcb,GAAd;AACD,KAfD;AAgBD,GApBM,CAAP;AAqBD","sourcesContent":["import {set} from \"./schedule.js\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n"]},"metadata":{},"sourceType":"module"}