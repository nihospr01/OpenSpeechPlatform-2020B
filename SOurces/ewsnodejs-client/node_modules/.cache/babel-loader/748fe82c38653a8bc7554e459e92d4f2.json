{"ast":null,"code":"import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport { abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau } from \"./math.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0,\n      y10 = y1 - y0,\n      x32 = x3 - x2,\n      y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n} // Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\n\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00; // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function () {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n    if (!context) context = buffer = path(); // Ensure that the outer radius is always larger than the inner radius.\n\n    if (r1 < r0) r = r1, r1 = r0, r0 = r; // Is it a point?\n\n    if (!(r1 > epsilon)) context.moveTo(0, 0); // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n        context.moveTo(r1 * cos(a0), r1 * sin(a0));\n        context.arc(0, 0, r1, a0, a1, !cw);\n\n        if (r0 > epsilon) {\n          context.moveTo(r0 * cos(a1), r0 * sin(a1));\n          context.arc(0, 0, r0, a1, a0, cw);\n        }\n      } // Or is it a circular or annular sector?\n      else {\n          var a01 = a0,\n              a11 = a1,\n              a00 = a0,\n              a10 = a1,\n              da0 = da,\n              da1 = da,\n              ap = padAngle.apply(this, arguments) / 2,\n              rp = ap > epsilon && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n              rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n              rc0 = rc,\n              rc1 = rc,\n              t0,\n              t1; // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\n          if (rp > epsilon) {\n            var p0 = asin(rp / r0 * sin(ap)),\n                p1 = asin(rp / r1 * sin(ap));\n            if ((da0 -= p0 * 2) > epsilon) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n            if ((da1 -= p1 * 2) > epsilon) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n          }\n\n          var x01 = r1 * cos(a01),\n              y01 = r1 * sin(a01),\n              x10 = r0 * cos(a10),\n              y10 = r0 * sin(a10); // Apply rounded corners?\n\n          if (rc > epsilon) {\n            var x11 = r1 * cos(a11),\n                y11 = r1 * sin(a11),\n                x00 = r0 * cos(a00),\n                y00 = r0 * sin(a00),\n                oc; // Restrict the corner radius according to the sector angle.\n\n            if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n              var ax = x01 - oc[0],\n                  ay = y01 - oc[1],\n                  bx = x11 - oc[0],\n                  by = y11 - oc[1],\n                  kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n                  lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n              rc0 = min(rc, (r0 - lc) / (kc - 1));\n              rc1 = min(rc, (r1 - lc) / (kc + 1));\n            }\n          } // Is the sector collapsed to a line?\n\n\n          if (!(da1 > epsilon)) context.moveTo(x01, y01); // Does the sector’s outer ring have rounded corners?\n          else if (rc1 > epsilon) {\n              t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n              t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n              context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?\n\n              if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.\n              else {\n                  context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n                  context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n                  context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n                }\n            } // Or is the outer ring just a circular arc?\n            else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw); // Is there no inner ring, and it’s a circular sector?\n          // Or perhaps it’s an annular sector collapsed due to padding?\n\n          if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10); // Does the sector’s inner ring (or point) have rounded corners?\n          else if (rc0 > epsilon) {\n              t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n              t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n              context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?\n\n              if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.\n              else {\n                  context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n                  context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n                  context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n                }\n            } // Or is the inner ring just a circular arc?\n            else context.arc(0, 0, r0, a10, a00, cw);\n        }\n    context.closePath();\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function () {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function (_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function (_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function (_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function (_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function (_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function (_) {\n    return arguments.length ? (context = _ == null ? null : _, arc) : context;\n  };\n\n  return arc;\n}","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/d3-shape/src/arc.js"],"names":["path","constant","abs","acos","asin","atan2","cos","epsilon","halfPi","max","min","pi","sin","sqrt","tau","arcInnerRadius","d","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","intersect","x0","y0","x1","y1","x2","y2","x3","y3","x10","y10","x32","y32","t","cornerTangents","r1","rc","cw","x01","y01","lo","ox","oy","x11","y11","x00","y00","dx","dy","d2","r","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","cornerRadius","padRadius","context","arc","buffer","r0","apply","arguments","a0","a1","da","moveTo","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","t0","t1","p0","p1","oc","ax","ay","bx","by","kc","lc","lineTo","closePath","centroid","a","_","length"],"mappings":"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","sourcesContent":["import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n"]},"metadata":{},"sourceType":"module"}