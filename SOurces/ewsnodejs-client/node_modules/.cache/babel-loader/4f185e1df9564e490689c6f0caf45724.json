{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar PropTypes = __importStar(require(\"prop-types\"));\n\nvar utils_1 = require(\"./utils\");\n\nvar ColGroup = function ColGroup(props, _ref) {\n  var table = _ref.table;\n  var _table$props = table.props,\n      prefixCls = _table$props.prefixCls,\n      expandIconAsCell = _table$props.expandIconAsCell;\n  var fixed = props.fixed;\n  var cols = [];\n\n  if (expandIconAsCell && fixed !== 'right') {\n    cols.push(React.createElement(\"col\", {\n      className: \"\".concat(prefixCls, \"-expand-icon-col\"),\n      key: \"rc-table-expand-icon-col\"\n    }));\n  }\n\n  var leafColumns;\n\n  if (fixed === 'left') {\n    leafColumns = table.columnManager.leftLeafColumns();\n  } else if (fixed === 'right') {\n    leafColumns = table.columnManager.rightLeafColumns();\n  } else {\n    leafColumns = table.columnManager.leafColumns();\n  }\n\n  cols = cols.concat(leafColumns.map(function (_ref2) {\n    var key = _ref2.key,\n        dataIndex = _ref2.dataIndex,\n        width = _ref2.width,\n        additionalProps = _ref2[utils_1.INTERNAL_COL_DEFINE];\n    var mergedKey = key !== undefined ? key : dataIndex;\n    return React.createElement(\"col\", Object.assign({\n      key: mergedKey,\n      style: {\n        width: width,\n        minWidth: width\n      }\n    }, additionalProps));\n  }));\n  return React.createElement(\"colgroup\", null, cols);\n};\n\nColGroup.contextTypes = {\n  table: PropTypes.any\n};\nexports.default = ColGroup;","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/rc-table/es/ColGroup.js"],"names":["__importStar","mod","__esModule","result","k","Object","hasOwnProperty","call","defineProperty","exports","value","React","require","PropTypes","utils_1","ColGroup","props","_ref","table","_table$props","prefixCls","expandIconAsCell","fixed","cols","push","createElement","className","concat","key","leafColumns","columnManager","leftLeafColumns","rightLeafColumns","map","_ref2","dataIndex","width","additionalProps","INTERNAL_COL_DEFINE","mergedKey","undefined","assign","style","minWidth","contextTypes","any","default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  }\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = __importStar(require(\"react\"));\n\nvar PropTypes = __importStar(require(\"prop-types\"));\n\nvar utils_1 = require(\"./utils\");\n\nvar ColGroup = function ColGroup(props, _ref) {\n  var table = _ref.table;\n  var _table$props = table.props,\n      prefixCls = _table$props.prefixCls,\n      expandIconAsCell = _table$props.expandIconAsCell;\n  var fixed = props.fixed;\n  var cols = [];\n\n  if (expandIconAsCell && fixed !== 'right') {\n    cols.push(React.createElement(\"col\", {\n      className: \"\".concat(prefixCls, \"-expand-icon-col\"),\n      key: \"rc-table-expand-icon-col\"\n    }));\n  }\n\n  var leafColumns;\n\n  if (fixed === 'left') {\n    leafColumns = table.columnManager.leftLeafColumns();\n  } else if (fixed === 'right') {\n    leafColumns = table.columnManager.rightLeafColumns();\n  } else {\n    leafColumns = table.columnManager.leafColumns();\n  }\n\n  cols = cols.concat(leafColumns.map(function (_ref2) {\n    var key = _ref2.key,\n        dataIndex = _ref2.dataIndex,\n        width = _ref2.width,\n        additionalProps = _ref2[utils_1.INTERNAL_COL_DEFINE];\n    var mergedKey = key !== undefined ? key : dataIndex;\n    return React.createElement(\"col\", Object.assign({\n      key: mergedKey,\n      style: {\n        width: width,\n        minWidth: width\n      }\n    }, additionalProps));\n  }));\n  return React.createElement(\"colgroup\", null, cols);\n};\n\nColGroup.contextTypes = {\n  table: PropTypes.any\n};\nexports.default = ColGroup;"]},"metadata":{},"sourceType":"script"}