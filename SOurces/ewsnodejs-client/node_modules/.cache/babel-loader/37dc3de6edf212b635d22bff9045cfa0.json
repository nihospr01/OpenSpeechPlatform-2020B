{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = addEventListener;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _EventObject = require('./EventObject');\n\nvar _EventObject2 = _interopRequireDefault(_EventObject);\n\nfunction addEventListener(target, eventType, callback, option) {\n  function wrapCallback(e) {\n    var ne = new _EventObject2['default'](e);\n    callback.call(target, ne);\n  }\n\n  if (target.addEventListener) {\n    var _ret = function () {\n      var useCapture = false;\n\n      if (typeof option === 'object') {\n        useCapture = option.capture || false;\n      } else if (typeof option === 'boolean') {\n        useCapture = option;\n      }\n\n      target.addEventListener(eventType, wrapCallback, option || false);\n      return {\n        v: {\n          remove: function remove() {\n            target.removeEventListener(eventType, wrapCallback, useCapture);\n          }\n        }\n      };\n    }();\n\n    if (typeof _ret === 'object') return _ret.v;\n  } else if (target.attachEvent) {\n    target.attachEvent('on' + eventType, wrapCallback);\n    return {\n      remove: function remove() {\n        target.detachEvent('on' + eventType, wrapCallback);\n      }\n    };\n  }\n}\n\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/add-dom-event-listener/lib/index.js"],"names":["Object","defineProperty","exports","value","addEventListener","_interopRequireDefault","obj","__esModule","_EventObject","require","_EventObject2","target","eventType","callback","option","wrapCallback","e","ne","call","_ret","useCapture","capture","v","remove","removeEventListener","attachEvent","detachEvent","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,gBAArB;;AAEA,SAASC,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAEjG,IAAIE,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;;AAEA,IAAIC,aAAa,GAAGL,sBAAsB,CAACG,YAAD,CAA1C;;AAEA,SAASJ,gBAAT,CAA0BO,MAA1B,EAAkCC,SAAlC,EAA6CC,QAA7C,EAAuDC,MAAvD,EAA+D;AAC7D,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,QAAIC,EAAE,GAAG,IAAIP,aAAa,CAAC,SAAD,CAAjB,CAA6BM,CAA7B,CAAT;AACAH,IAAAA,QAAQ,CAACK,IAAT,CAAcP,MAAd,EAAsBM,EAAtB;AACD;;AAED,MAAIN,MAAM,CAACP,gBAAX,EAA6B;AAC3B,QAAIe,IAAI,GAAI,YAAY;AACtB,UAAIC,UAAU,GAAG,KAAjB;;AACA,UAAI,OAAON,MAAP,KAAkB,QAAtB,EAAgC;AAC9BM,QAAAA,UAAU,GAAGN,MAAM,CAACO,OAAP,IAAkB,KAA/B;AACD,OAFD,MAEO,IAAI,OAAOP,MAAP,KAAkB,SAAtB,EAAiC;AACtCM,QAAAA,UAAU,GAAGN,MAAb;AACD;;AAEDH,MAAAA,MAAM,CAACP,gBAAP,CAAwBQ,SAAxB,EAAmCG,YAAnC,EAAiDD,MAAM,IAAI,KAA3D;AAEA,aAAO;AACLQ,QAAAA,CAAC,EAAE;AACDC,UAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxBZ,YAAAA,MAAM,CAACa,mBAAP,CAA2BZ,SAA3B,EAAsCG,YAAtC,EAAoDK,UAApD;AACD;AAHA;AADE,OAAP;AAOD,KAjBU,EAAX;;AAmBA,QAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B,OAAOA,IAAI,CAACG,CAAZ;AAC/B,GArBD,MAqBO,IAAIX,MAAM,CAACc,WAAX,EAAwB;AAC7Bd,IAAAA,MAAM,CAACc,WAAP,CAAmB,OAAOb,SAA1B,EAAqCG,YAArC;AACA,WAAO;AACLQ,MAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxBZ,QAAAA,MAAM,CAACe,WAAP,CAAmB,OAAOd,SAA1B,EAAqCG,YAArC;AACD;AAHI,KAAP;AAKD;AACF;;AAEDY,MAAM,CAACzB,OAAP,GAAiBA,OAAO,CAAC,SAAD,CAAxB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = addEventListener;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _EventObject = require('./EventObject');\n\nvar _EventObject2 = _interopRequireDefault(_EventObject);\n\nfunction addEventListener(target, eventType, callback, option) {\n  function wrapCallback(e) {\n    var ne = new _EventObject2['default'](e);\n    callback.call(target, ne);\n  }\n\n  if (target.addEventListener) {\n    var _ret = (function () {\n      var useCapture = false;\n      if (typeof option === 'object') {\n        useCapture = option.capture || false;\n      } else if (typeof option === 'boolean') {\n        useCapture = option;\n      }\n\n      target.addEventListener(eventType, wrapCallback, option || false);\n\n      return {\n        v: {\n          remove: function remove() {\n            target.removeEventListener(eventType, wrapCallback, useCapture);\n          }\n        }\n      };\n    })();\n\n    if (typeof _ret === 'object') return _ret.v;\n  } else if (target.attachEvent) {\n    target.attachEvent('on' + eventType, wrapCallback);\n    return {\n      remove: function remove() {\n        target.detachEvent('on' + eventType, wrapCallback);\n      }\n    };\n  }\n}\n\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}