{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ContentBlock\n * @format\n * \n */\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CharacterMetadata = require('./CharacterMetadata');\n\nvar Immutable = require('immutable');\n\nvar findRangesImmutable = require('./findRangesImmutable');\n\nvar List = Immutable.List,\n    Map = Immutable.Map,\n    OrderedSet = Immutable.OrderedSet,\n    Record = Immutable.Record,\n    Repeat = Immutable.Repeat;\nvar EMPTY_SET = OrderedSet();\nvar defaultRecord = {\n  key: '',\n  type: 'unstyled',\n  text: '',\n  characterList: List(),\n  depth: 0,\n  data: Map()\n};\nvar ContentBlockRecord = Record(defaultRecord);\n\nvar decorateCharacterList = function decorateCharacterList(config) {\n  if (!config) {\n    return config;\n  }\n\n  var characterList = config.characterList,\n      text = config.text;\n\n  if (text && !characterList) {\n    config.characterList = List(Repeat(CharacterMetadata.EMPTY, text.length));\n  }\n\n  return config;\n};\n\nvar ContentBlock = function (_ContentBlockRecord) {\n  _inherits(ContentBlock, _ContentBlockRecord);\n\n  function ContentBlock(config) {\n    _classCallCheck(this, ContentBlock);\n\n    return _possibleConstructorReturn(this, _ContentBlockRecord.call(this, decorateCharacterList(config)));\n  }\n\n  ContentBlock.prototype.getKey = function getKey() {\n    return this.get('key');\n  };\n\n  ContentBlock.prototype.getType = function getType() {\n    return this.get('type');\n  };\n\n  ContentBlock.prototype.getText = function getText() {\n    return this.get('text');\n  };\n\n  ContentBlock.prototype.getCharacterList = function getCharacterList() {\n    return this.get('characterList');\n  };\n\n  ContentBlock.prototype.getLength = function getLength() {\n    return this.getText().length;\n  };\n\n  ContentBlock.prototype.getDepth = function getDepth() {\n    return this.get('depth');\n  };\n\n  ContentBlock.prototype.getData = function getData() {\n    return this.get('data');\n  };\n\n  ContentBlock.prototype.getInlineStyleAt = function getInlineStyleAt(offset) {\n    var character = this.getCharacterList().get(offset);\n    return character ? character.getStyle() : EMPTY_SET;\n  };\n\n  ContentBlock.prototype.getEntityAt = function getEntityAt(offset) {\n    var character = this.getCharacterList().get(offset);\n    return character ? character.getEntity() : null;\n  };\n  /**\n   * Execute a callback for every contiguous range of styles within the block.\n   */\n\n\n  ContentBlock.prototype.findStyleRanges = function findStyleRanges(filterFn, callback) {\n    findRangesImmutable(this.getCharacterList(), haveEqualStyle, filterFn, callback);\n  };\n  /**\n   * Execute a callback for every contiguous range of entities within the block.\n   */\n\n\n  ContentBlock.prototype.findEntityRanges = function findEntityRanges(filterFn, callback) {\n    findRangesImmutable(this.getCharacterList(), haveEqualEntity, filterFn, callback);\n  };\n\n  return ContentBlock;\n}(ContentBlockRecord);\n\nfunction haveEqualStyle(charA, charB) {\n  return charA.getStyle() === charB.getStyle();\n}\n\nfunction haveEqualEntity(charA, charB) {\n  return charA.getEntity() === charB.getEntity();\n}\n\nmodule.exports = ContentBlock;","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/draft-js/lib/ContentBlock.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","CharacterMetadata","require","Immutable","findRangesImmutable","List","Map","OrderedSet","Record","Repeat","EMPTY_SET","defaultRecord","key","type","text","characterList","depth","data","ContentBlockRecord","decorateCharacterList","config","EMPTY","length","ContentBlock","_ContentBlockRecord","getKey","get","getType","getText","getCharacterList","getLength","getDepth","getData","getInlineStyleAt","offset","character","getStyle","getEntityAt","getEntity","findStyleRanges","filterFn","callback","haveEqualStyle","findEntityRanges","haveEqualEntity","charA","charB","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ContentBlock\n * @format\n * \n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CharacterMetadata = require('./CharacterMetadata');\nvar Immutable = require('immutable');\n\nvar findRangesImmutable = require('./findRangesImmutable');\n\nvar List = Immutable.List,\n    Map = Immutable.Map,\n    OrderedSet = Immutable.OrderedSet,\n    Record = Immutable.Record,\n    Repeat = Immutable.Repeat;\n\n\nvar EMPTY_SET = OrderedSet();\n\nvar defaultRecord = {\n  key: '',\n  type: 'unstyled',\n  text: '',\n  characterList: List(),\n  depth: 0,\n  data: Map()\n};\n\nvar ContentBlockRecord = Record(defaultRecord);\n\nvar decorateCharacterList = function decorateCharacterList(config) {\n  if (!config) {\n    return config;\n  }\n\n  var characterList = config.characterList,\n      text = config.text;\n\n\n  if (text && !characterList) {\n    config.characterList = List(Repeat(CharacterMetadata.EMPTY, text.length));\n  }\n\n  return config;\n};\n\nvar ContentBlock = function (_ContentBlockRecord) {\n  _inherits(ContentBlock, _ContentBlockRecord);\n\n  function ContentBlock(config) {\n    _classCallCheck(this, ContentBlock);\n\n    return _possibleConstructorReturn(this, _ContentBlockRecord.call(this, decorateCharacterList(config)));\n  }\n\n  ContentBlock.prototype.getKey = function getKey() {\n    return this.get('key');\n  };\n\n  ContentBlock.prototype.getType = function getType() {\n    return this.get('type');\n  };\n\n  ContentBlock.prototype.getText = function getText() {\n    return this.get('text');\n  };\n\n  ContentBlock.prototype.getCharacterList = function getCharacterList() {\n    return this.get('characterList');\n  };\n\n  ContentBlock.prototype.getLength = function getLength() {\n    return this.getText().length;\n  };\n\n  ContentBlock.prototype.getDepth = function getDepth() {\n    return this.get('depth');\n  };\n\n  ContentBlock.prototype.getData = function getData() {\n    return this.get('data');\n  };\n\n  ContentBlock.prototype.getInlineStyleAt = function getInlineStyleAt(offset) {\n    var character = this.getCharacterList().get(offset);\n    return character ? character.getStyle() : EMPTY_SET;\n  };\n\n  ContentBlock.prototype.getEntityAt = function getEntityAt(offset) {\n    var character = this.getCharacterList().get(offset);\n    return character ? character.getEntity() : null;\n  };\n\n  /**\n   * Execute a callback for every contiguous range of styles within the block.\n   */\n\n\n  ContentBlock.prototype.findStyleRanges = function findStyleRanges(filterFn, callback) {\n    findRangesImmutable(this.getCharacterList(), haveEqualStyle, filterFn, callback);\n  };\n\n  /**\n   * Execute a callback for every contiguous range of entities within the block.\n   */\n\n\n  ContentBlock.prototype.findEntityRanges = function findEntityRanges(filterFn, callback) {\n    findRangesImmutable(this.getCharacterList(), haveEqualEntity, filterFn, callback);\n  };\n\n  return ContentBlock;\n}(ContentBlockRecord);\n\nfunction haveEqualStyle(charA, charB) {\n  return charA.getStyle() === charB.getStyle();\n}\n\nfunction haveEqualEntity(charA, charB) {\n  return charA.getEntity() === charB.getEntity();\n}\n\nmodule.exports = ContentBlock;"]},"metadata":{},"sourceType":"script"}