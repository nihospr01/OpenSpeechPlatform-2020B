{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftRemovableWord\n * @format\n * \n */\n'use strict';\n\nvar TokenizeUtil = require('fbjs/lib/TokenizeUtil');\n\nvar punctuation = TokenizeUtil.getPunctuation(); // The apostrophe and curly single quotes behave in a curious way: when\n// surrounded on both sides by word characters, they behave as word chars; when\n// either neighbor is punctuation or an end of the string, they behave as\n// punctuation.\n\nvar CHAMELEON_CHARS = \"['\\u2018\\u2019]\"; // Remove the underscore, which should count as part of the removable word. The\n// \"chameleon chars\" also count as punctuation in this regex.\n\nvar WHITESPACE_AND_PUNCTUATION = '\\\\s|(?![_])' + punctuation;\nvar DELETE_STRING = '^' + '(?:' + WHITESPACE_AND_PUNCTUATION + ')*' + '(?:' + CHAMELEON_CHARS + '|(?!' + WHITESPACE_AND_PUNCTUATION + ').)*' + '(?:(?!' + WHITESPACE_AND_PUNCTUATION + ').)';\nvar DELETE_REGEX = new RegExp(DELETE_STRING);\nvar BACKSPACE_STRING = '(?:(?!' + WHITESPACE_AND_PUNCTUATION + ').)' + '(?:' + CHAMELEON_CHARS + '|(?!' + WHITESPACE_AND_PUNCTUATION + ').)*' + '(?:' + WHITESPACE_AND_PUNCTUATION + ')*' + '$';\nvar BACKSPACE_REGEX = new RegExp(BACKSPACE_STRING);\n\nfunction getRemovableWord(text, isBackward) {\n  var matches = isBackward ? BACKSPACE_REGEX.exec(text) : DELETE_REGEX.exec(text);\n  return matches ? matches[0] : text;\n}\n\nvar DraftRemovableWord = {\n  getBackward: function getBackward(text) {\n    return getRemovableWord(text, true);\n  },\n  getForward: function getForward(text) {\n    return getRemovableWord(text, false);\n  }\n};\nmodule.exports = DraftRemovableWord;","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/draft-js/lib/DraftRemovableWord.js"],"names":["TokenizeUtil","require","punctuation","getPunctuation","CHAMELEON_CHARS","WHITESPACE_AND_PUNCTUATION","DELETE_STRING","DELETE_REGEX","RegExp","BACKSPACE_STRING","BACKSPACE_REGEX","getRemovableWord","text","isBackward","matches","exec","DraftRemovableWord","getBackward","getForward","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,uBAAD,CAA1B;;AAEA,IAAIC,WAAW,GAAGF,YAAY,CAACG,cAAb,EAAlB,C,CAEA;AACA;AACA;AACA;;AACA,IAAIC,eAAe,GAAG,iBAAtB,C,CAEA;AACA;;AACA,IAAIC,0BAA0B,GAAG,gBAAgBH,WAAjD;AAEA,IAAII,aAAa,GAAG,MAAM,KAAN,GAAcD,0BAAd,GAA2C,IAA3C,GAAkD,KAAlD,GAA0DD,eAA1D,GAA4E,MAA5E,GAAqFC,0BAArF,GAAkH,MAAlH,GAA2H,QAA3H,GAAsIA,0BAAtI,GAAmK,KAAvL;AACA,IAAIE,YAAY,GAAG,IAAIC,MAAJ,CAAWF,aAAX,CAAnB;AAEA,IAAIG,gBAAgB,GAAG,WAAWJ,0BAAX,GAAwC,KAAxC,GAAgD,KAAhD,GAAwDD,eAAxD,GAA0E,MAA1E,GAAmFC,0BAAnF,GAAgH,MAAhH,GAAyH,KAAzH,GAAiIA,0BAAjI,GAA8J,IAA9J,GAAqK,GAA5L;AACA,IAAIK,eAAe,GAAG,IAAIF,MAAJ,CAAWC,gBAAX,CAAtB;;AAEA,SAASE,gBAAT,CAA0BC,IAA1B,EAAgCC,UAAhC,EAA4C;AAC1C,MAAIC,OAAO,GAAGD,UAAU,GAAGH,eAAe,CAACK,IAAhB,CAAqBH,IAArB,CAAH,GAAgCL,YAAY,CAACQ,IAAb,CAAkBH,IAAlB,CAAxD;AACA,SAAOE,OAAO,GAAGA,OAAO,CAAC,CAAD,CAAV,GAAgBF,IAA9B;AACD;;AAED,IAAII,kBAAkB,GAAG;AACvBC,EAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBL,IAArB,EAA2B;AACtC,WAAOD,gBAAgB,CAACC,IAAD,EAAO,IAAP,CAAvB;AACD,GAHsB;AAKvBM,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBN,IAApB,EAA0B;AACpC,WAAOD,gBAAgB,CAACC,IAAD,EAAO,KAAP,CAAvB;AACD;AAPsB,CAAzB;AAUAO,MAAM,CAACC,OAAP,GAAiBJ,kBAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftRemovableWord\n * @format\n * \n */\n\n'use strict';\n\nvar TokenizeUtil = require('fbjs/lib/TokenizeUtil');\n\nvar punctuation = TokenizeUtil.getPunctuation();\n\n// The apostrophe and curly single quotes behave in a curious way: when\n// surrounded on both sides by word characters, they behave as word chars; when\n// either neighbor is punctuation or an end of the string, they behave as\n// punctuation.\nvar CHAMELEON_CHARS = '[\\'\\u2018\\u2019]';\n\n// Remove the underscore, which should count as part of the removable word. The\n// \"chameleon chars\" also count as punctuation in this regex.\nvar WHITESPACE_AND_PUNCTUATION = '\\\\s|(?![_])' + punctuation;\n\nvar DELETE_STRING = '^' + '(?:' + WHITESPACE_AND_PUNCTUATION + ')*' + '(?:' + CHAMELEON_CHARS + '|(?!' + WHITESPACE_AND_PUNCTUATION + ').)*' + '(?:(?!' + WHITESPACE_AND_PUNCTUATION + ').)';\nvar DELETE_REGEX = new RegExp(DELETE_STRING);\n\nvar BACKSPACE_STRING = '(?:(?!' + WHITESPACE_AND_PUNCTUATION + ').)' + '(?:' + CHAMELEON_CHARS + '|(?!' + WHITESPACE_AND_PUNCTUATION + ').)*' + '(?:' + WHITESPACE_AND_PUNCTUATION + ')*' + '$';\nvar BACKSPACE_REGEX = new RegExp(BACKSPACE_STRING);\n\nfunction getRemovableWord(text, isBackward) {\n  var matches = isBackward ? BACKSPACE_REGEX.exec(text) : DELETE_REGEX.exec(text);\n  return matches ? matches[0] : text;\n}\n\nvar DraftRemovableWord = {\n  getBackward: function getBackward(text) {\n    return getRemovableWord(text, true);\n  },\n\n  getForward: function getForward(text) {\n    return getRemovableWord(text, false);\n  }\n};\n\nmodule.exports = DraftRemovableWord;"]},"metadata":{},"sourceType":"script"}