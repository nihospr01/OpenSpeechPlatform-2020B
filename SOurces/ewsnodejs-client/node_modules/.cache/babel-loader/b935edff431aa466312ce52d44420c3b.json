{"ast":null,"code":"import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\n/* eslint-disable react/prefer-es6-class */\n\n/* eslint-disable prefer-promise-reject-errors */\n\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport unsafeLifecyclesPolyfill from 'rc-util/es/unsafeLifecyclesPolyfill';\nimport AsyncValidator from 'async-validator';\nimport warning from 'warning';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\nimport eq from 'lodash/eq';\nimport createFieldsStore from './createFieldsStore';\nimport { argumentContainer, identity, normalizeValidateRules, getValidateTriggers, getValueFromEvent, hasRules, getParams, isEmptyObject, flattenArray } from './utils';\nvar DEFAULT_TRIGGER = 'onChange';\n\nfunction createBaseForm() {\n  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var mixins = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var validateMessages = option.validateMessages,\n      onFieldsChange = option.onFieldsChange,\n      onValuesChange = option.onValuesChange,\n      _option$mapProps = option.mapProps,\n      mapProps = _option$mapProps === undefined ? identity : _option$mapProps,\n      mapPropsToFields = option.mapPropsToFields,\n      fieldNameProp = option.fieldNameProp,\n      fieldMetaProp = option.fieldMetaProp,\n      fieldDataProp = option.fieldDataProp,\n      _option$formPropName = option.formPropName,\n      formPropName = _option$formPropName === undefined ? 'form' : _option$formPropName,\n      formName = option.name,\n      withRef = option.withRef;\n  return function decorate(WrappedComponent) {\n    var Form = createReactClass({\n      displayName: 'Form',\n      mixins: mixins,\n      getInitialState: function getInitialState() {\n        var _this = this;\n\n        var fields = mapPropsToFields && mapPropsToFields(this.props);\n        this.fieldsStore = createFieldsStore(fields || {});\n        this.instances = {};\n        this.cachedBind = {};\n        this.clearedFieldMetaCache = {};\n        this.renderFields = {};\n        this.domFields = {}; // HACK: https://github.com/ant-design/ant-design/issues/6406\n\n        ['getFieldsValue', 'getFieldValue', 'setFieldsInitialValue', 'getFieldsError', 'getFieldError', 'isFieldValidating', 'isFieldsValidating', 'isFieldsTouched', 'isFieldTouched'].forEach(function (key) {\n          _this[key] = function () {\n            var _fieldsStore;\n\n            if (process.env.NODE_ENV !== 'production') {\n              warning(false, 'you should not use `ref` on enhanced form, please use `wrappedComponentRef`. ' + 'See: https://github.com/react-component/form#note-use-wrappedcomponentref-instead-of-withref-after-rc-form140');\n            }\n\n            return (_fieldsStore = _this.fieldsStore)[key].apply(_fieldsStore, arguments);\n          };\n        });\n        return {\n          submitting: false\n        };\n      },\n      componentDidMount: function componentDidMount() {\n        this.cleanUpUselessFields();\n      },\n      componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n        if (mapPropsToFields) {\n          this.fieldsStore.updateFields(mapPropsToFields(nextProps));\n        }\n      },\n      componentDidUpdate: function componentDidUpdate() {\n        this.cleanUpUselessFields();\n      },\n      onCollectCommon: function onCollectCommon(name, action, args) {\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n\n        if (fieldMeta[action]) {\n          fieldMeta[action].apply(fieldMeta, _toConsumableArray(args));\n        } else if (fieldMeta.originalProps && fieldMeta.originalProps[action]) {\n          var _fieldMeta$originalPr;\n\n          (_fieldMeta$originalPr = fieldMeta.originalProps)[action].apply(_fieldMeta$originalPr, _toConsumableArray(args));\n        }\n\n        var value = fieldMeta.getValueFromEvent ? fieldMeta.getValueFromEvent.apply(fieldMeta, _toConsumableArray(args)) : getValueFromEvent.apply(undefined, _toConsumableArray(args));\n\n        if (onValuesChange && value !== this.fieldsStore.getFieldValue(name)) {\n          var valuesAll = this.fieldsStore.getAllValues();\n          var valuesAllSet = {};\n          valuesAll[name] = value;\n          Object.keys(valuesAll).forEach(function (key) {\n            return set(valuesAllSet, key, valuesAll[key]);\n          });\n          onValuesChange(_extends(_defineProperty({}, formPropName, this.getForm()), this.props), set({}, name, value), valuesAllSet);\n        }\n\n        var field = this.fieldsStore.getField(name);\n        return {\n          name: name,\n          field: _extends({}, field, {\n            value: value,\n            touched: true\n          }),\n          fieldMeta: fieldMeta\n        };\n      },\n      onCollect: function onCollect(name_, action) {\n        for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n          args[_key - 2] = arguments[_key];\n        }\n\n        var _onCollectCommon = this.onCollectCommon(name_, action, args),\n            name = _onCollectCommon.name,\n            field = _onCollectCommon.field,\n            fieldMeta = _onCollectCommon.fieldMeta;\n\n        var validate = fieldMeta.validate;\n        this.fieldsStore.setFieldsAsDirty();\n\n        var newField = _extends({}, field, {\n          dirty: hasRules(validate)\n        });\n\n        this.setFields(_defineProperty({}, name, newField));\n      },\n      onCollectValidate: function onCollectValidate(name_, action) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          args[_key2 - 2] = arguments[_key2];\n        }\n\n        var _onCollectCommon2 = this.onCollectCommon(name_, action, args),\n            field = _onCollectCommon2.field,\n            fieldMeta = _onCollectCommon2.fieldMeta;\n\n        var newField = _extends({}, field, {\n          dirty: true\n        });\n\n        this.fieldsStore.setFieldsAsDirty();\n        this.validateFieldsInternal([newField], {\n          action: action,\n          options: {\n            firstFields: !!fieldMeta.validateFirst\n          }\n        });\n      },\n      getCacheBind: function getCacheBind(name, action, fn) {\n        if (!this.cachedBind[name]) {\n          this.cachedBind[name] = {};\n        }\n\n        var cache = this.cachedBind[name];\n\n        if (!cache[action] || cache[action].oriFn !== fn) {\n          cache[action] = {\n            fn: fn.bind(this, name, action),\n            oriFn: fn\n          };\n        }\n\n        return cache[action].fn;\n      },\n      getFieldDecorator: function getFieldDecorator(name, fieldOption) {\n        var _this2 = this;\n\n        var props = this.getFieldProps(name, fieldOption);\n        return function (fieldElem) {\n          // We should put field in record if it is rendered\n          _this2.renderFields[name] = true;\n\n          var fieldMeta = _this2.fieldsStore.getFieldMeta(name);\n\n          var originalProps = fieldElem.props;\n\n          if (process.env.NODE_ENV !== 'production') {\n            var valuePropName = fieldMeta.valuePropName;\n            warning(!(valuePropName in originalProps), '`getFieldDecorator` will override `' + valuePropName + '`, ' + ('so please don\\'t set `' + valuePropName + '` directly ') + 'and use `setFieldsValue` to set it.');\n            var defaultValuePropName = 'default' + valuePropName[0].toUpperCase() + valuePropName.slice(1);\n            warning(!(defaultValuePropName in originalProps), '`' + defaultValuePropName + '` is invalid ' + ('for `getFieldDecorator` will set `' + valuePropName + '`,') + ' please use `option.initialValue` instead.');\n          }\n\n          fieldMeta.originalProps = originalProps;\n          fieldMeta.ref = fieldElem.ref;\n          return React.cloneElement(fieldElem, _extends({}, props, _this2.fieldsStore.getFieldValuePropValue(fieldMeta)));\n        };\n      },\n      getFieldProps: function getFieldProps(name) {\n        var _this3 = this;\n\n        var usersFieldOption = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (!name) {\n          throw new Error('Must call `getFieldProps` with valid name string!');\n        }\n\n        if (process.env.NODE_ENV !== 'production') {\n          warning(this.fieldsStore.isValidNestedFieldName(name), 'One field name cannot be part of another, e.g. `a` and `a.b`. Check field: ' + name);\n          warning(!('exclusive' in usersFieldOption), '`option.exclusive` of `getFieldProps`|`getFieldDecorator` had been remove.');\n        }\n\n        delete this.clearedFieldMetaCache[name];\n\n        var fieldOption = _extends({\n          name: name,\n          trigger: DEFAULT_TRIGGER,\n          valuePropName: 'value',\n          validate: []\n        }, usersFieldOption);\n\n        var rules = fieldOption.rules,\n            trigger = fieldOption.trigger,\n            _fieldOption$validate = fieldOption.validateTrigger,\n            validateTrigger = _fieldOption$validate === undefined ? trigger : _fieldOption$validate,\n            validate = fieldOption.validate;\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n\n        if ('initialValue' in fieldOption) {\n          fieldMeta.initialValue = fieldOption.initialValue;\n        }\n\n        var inputProps = _extends({}, this.fieldsStore.getFieldValuePropValue(fieldOption), {\n          ref: this.getCacheBind(name, name + '__ref', this.saveRef)\n        });\n\n        if (fieldNameProp) {\n          inputProps[fieldNameProp] = formName ? formName + '_' + name : name;\n        }\n\n        var validateRules = normalizeValidateRules(validate, rules, validateTrigger);\n        var validateTriggers = getValidateTriggers(validateRules);\n        validateTriggers.forEach(function (action) {\n          if (inputProps[action]) return;\n          inputProps[action] = _this3.getCacheBind(name, action, _this3.onCollectValidate);\n        }); // make sure that the value will be collect\n\n        if (trigger && validateTriggers.indexOf(trigger) === -1) {\n          inputProps[trigger] = this.getCacheBind(name, trigger, this.onCollect);\n        }\n\n        var meta = _extends({}, fieldMeta, fieldOption, {\n          validate: validateRules\n        });\n\n        this.fieldsStore.setFieldMeta(name, meta);\n\n        if (fieldMetaProp) {\n          inputProps[fieldMetaProp] = meta;\n        }\n\n        if (fieldDataProp) {\n          inputProps[fieldDataProp] = this.fieldsStore.getField(name);\n        } // This field is rendered, record it\n\n\n        this.renderFields[name] = true;\n        return inputProps;\n      },\n      getFieldInstance: function getFieldInstance(name) {\n        return this.instances[name];\n      },\n      getRules: function getRules(fieldMeta, action) {\n        var actionRules = fieldMeta.validate.filter(function (item) {\n          return !action || item.trigger.indexOf(action) >= 0;\n        }).map(function (item) {\n          return item.rules;\n        });\n        return flattenArray(actionRules);\n      },\n      setFields: function setFields(maybeNestedFields, callback) {\n        var _this4 = this;\n\n        var fields = this.fieldsStore.flattenRegisteredFields(maybeNestedFields);\n        this.fieldsStore.setFields(fields);\n\n        if (onFieldsChange) {\n          var changedFields = Object.keys(fields).reduce(function (acc, name) {\n            return set(acc, name, _this4.fieldsStore.getField(name));\n          }, {});\n          onFieldsChange(_extends(_defineProperty({}, formPropName, this.getForm()), this.props), changedFields, this.fieldsStore.getNestedAllFields());\n        }\n\n        this.forceUpdate(callback);\n      },\n      setFieldsValue: function setFieldsValue(changedValues, callback) {\n        var fieldsMeta = this.fieldsStore.fieldsMeta;\n        var values = this.fieldsStore.flattenRegisteredFields(changedValues);\n        var newFields = Object.keys(values).reduce(function (acc, name) {\n          var isRegistered = fieldsMeta[name];\n\n          if (process.env.NODE_ENV !== 'production') {\n            warning(isRegistered, 'Cannot use `setFieldsValue` until ' + 'you use `getFieldDecorator` or `getFieldProps` to register it.');\n          }\n\n          if (isRegistered) {\n            var value = values[name];\n            acc[name] = {\n              value: value\n            };\n          }\n\n          return acc;\n        }, {});\n        this.setFields(newFields, callback);\n\n        if (onValuesChange) {\n          var allValues = this.fieldsStore.getAllValues();\n          onValuesChange(_extends(_defineProperty({}, formPropName, this.getForm()), this.props), changedValues, allValues);\n        }\n      },\n      saveRef: function saveRef(name, _, component) {\n        if (!component) {\n          var _fieldMeta = this.fieldsStore.getFieldMeta(name);\n\n          if (!_fieldMeta.preserve) {\n            // after destroy, delete data\n            this.clearedFieldMetaCache[name] = {\n              field: this.fieldsStore.getField(name),\n              meta: _fieldMeta\n            };\n            this.clearField(name);\n          }\n\n          delete this.domFields[name];\n          return;\n        }\n\n        this.domFields[name] = true;\n        this.recoverClearedField(name);\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n\n        if (fieldMeta) {\n          var ref = fieldMeta.ref;\n\n          if (ref) {\n            if (typeof ref === 'string') {\n              throw new Error('can not set ref string for ' + name);\n            } else if (typeof ref === 'function') {\n              ref(component);\n            } else if (Object.prototype.hasOwnProperty.call(ref, 'current')) {\n              ref.current = component;\n            }\n          }\n        }\n\n        this.instances[name] = component;\n      },\n      cleanUpUselessFields: function cleanUpUselessFields() {\n        var _this5 = this;\n\n        var fieldList = this.fieldsStore.getAllFieldsName();\n        var removedList = fieldList.filter(function (field) {\n          var fieldMeta = _this5.fieldsStore.getFieldMeta(field);\n\n          return !_this5.renderFields[field] && !_this5.domFields[field] && !fieldMeta.preserve;\n        });\n\n        if (removedList.length) {\n          removedList.forEach(this.clearField);\n        }\n\n        this.renderFields = {};\n      },\n      clearField: function clearField(name) {\n        this.fieldsStore.clearField(name);\n        delete this.instances[name];\n        delete this.cachedBind[name];\n      },\n      resetFields: function resetFields(ns) {\n        var _this6 = this;\n\n        var newFields = this.fieldsStore.resetFields(ns);\n\n        if (Object.keys(newFields).length > 0) {\n          this.setFields(newFields);\n        }\n\n        if (ns) {\n          var names = Array.isArray(ns) ? ns : [ns];\n          names.forEach(function (name) {\n            return delete _this6.clearedFieldMetaCache[name];\n          });\n        } else {\n          this.clearedFieldMetaCache = {};\n        }\n      },\n      recoverClearedField: function recoverClearedField(name) {\n        if (this.clearedFieldMetaCache[name]) {\n          this.fieldsStore.setFields(_defineProperty({}, name, this.clearedFieldMetaCache[name].field));\n          this.fieldsStore.setFieldMeta(name, this.clearedFieldMetaCache[name].meta);\n          delete this.clearedFieldMetaCache[name];\n        }\n      },\n      validateFieldsInternal: function validateFieldsInternal(fields, _ref, callback) {\n        var _this7 = this;\n\n        var fieldNames = _ref.fieldNames,\n            action = _ref.action,\n            _ref$options = _ref.options,\n            options = _ref$options === undefined ? {} : _ref$options;\n        var allRules = {};\n        var allValues = {};\n        var allFields = {};\n        var alreadyErrors = {};\n        fields.forEach(function (field) {\n          var name = field.name;\n\n          if (options.force !== true && field.dirty === false) {\n            if (field.errors) {\n              set(alreadyErrors, name, {\n                errors: field.errors\n              });\n            }\n\n            return;\n          }\n\n          var fieldMeta = _this7.fieldsStore.getFieldMeta(name);\n\n          var newField = _extends({}, field);\n\n          newField.errors = undefined;\n          newField.validating = true;\n          newField.dirty = true;\n          allRules[name] = _this7.getRules(fieldMeta, action);\n          allValues[name] = newField.value;\n          allFields[name] = newField;\n        });\n        this.setFields(allFields); // in case normalize\n\n        Object.keys(allValues).forEach(function (f) {\n          allValues[f] = _this7.fieldsStore.getFieldValue(f);\n        });\n\n        if (callback && isEmptyObject(allFields)) {\n          callback(isEmptyObject(alreadyErrors) ? null : alreadyErrors, this.fieldsStore.getFieldsValue(fieldNames));\n          return;\n        }\n\n        var validator = new AsyncValidator(allRules);\n\n        if (validateMessages) {\n          validator.messages(validateMessages);\n        }\n\n        validator.validate(allValues, options, function (errors) {\n          var errorsGroup = _extends({}, alreadyErrors);\n\n          if (errors && errors.length) {\n            errors.forEach(function (e) {\n              var errorFieldName = e.field;\n              var fieldName = errorFieldName; // Handle using array validation rule.\n              // ref: https://github.com/ant-design/ant-design/issues/14275\n\n              Object.keys(allRules).some(function (ruleFieldName) {\n                var rules = allRules[ruleFieldName] || []; // Exist if match rule\n\n                if (ruleFieldName === errorFieldName) {\n                  fieldName = ruleFieldName;\n                  return true;\n                } // Skip if not match array type\n\n\n                if (rules.every(function (_ref2) {\n                  var type = _ref2.type;\n                  return type !== 'array';\n                }) || errorFieldName.indexOf(ruleFieldName + '.') !== 0) {\n                  return false;\n                } // Exist if match the field name\n\n\n                var restPath = errorFieldName.slice(ruleFieldName.length + 1);\n\n                if (/^\\d+$/.test(restPath)) {\n                  fieldName = ruleFieldName;\n                  return true;\n                }\n\n                return false;\n              });\n              var field = get(errorsGroup, fieldName);\n\n              if (typeof field !== 'object' || Array.isArray(field)) {\n                set(errorsGroup, fieldName, {\n                  errors: []\n                });\n              }\n\n              var fieldErrors = get(errorsGroup, fieldName.concat('.errors'));\n              fieldErrors.push(e);\n            });\n          }\n\n          var expired = [];\n          var nowAllFields = {};\n          Object.keys(allRules).forEach(function (name) {\n            var fieldErrors = get(errorsGroup, name);\n\n            var nowField = _this7.fieldsStore.getField(name); // avoid concurrency problems\n\n\n            if (!eq(nowField.value, allValues[name])) {\n              expired.push({\n                name: name\n              });\n            } else {\n              nowField.errors = fieldErrors && fieldErrors.errors;\n              nowField.value = allValues[name];\n              nowField.validating = false;\n              nowField.dirty = false;\n              nowAllFields[name] = nowField;\n            }\n          });\n\n          _this7.setFields(nowAllFields);\n\n          if (callback) {\n            if (expired.length) {\n              expired.forEach(function (_ref3) {\n                var name = _ref3.name;\n                var fieldErrors = [{\n                  message: name + ' need to revalidate',\n                  field: name\n                }];\n                set(errorsGroup, name, {\n                  expired: true,\n                  errors: fieldErrors\n                });\n              });\n            }\n\n            callback(isEmptyObject(errorsGroup) ? null : errorsGroup, _this7.fieldsStore.getFieldsValue(fieldNames));\n          }\n        });\n      },\n      validateFields: function validateFields(ns, opt, cb) {\n        var _this8 = this;\n\n        var pending = new Promise(function (resolve, reject) {\n          var _getParams = getParams(ns, opt, cb),\n              names = _getParams.names,\n              options = _getParams.options;\n\n          var _getParams2 = getParams(ns, opt, cb),\n              callback = _getParams2.callback;\n\n          if (!callback || typeof callback === 'function') {\n            var oldCb = callback;\n\n            callback = function callback(errors, values) {\n              if (oldCb) {\n                oldCb(errors, values);\n              }\n\n              if (errors) {\n                reject({\n                  errors: errors,\n                  values: values\n                });\n              } else {\n                resolve(values);\n              }\n            };\n          }\n\n          var fieldNames = names ? _this8.fieldsStore.getValidFieldsFullName(names) : _this8.fieldsStore.getValidFieldsName();\n          var fields = fieldNames.filter(function (name) {\n            var fieldMeta = _this8.fieldsStore.getFieldMeta(name);\n\n            return hasRules(fieldMeta.validate);\n          }).map(function (name) {\n            var field = _this8.fieldsStore.getField(name);\n\n            field.value = _this8.fieldsStore.getFieldValue(name);\n            return field;\n          });\n\n          if (!fields.length) {\n            callback(null, _this8.fieldsStore.getFieldsValue(fieldNames));\n            return;\n          }\n\n          if (!('firstFields' in options)) {\n            options.firstFields = fieldNames.filter(function (name) {\n              var fieldMeta = _this8.fieldsStore.getFieldMeta(name);\n\n              return !!fieldMeta.validateFirst;\n            });\n          }\n\n          _this8.validateFieldsInternal(fields, {\n            fieldNames: fieldNames,\n            options: options\n          }, callback);\n        });\n        pending['catch'](function (e) {\n          // eslint-disable-next-line no-console\n          if (console.error && process.env.NODE_ENV !== 'production') {\n            // eslint-disable-next-line no-console\n            console.error(e);\n          }\n\n          return e;\n        });\n        return pending;\n      },\n      isSubmitting: function isSubmitting() {\n        if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n          warning(false, '`isSubmitting` is deprecated. ' + \"Actually, it's more convenient to handle submitting status by yourself.\");\n        }\n\n        return this.state.submitting;\n      },\n      submit: function submit(callback) {\n        var _this9 = this;\n\n        if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n          warning(false, '`submit` is deprecated. ' + \"Actually, it's more convenient to handle submitting status by yourself.\");\n        }\n\n        var fn = function fn() {\n          _this9.setState({\n            submitting: false\n          });\n        };\n\n        this.setState({\n          submitting: true\n        });\n        callback(fn);\n      },\n      render: function render() {\n        var _props = this.props,\n            wrappedComponentRef = _props.wrappedComponentRef,\n            restProps = _objectWithoutProperties(_props, ['wrappedComponentRef']); // eslint-disable-line\n\n\n        var formProps = _defineProperty({}, formPropName, this.getForm());\n\n        if (withRef) {\n          if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n            warning(false, '`withRef` is deprecated, please use `wrappedComponentRef` instead. ' + 'See: https://github.com/react-component/form#note-use-wrappedcomponentref-instead-of-withref-after-rc-form140');\n          }\n\n          formProps.ref = 'wrappedComponent';\n        } else if (wrappedComponentRef) {\n          formProps.ref = wrappedComponentRef;\n        }\n\n        var props = mapProps.call(this, _extends({}, formProps, restProps));\n        return React.createElement(WrappedComponent, props);\n      }\n    });\n    return argumentContainer(unsafeLifecyclesPolyfill(Form), WrappedComponent);\n  };\n}\n\nexport default createBaseForm;","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/rc-form/es/createBaseForm.js"],"names":["_objectWithoutProperties","_defineProperty","_extends","_toConsumableArray","React","createReactClass","unsafeLifecyclesPolyfill","AsyncValidator","warning","get","set","eq","createFieldsStore","argumentContainer","identity","normalizeValidateRules","getValidateTriggers","getValueFromEvent","hasRules","getParams","isEmptyObject","flattenArray","DEFAULT_TRIGGER","createBaseForm","option","arguments","length","undefined","mixins","validateMessages","onFieldsChange","onValuesChange","_option$mapProps","mapProps","mapPropsToFields","fieldNameProp","fieldMetaProp","fieldDataProp","_option$formPropName","formPropName","formName","name","withRef","decorate","WrappedComponent","Form","displayName","getInitialState","_this","fields","props","fieldsStore","instances","cachedBind","clearedFieldMetaCache","renderFields","domFields","forEach","key","_fieldsStore","process","env","NODE_ENV","apply","submitting","componentDidMount","cleanUpUselessFields","componentWillReceiveProps","nextProps","updateFields","componentDidUpdate","onCollectCommon","action","args","fieldMeta","getFieldMeta","originalProps","_fieldMeta$originalPr","value","getFieldValue","valuesAll","getAllValues","valuesAllSet","Object","keys","getForm","field","getField","touched","onCollect","name_","_len","Array","_key","_onCollectCommon","validate","setFieldsAsDirty","newField","dirty","setFields","onCollectValidate","_len2","_key2","_onCollectCommon2","validateFieldsInternal","options","firstFields","validateFirst","getCacheBind","fn","cache","oriFn","bind","getFieldDecorator","fieldOption","_this2","getFieldProps","fieldElem","valuePropName","defaultValuePropName","toUpperCase","slice","ref","cloneElement","getFieldValuePropValue","_this3","usersFieldOption","Error","isValidNestedFieldName","trigger","rules","_fieldOption$validate","validateTrigger","initialValue","inputProps","saveRef","validateRules","validateTriggers","indexOf","meta","setFieldMeta","getFieldInstance","getRules","actionRules","filter","item","map","maybeNestedFields","callback","_this4","flattenRegisteredFields","changedFields","reduce","acc","getNestedAllFields","forceUpdate","setFieldsValue","changedValues","fieldsMeta","values","newFields","isRegistered","allValues","_","component","_fieldMeta","preserve","clearField","recoverClearedField","prototype","hasOwnProperty","call","current","_this5","fieldList","getAllFieldsName","removedList","resetFields","ns","_this6","names","isArray","_ref","_this7","fieldNames","_ref$options","allRules","allFields","alreadyErrors","force","errors","validating","f","getFieldsValue","validator","messages","errorsGroup","e","errorFieldName","fieldName","some","ruleFieldName","every","_ref2","type","restPath","test","fieldErrors","concat","push","expired","nowAllFields","nowField","_ref3","message","validateFields","opt","cb","_this8","pending","Promise","resolve","reject","_getParams","_getParams2","oldCb","getValidFieldsFullName","getValidFieldsName","console","error","isSubmitting","state","submit","_this9","setState","render","_props","wrappedComponentRef","restProps","formProps","createElement"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\n/* eslint-disable react/prefer-es6-class */\n/* eslint-disable prefer-promise-reject-errors */\n\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport unsafeLifecyclesPolyfill from 'rc-util/es/unsafeLifecyclesPolyfill';\nimport AsyncValidator from 'async-validator';\nimport warning from 'warning';\nimport get from 'lodash/get';\nimport set from 'lodash/set';\nimport eq from 'lodash/eq';\nimport createFieldsStore from './createFieldsStore';\nimport { argumentContainer, identity, normalizeValidateRules, getValidateTriggers, getValueFromEvent, hasRules, getParams, isEmptyObject, flattenArray } from './utils';\n\nvar DEFAULT_TRIGGER = 'onChange';\n\nfunction createBaseForm() {\n  var option = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var mixins = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var validateMessages = option.validateMessages,\n      onFieldsChange = option.onFieldsChange,\n      onValuesChange = option.onValuesChange,\n      _option$mapProps = option.mapProps,\n      mapProps = _option$mapProps === undefined ? identity : _option$mapProps,\n      mapPropsToFields = option.mapPropsToFields,\n      fieldNameProp = option.fieldNameProp,\n      fieldMetaProp = option.fieldMetaProp,\n      fieldDataProp = option.fieldDataProp,\n      _option$formPropName = option.formPropName,\n      formPropName = _option$formPropName === undefined ? 'form' : _option$formPropName,\n      formName = option.name,\n      withRef = option.withRef;\n\n\n  return function decorate(WrappedComponent) {\n    var Form = createReactClass({\n      displayName: 'Form',\n\n      mixins: mixins,\n\n      getInitialState: function getInitialState() {\n        var _this = this;\n\n        var fields = mapPropsToFields && mapPropsToFields(this.props);\n        this.fieldsStore = createFieldsStore(fields || {});\n\n        this.instances = {};\n        this.cachedBind = {};\n        this.clearedFieldMetaCache = {};\n\n        this.renderFields = {};\n        this.domFields = {};\n\n        // HACK: https://github.com/ant-design/ant-design/issues/6406\n        ['getFieldsValue', 'getFieldValue', 'setFieldsInitialValue', 'getFieldsError', 'getFieldError', 'isFieldValidating', 'isFieldsValidating', 'isFieldsTouched', 'isFieldTouched'].forEach(function (key) {\n          _this[key] = function () {\n            var _fieldsStore;\n\n            if (process.env.NODE_ENV !== 'production') {\n              warning(false, 'you should not use `ref` on enhanced form, please use `wrappedComponentRef`. ' + 'See: https://github.com/react-component/form#note-use-wrappedcomponentref-instead-of-withref-after-rc-form140');\n            }\n            return (_fieldsStore = _this.fieldsStore)[key].apply(_fieldsStore, arguments);\n          };\n        });\n\n        return {\n          submitting: false\n        };\n      },\n      componentDidMount: function componentDidMount() {\n        this.cleanUpUselessFields();\n      },\n      componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n        if (mapPropsToFields) {\n          this.fieldsStore.updateFields(mapPropsToFields(nextProps));\n        }\n      },\n      componentDidUpdate: function componentDidUpdate() {\n        this.cleanUpUselessFields();\n      },\n      onCollectCommon: function onCollectCommon(name, action, args) {\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n        if (fieldMeta[action]) {\n          fieldMeta[action].apply(fieldMeta, _toConsumableArray(args));\n        } else if (fieldMeta.originalProps && fieldMeta.originalProps[action]) {\n          var _fieldMeta$originalPr;\n\n          (_fieldMeta$originalPr = fieldMeta.originalProps)[action].apply(_fieldMeta$originalPr, _toConsumableArray(args));\n        }\n        var value = fieldMeta.getValueFromEvent ? fieldMeta.getValueFromEvent.apply(fieldMeta, _toConsumableArray(args)) : getValueFromEvent.apply(undefined, _toConsumableArray(args));\n        if (onValuesChange && value !== this.fieldsStore.getFieldValue(name)) {\n          var valuesAll = this.fieldsStore.getAllValues();\n          var valuesAllSet = {};\n          valuesAll[name] = value;\n          Object.keys(valuesAll).forEach(function (key) {\n            return set(valuesAllSet, key, valuesAll[key]);\n          });\n          onValuesChange(_extends(_defineProperty({}, formPropName, this.getForm()), this.props), set({}, name, value), valuesAllSet);\n        }\n        var field = this.fieldsStore.getField(name);\n        return { name: name, field: _extends({}, field, { value: value, touched: true }), fieldMeta: fieldMeta };\n      },\n      onCollect: function onCollect(name_, action) {\n        for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n          args[_key - 2] = arguments[_key];\n        }\n\n        var _onCollectCommon = this.onCollectCommon(name_, action, args),\n            name = _onCollectCommon.name,\n            field = _onCollectCommon.field,\n            fieldMeta = _onCollectCommon.fieldMeta;\n\n        var validate = fieldMeta.validate;\n\n\n        this.fieldsStore.setFieldsAsDirty();\n\n        var newField = _extends({}, field, {\n          dirty: hasRules(validate)\n        });\n        this.setFields(_defineProperty({}, name, newField));\n      },\n      onCollectValidate: function onCollectValidate(name_, action) {\n        for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n          args[_key2 - 2] = arguments[_key2];\n        }\n\n        var _onCollectCommon2 = this.onCollectCommon(name_, action, args),\n            field = _onCollectCommon2.field,\n            fieldMeta = _onCollectCommon2.fieldMeta;\n\n        var newField = _extends({}, field, {\n          dirty: true\n        });\n\n        this.fieldsStore.setFieldsAsDirty();\n\n        this.validateFieldsInternal([newField], {\n          action: action,\n          options: {\n            firstFields: !!fieldMeta.validateFirst\n          }\n        });\n      },\n      getCacheBind: function getCacheBind(name, action, fn) {\n        if (!this.cachedBind[name]) {\n          this.cachedBind[name] = {};\n        }\n        var cache = this.cachedBind[name];\n        if (!cache[action] || cache[action].oriFn !== fn) {\n          cache[action] = {\n            fn: fn.bind(this, name, action),\n            oriFn: fn\n          };\n        }\n        return cache[action].fn;\n      },\n      getFieldDecorator: function getFieldDecorator(name, fieldOption) {\n        var _this2 = this;\n\n        var props = this.getFieldProps(name, fieldOption);\n        return function (fieldElem) {\n          // We should put field in record if it is rendered\n          _this2.renderFields[name] = true;\n\n          var fieldMeta = _this2.fieldsStore.getFieldMeta(name);\n          var originalProps = fieldElem.props;\n          if (process.env.NODE_ENV !== 'production') {\n            var valuePropName = fieldMeta.valuePropName;\n            warning(!(valuePropName in originalProps), '`getFieldDecorator` will override `' + valuePropName + '`, ' + ('so please don\\'t set `' + valuePropName + '` directly ') + 'and use `setFieldsValue` to set it.');\n            var defaultValuePropName = 'default' + valuePropName[0].toUpperCase() + valuePropName.slice(1);\n            warning(!(defaultValuePropName in originalProps), '`' + defaultValuePropName + '` is invalid ' + ('for `getFieldDecorator` will set `' + valuePropName + '`,') + ' please use `option.initialValue` instead.');\n          }\n          fieldMeta.originalProps = originalProps;\n          fieldMeta.ref = fieldElem.ref;\n          return React.cloneElement(fieldElem, _extends({}, props, _this2.fieldsStore.getFieldValuePropValue(fieldMeta)));\n        };\n      },\n      getFieldProps: function getFieldProps(name) {\n        var _this3 = this;\n\n        var usersFieldOption = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        if (!name) {\n          throw new Error('Must call `getFieldProps` with valid name string!');\n        }\n        if (process.env.NODE_ENV !== 'production') {\n          warning(this.fieldsStore.isValidNestedFieldName(name), 'One field name cannot be part of another, e.g. `a` and `a.b`. Check field: ' + name);\n          warning(!('exclusive' in usersFieldOption), '`option.exclusive` of `getFieldProps`|`getFieldDecorator` had been remove.');\n        }\n\n        delete this.clearedFieldMetaCache[name];\n\n        var fieldOption = _extends({\n          name: name,\n          trigger: DEFAULT_TRIGGER,\n          valuePropName: 'value',\n          validate: []\n        }, usersFieldOption);\n\n        var rules = fieldOption.rules,\n            trigger = fieldOption.trigger,\n            _fieldOption$validate = fieldOption.validateTrigger,\n            validateTrigger = _fieldOption$validate === undefined ? trigger : _fieldOption$validate,\n            validate = fieldOption.validate;\n\n\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n        if ('initialValue' in fieldOption) {\n          fieldMeta.initialValue = fieldOption.initialValue;\n        }\n\n        var inputProps = _extends({}, this.fieldsStore.getFieldValuePropValue(fieldOption), {\n          ref: this.getCacheBind(name, name + '__ref', this.saveRef)\n        });\n        if (fieldNameProp) {\n          inputProps[fieldNameProp] = formName ? formName + '_' + name : name;\n        }\n\n        var validateRules = normalizeValidateRules(validate, rules, validateTrigger);\n        var validateTriggers = getValidateTriggers(validateRules);\n        validateTriggers.forEach(function (action) {\n          if (inputProps[action]) return;\n          inputProps[action] = _this3.getCacheBind(name, action, _this3.onCollectValidate);\n        });\n\n        // make sure that the value will be collect\n        if (trigger && validateTriggers.indexOf(trigger) === -1) {\n          inputProps[trigger] = this.getCacheBind(name, trigger, this.onCollect);\n        }\n\n        var meta = _extends({}, fieldMeta, fieldOption, {\n          validate: validateRules\n        });\n        this.fieldsStore.setFieldMeta(name, meta);\n        if (fieldMetaProp) {\n          inputProps[fieldMetaProp] = meta;\n        }\n\n        if (fieldDataProp) {\n          inputProps[fieldDataProp] = this.fieldsStore.getField(name);\n        }\n\n        // This field is rendered, record it\n        this.renderFields[name] = true;\n\n        return inputProps;\n      },\n      getFieldInstance: function getFieldInstance(name) {\n        return this.instances[name];\n      },\n      getRules: function getRules(fieldMeta, action) {\n        var actionRules = fieldMeta.validate.filter(function (item) {\n          return !action || item.trigger.indexOf(action) >= 0;\n        }).map(function (item) {\n          return item.rules;\n        });\n        return flattenArray(actionRules);\n      },\n      setFields: function setFields(maybeNestedFields, callback) {\n        var _this4 = this;\n\n        var fields = this.fieldsStore.flattenRegisteredFields(maybeNestedFields);\n        this.fieldsStore.setFields(fields);\n        if (onFieldsChange) {\n          var changedFields = Object.keys(fields).reduce(function (acc, name) {\n            return set(acc, name, _this4.fieldsStore.getField(name));\n          }, {});\n          onFieldsChange(_extends(_defineProperty({}, formPropName, this.getForm()), this.props), changedFields, this.fieldsStore.getNestedAllFields());\n        }\n        this.forceUpdate(callback);\n      },\n      setFieldsValue: function setFieldsValue(changedValues, callback) {\n        var fieldsMeta = this.fieldsStore.fieldsMeta;\n\n        var values = this.fieldsStore.flattenRegisteredFields(changedValues);\n        var newFields = Object.keys(values).reduce(function (acc, name) {\n          var isRegistered = fieldsMeta[name];\n          if (process.env.NODE_ENV !== 'production') {\n            warning(isRegistered, 'Cannot use `setFieldsValue` until ' + 'you use `getFieldDecorator` or `getFieldProps` to register it.');\n          }\n          if (isRegistered) {\n            var value = values[name];\n            acc[name] = {\n              value: value\n            };\n          }\n          return acc;\n        }, {});\n        this.setFields(newFields, callback);\n        if (onValuesChange) {\n          var allValues = this.fieldsStore.getAllValues();\n          onValuesChange(_extends(_defineProperty({}, formPropName, this.getForm()), this.props), changedValues, allValues);\n        }\n      },\n      saveRef: function saveRef(name, _, component) {\n        if (!component) {\n          var _fieldMeta = this.fieldsStore.getFieldMeta(name);\n          if (!_fieldMeta.preserve) {\n            // after destroy, delete data\n            this.clearedFieldMetaCache[name] = {\n              field: this.fieldsStore.getField(name),\n              meta: _fieldMeta\n            };\n            this.clearField(name);\n          }\n          delete this.domFields[name];\n          return;\n        }\n        this.domFields[name] = true;\n        this.recoverClearedField(name);\n        var fieldMeta = this.fieldsStore.getFieldMeta(name);\n        if (fieldMeta) {\n          var ref = fieldMeta.ref;\n          if (ref) {\n            if (typeof ref === 'string') {\n              throw new Error('can not set ref string for ' + name);\n            } else if (typeof ref === 'function') {\n              ref(component);\n            } else if (Object.prototype.hasOwnProperty.call(ref, 'current')) {\n              ref.current = component;\n            }\n          }\n        }\n        this.instances[name] = component;\n      },\n      cleanUpUselessFields: function cleanUpUselessFields() {\n        var _this5 = this;\n\n        var fieldList = this.fieldsStore.getAllFieldsName();\n        var removedList = fieldList.filter(function (field) {\n          var fieldMeta = _this5.fieldsStore.getFieldMeta(field);\n          return !_this5.renderFields[field] && !_this5.domFields[field] && !fieldMeta.preserve;\n        });\n        if (removedList.length) {\n          removedList.forEach(this.clearField);\n        }\n        this.renderFields = {};\n      },\n      clearField: function clearField(name) {\n        this.fieldsStore.clearField(name);\n        delete this.instances[name];\n        delete this.cachedBind[name];\n      },\n      resetFields: function resetFields(ns) {\n        var _this6 = this;\n\n        var newFields = this.fieldsStore.resetFields(ns);\n        if (Object.keys(newFields).length > 0) {\n          this.setFields(newFields);\n        }\n        if (ns) {\n          var names = Array.isArray(ns) ? ns : [ns];\n          names.forEach(function (name) {\n            return delete _this6.clearedFieldMetaCache[name];\n          });\n        } else {\n          this.clearedFieldMetaCache = {};\n        }\n      },\n      recoverClearedField: function recoverClearedField(name) {\n        if (this.clearedFieldMetaCache[name]) {\n          this.fieldsStore.setFields(_defineProperty({}, name, this.clearedFieldMetaCache[name].field));\n          this.fieldsStore.setFieldMeta(name, this.clearedFieldMetaCache[name].meta);\n          delete this.clearedFieldMetaCache[name];\n        }\n      },\n      validateFieldsInternal: function validateFieldsInternal(fields, _ref, callback) {\n        var _this7 = this;\n\n        var fieldNames = _ref.fieldNames,\n            action = _ref.action,\n            _ref$options = _ref.options,\n            options = _ref$options === undefined ? {} : _ref$options;\n\n        var allRules = {};\n        var allValues = {};\n        var allFields = {};\n        var alreadyErrors = {};\n        fields.forEach(function (field) {\n          var name = field.name;\n          if (options.force !== true && field.dirty === false) {\n            if (field.errors) {\n              set(alreadyErrors, name, { errors: field.errors });\n            }\n            return;\n          }\n          var fieldMeta = _this7.fieldsStore.getFieldMeta(name);\n          var newField = _extends({}, field);\n          newField.errors = undefined;\n          newField.validating = true;\n          newField.dirty = true;\n          allRules[name] = _this7.getRules(fieldMeta, action);\n          allValues[name] = newField.value;\n          allFields[name] = newField;\n        });\n        this.setFields(allFields);\n        // in case normalize\n        Object.keys(allValues).forEach(function (f) {\n          allValues[f] = _this7.fieldsStore.getFieldValue(f);\n        });\n        if (callback && isEmptyObject(allFields)) {\n          callback(isEmptyObject(alreadyErrors) ? null : alreadyErrors, this.fieldsStore.getFieldsValue(fieldNames));\n          return;\n        }\n        var validator = new AsyncValidator(allRules);\n        if (validateMessages) {\n          validator.messages(validateMessages);\n        }\n        validator.validate(allValues, options, function (errors) {\n          var errorsGroup = _extends({}, alreadyErrors);\n          if (errors && errors.length) {\n            errors.forEach(function (e) {\n              var errorFieldName = e.field;\n              var fieldName = errorFieldName;\n\n              // Handle using array validation rule.\n              // ref: https://github.com/ant-design/ant-design/issues/14275\n              Object.keys(allRules).some(function (ruleFieldName) {\n                var rules = allRules[ruleFieldName] || [];\n\n                // Exist if match rule\n                if (ruleFieldName === errorFieldName) {\n                  fieldName = ruleFieldName;\n                  return true;\n                }\n\n                // Skip if not match array type\n                if (rules.every(function (_ref2) {\n                  var type = _ref2.type;\n                  return type !== 'array';\n                }) || errorFieldName.indexOf(ruleFieldName + '.') !== 0) {\n                  return false;\n                }\n\n                // Exist if match the field name\n                var restPath = errorFieldName.slice(ruleFieldName.length + 1);\n                if (/^\\d+$/.test(restPath)) {\n                  fieldName = ruleFieldName;\n                  return true;\n                }\n\n                return false;\n              });\n\n              var field = get(errorsGroup, fieldName);\n              if (typeof field !== 'object' || Array.isArray(field)) {\n                set(errorsGroup, fieldName, { errors: [] });\n              }\n              var fieldErrors = get(errorsGroup, fieldName.concat('.errors'));\n              fieldErrors.push(e);\n            });\n          }\n          var expired = [];\n          var nowAllFields = {};\n          Object.keys(allRules).forEach(function (name) {\n            var fieldErrors = get(errorsGroup, name);\n            var nowField = _this7.fieldsStore.getField(name);\n            // avoid concurrency problems\n            if (!eq(nowField.value, allValues[name])) {\n              expired.push({\n                name: name\n              });\n            } else {\n              nowField.errors = fieldErrors && fieldErrors.errors;\n              nowField.value = allValues[name];\n              nowField.validating = false;\n              nowField.dirty = false;\n              nowAllFields[name] = nowField;\n            }\n          });\n          _this7.setFields(nowAllFields);\n          if (callback) {\n            if (expired.length) {\n              expired.forEach(function (_ref3) {\n                var name = _ref3.name;\n\n                var fieldErrors = [{\n                  message: name + ' need to revalidate',\n                  field: name\n                }];\n                set(errorsGroup, name, {\n                  expired: true,\n                  errors: fieldErrors\n                });\n              });\n            }\n\n            callback(isEmptyObject(errorsGroup) ? null : errorsGroup, _this7.fieldsStore.getFieldsValue(fieldNames));\n          }\n        });\n      },\n      validateFields: function validateFields(ns, opt, cb) {\n        var _this8 = this;\n\n        var pending = new Promise(function (resolve, reject) {\n          var _getParams = getParams(ns, opt, cb),\n              names = _getParams.names,\n              options = _getParams.options;\n\n          var _getParams2 = getParams(ns, opt, cb),\n              callback = _getParams2.callback;\n\n          if (!callback || typeof callback === 'function') {\n            var oldCb = callback;\n            callback = function callback(errors, values) {\n              if (oldCb) {\n                oldCb(errors, values);\n              }\n              if (errors) {\n                reject({ errors: errors, values: values });\n              } else {\n                resolve(values);\n              }\n            };\n          }\n          var fieldNames = names ? _this8.fieldsStore.getValidFieldsFullName(names) : _this8.fieldsStore.getValidFieldsName();\n          var fields = fieldNames.filter(function (name) {\n            var fieldMeta = _this8.fieldsStore.getFieldMeta(name);\n            return hasRules(fieldMeta.validate);\n          }).map(function (name) {\n            var field = _this8.fieldsStore.getField(name);\n            field.value = _this8.fieldsStore.getFieldValue(name);\n            return field;\n          });\n          if (!fields.length) {\n            callback(null, _this8.fieldsStore.getFieldsValue(fieldNames));\n            return;\n          }\n          if (!('firstFields' in options)) {\n            options.firstFields = fieldNames.filter(function (name) {\n              var fieldMeta = _this8.fieldsStore.getFieldMeta(name);\n              return !!fieldMeta.validateFirst;\n            });\n          }\n          _this8.validateFieldsInternal(fields, {\n            fieldNames: fieldNames,\n            options: options\n          }, callback);\n        });\n        pending['catch'](function (e) {\n          // eslint-disable-next-line no-console\n          if (console.error && process.env.NODE_ENV !== 'production') {\n            // eslint-disable-next-line no-console\n            console.error(e);\n          }\n          return e;\n        });\n        return pending;\n      },\n      isSubmitting: function isSubmitting() {\n        if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n          warning(false, '`isSubmitting` is deprecated. ' + \"Actually, it's more convenient to handle submitting status by yourself.\");\n        }\n        return this.state.submitting;\n      },\n      submit: function submit(callback) {\n        var _this9 = this;\n\n        if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n          warning(false, '`submit` is deprecated. ' + \"Actually, it's more convenient to handle submitting status by yourself.\");\n        }\n        var fn = function fn() {\n          _this9.setState({\n            submitting: false\n          });\n        };\n        this.setState({\n          submitting: true\n        });\n        callback(fn);\n      },\n      render: function render() {\n        var _props = this.props,\n            wrappedComponentRef = _props.wrappedComponentRef,\n            restProps = _objectWithoutProperties(_props, ['wrappedComponentRef']); // eslint-disable-line\n\n\n        var formProps = _defineProperty({}, formPropName, this.getForm());\n        if (withRef) {\n          if (process.env.NODE_ENV !== 'production' && process.env.NODE_ENV !== 'test') {\n            warning(false, '`withRef` is deprecated, please use `wrappedComponentRef` instead. ' + 'See: https://github.com/react-component/form#note-use-wrappedcomponentref-instead-of-withref-after-rc-form140');\n          }\n          formProps.ref = 'wrappedComponent';\n        } else if (wrappedComponentRef) {\n          formProps.ref = wrappedComponentRef;\n        }\n        var props = mapProps.call(this, _extends({}, formProps, restProps));\n        return React.createElement(WrappedComponent, props);\n      }\n    });\n\n    return argumentContainer(unsafeLifecyclesPolyfill(Form), WrappedComponent);\n  };\n}\n\nexport default createBaseForm;"]},"metadata":{},"sourceType":"module"}