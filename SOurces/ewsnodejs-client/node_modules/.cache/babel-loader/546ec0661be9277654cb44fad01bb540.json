{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport { Map } from 'immutable';\n\nvar ConfigStore = function () {\n  function ConfigStore() {\n    _classCallCheck(this, ConfigStore);\n\n    this._store = Map();\n  }\n\n  ConfigStore.prototype.set = function set(key, value) {\n    this._store = this._store.set(key, value);\n  };\n\n  ConfigStore.prototype.get = function get(key) {\n    return this._store.get(key);\n  };\n\n  return ConfigStore;\n}();\n\nexport default ConfigStore;","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/rc-editor-core/es/EditorCore/ConfigStore.js"],"names":["_classCallCheck","instance","Constructor","TypeError","Map","ConfigStore","_store","prototype","set","key","value","get"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,GAAT,QAAoB,WAApB;;AAEA,IAAIC,WAAW,GAAG,YAAY;AAC1B,WAASA,WAAT,GAAuB;AACnBL,IAAAA,eAAe,CAAC,IAAD,EAAOK,WAAP,CAAf;;AAEA,SAAKC,MAAL,GAAcF,GAAG,EAAjB;AACH;;AAEDC,EAAAA,WAAW,CAACE,SAAZ,CAAsBC,GAAtB,GAA4B,SAASA,GAAT,CAAaC,GAAb,EAAkBC,KAAlB,EAAyB;AACjD,SAAKJ,MAAL,GAAc,KAAKA,MAAL,CAAYE,GAAZ,CAAgBC,GAAhB,EAAqBC,KAArB,CAAd;AACH,GAFD;;AAIAL,EAAAA,WAAW,CAACE,SAAZ,CAAsBI,GAAtB,GAA4B,SAASA,GAAT,CAAaF,GAAb,EAAkB;AAC1C,WAAO,KAAKH,MAAL,CAAYK,GAAZ,CAAgBF,GAAhB,CAAP;AACH,GAFD;;AAIA,SAAOJ,WAAP;AACH,CAhBiB,EAAlB;;AAkBA,eAAeA,WAAf","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { Map } from 'immutable';\n\nvar ConfigStore = function () {\n    function ConfigStore() {\n        _classCallCheck(this, ConfigStore);\n\n        this._store = Map();\n    }\n\n    ConfigStore.prototype.set = function set(key, value) {\n        this._store = this._store.set(key, value);\n    };\n\n    ConfigStore.prototype.get = function get(key) {\n        return this._store.get(key);\n    };\n\n    return ConfigStore;\n}();\n\nexport default ConfigStore;"]},"metadata":{},"sourceType":"module"}