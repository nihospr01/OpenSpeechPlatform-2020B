{"ast":null,"code":"import adder from \"./adder.js\";\nimport { abs, atan2, cos, radians, sin, sqrt } from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function (object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/d3-geo/src/length.js"],"names":["adder","abs","atan2","cos","radians","sin","sqrt","noop","stream","lengthSum","lambda0","sinPhi0","cosPhi0","lengthStream","sphere","point","lineStart","lengthLineStart","lineEnd","polygonStart","polygonEnd","lengthPointFirst","lengthLineEnd","lambda","phi","lengthPoint","sinPhi","cosPhi","delta","cosDelta","sinDelta","x","y","z","add","object","reset"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAAQC,GAAR,EAAaC,KAAb,EAAoBC,GAApB,EAAyBC,OAAzB,EAAkCC,GAAlC,EAAuCC,IAAvC,QAAkD,WAAlD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,IAAIC,SAAS,GAAGT,KAAK,EAArB;AAAA,IACIU,OADJ;AAAA,IAEIC,OAFJ;AAAA,IAGIC,OAHJ;AAKA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAEP,IADS;AAEjBQ,EAAAA,KAAK,EAAER,IAFU;AAGjBS,EAAAA,SAAS,EAAEC,eAHM;AAIjBC,EAAAA,OAAO,EAAEX,IAJQ;AAKjBY,EAAAA,YAAY,EAAEZ,IALG;AAMjBa,EAAAA,UAAU,EAAEb;AANK,CAAnB;;AASA,SAASU,eAAT,GAA2B;AACzBJ,EAAAA,YAAY,CAACE,KAAb,GAAqBM,gBAArB;AACAR,EAAAA,YAAY,CAACK,OAAb,GAAuBI,aAAvB;AACD;;AAED,SAASA,aAAT,GAAyB;AACvBT,EAAAA,YAAY,CAACE,KAAb,GAAqBF,YAAY,CAACK,OAAb,GAAuBX,IAA5C;AACD;;AAED,SAASc,gBAAT,CAA0BE,MAA1B,EAAkCC,GAAlC,EAAuC;AACrCD,EAAAA,MAAM,IAAInB,OAAV,EAAmBoB,GAAG,IAAIpB,OAA1B;AACAM,EAAAA,OAAO,GAAGa,MAAV,EAAkBZ,OAAO,GAAGN,GAAG,CAACmB,GAAD,CAA/B,EAAsCZ,OAAO,GAAGT,GAAG,CAACqB,GAAD,CAAnD;AACAX,EAAAA,YAAY,CAACE,KAAb,GAAqBU,WAArB;AACD;;AAED,SAASA,WAAT,CAAqBF,MAArB,EAA6BC,GAA7B,EAAkC;AAChCD,EAAAA,MAAM,IAAInB,OAAV,EAAmBoB,GAAG,IAAIpB,OAA1B;AACA,MAAIsB,MAAM,GAAGrB,GAAG,CAACmB,GAAD,CAAhB;AAAA,MACIG,MAAM,GAAGxB,GAAG,CAACqB,GAAD,CADhB;AAAA,MAEII,KAAK,GAAG3B,GAAG,CAACsB,MAAM,GAAGb,OAAV,CAFf;AAAA,MAGImB,QAAQ,GAAG1B,GAAG,CAACyB,KAAD,CAHlB;AAAA,MAIIE,QAAQ,GAAGzB,GAAG,CAACuB,KAAD,CAJlB;AAAA,MAKIG,CAAC,GAAGJ,MAAM,GAAGG,QALjB;AAAA,MAMIE,CAAC,GAAGpB,OAAO,GAAGc,MAAV,GAAmBf,OAAO,GAAGgB,MAAV,GAAmBE,QAN9C;AAAA,MAOII,CAAC,GAAGtB,OAAO,GAAGe,MAAV,GAAmBd,OAAO,GAAGe,MAAV,GAAmBE,QAP9C;AAQApB,EAAAA,SAAS,CAACyB,GAAV,CAAchC,KAAK,CAACI,IAAI,CAACyB,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAb,CAAL,EAAsBC,CAAtB,CAAnB;AACAvB,EAAAA,OAAO,GAAGa,MAAV,EAAkBZ,OAAO,GAAGe,MAA5B,EAAoCd,OAAO,GAAGe,MAA9C;AACD;;AAED,eAAe,UAASQ,MAAT,EAAiB;AAC9B1B,EAAAA,SAAS,CAAC2B,KAAV;AACA5B,EAAAA,MAAM,CAAC2B,MAAD,EAAStB,YAAT,CAAN;AACA,SAAO,CAACJ,SAAR;AACD","sourcesContent":["import adder from \"./adder.js\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n"]},"metadata":{},"sourceType":"module"}