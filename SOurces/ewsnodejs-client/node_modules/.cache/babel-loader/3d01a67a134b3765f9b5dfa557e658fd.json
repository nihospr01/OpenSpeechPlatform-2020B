{"ast":null,"code":"import interval from \"./interval.js\";\nvar utcYear = interval(function (date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function (start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function (date) {\n  return date.getUTCFullYear();\n}); // An optimized implementation for this simple case.\n\nutcYear.every = function (k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function (date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/d3-time/src/utcYear.js"],"names":["interval","utcYear","date","setUTCMonth","setUTCHours","step","setUTCFullYear","getUTCFullYear","start","end","every","k","isFinite","Math","floor","utcYears","range"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,eAArB;AAEA,IAAIC,OAAO,GAAGD,QAAQ,CAAC,UAASE,IAAT,EAAe;AACpCA,EAAAA,IAAI,CAACC,WAAL,CAAiB,CAAjB,EAAoB,CAApB;AACAD,EAAAA,IAAI,CAACE,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACD,CAHqB,EAGnB,UAASF,IAAT,EAAeG,IAAf,EAAqB;AACtBH,EAAAA,IAAI,CAACI,cAAL,CAAoBJ,IAAI,CAACK,cAAL,KAAwBF,IAA5C;AACD,CALqB,EAKnB,UAASG,KAAT,EAAgBC,GAAhB,EAAqB;AACtB,SAAOA,GAAG,CAACF,cAAJ,KAAuBC,KAAK,CAACD,cAAN,EAA9B;AACD,CAPqB,EAOnB,UAASL,IAAT,EAAe;AAChB,SAAOA,IAAI,CAACK,cAAL,EAAP;AACD,CATqB,CAAtB,C,CAWA;;AACAN,OAAO,CAACS,KAAR,GAAgB,UAASC,CAAT,EAAY;AAC1B,SAAO,CAACC,QAAQ,CAACD,CAAC,GAAGE,IAAI,CAACC,KAAL,CAAWH,CAAX,CAAL,CAAT,IAAgC,EAAEA,CAAC,GAAG,CAAN,CAAhC,GAA2C,IAA3C,GAAkDX,QAAQ,CAAC,UAASE,IAAT,EAAe;AAC/EA,IAAAA,IAAI,CAACI,cAAL,CAAoBO,IAAI,CAACC,KAAL,CAAWZ,IAAI,CAACK,cAAL,KAAwBI,CAAnC,IAAwCA,CAA5D;AACAT,IAAAA,IAAI,CAACC,WAAL,CAAiB,CAAjB,EAAoB,CAApB;AACAD,IAAAA,IAAI,CAACE,WAAL,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B;AACD,GAJgE,EAI9D,UAASF,IAAT,EAAeG,IAAf,EAAqB;AACtBH,IAAAA,IAAI,CAACI,cAAL,CAAoBJ,IAAI,CAACK,cAAL,KAAwBF,IAAI,GAAGM,CAAnD;AACD,GANgE,CAAjE;AAOD,CARD;;AAUA,eAAeV,OAAf;AACA,OAAO,IAAIc,QAAQ,GAAGd,OAAO,CAACe,KAAvB","sourcesContent":["import interval from \"./interval.js\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n"]},"metadata":{},"sourceType":"module"}