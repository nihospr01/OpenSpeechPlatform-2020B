{"ast":null,"code":"function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function Feature(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function FeatureCollection(object, stream) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      streamGeometry(features[i].geometry, stream);\n    }\n  }\n};\nvar streamGeometryType = {\n  Sphere: function Sphere(object, stream) {\n    stream.sphere();\n  },\n  Point: function Point(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function MultiPoint(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    }\n  },\n  LineString: function LineString(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function MultiLineString(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamLine(coordinates[i], stream, 0);\n    }\n  },\n  Polygon: function Polygon(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function MultiPolygon(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamPolygon(coordinates[i], stream);\n    }\n  },\n  GeometryCollection: function GeometryCollection(object, stream) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      streamGeometry(geometries[i], stream);\n    }\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1,\n      n = coordinates.length - closed,\n      coordinate;\n  stream.lineStart();\n\n  while (++i < n) {\n    coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  }\n\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1,\n      n = coordinates.length;\n  stream.polygonStart();\n\n  while (++i < n) {\n    streamLine(coordinates[i], stream, 1);\n  }\n\n  stream.polygonEnd();\n}\n\nexport default function (object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/d3-geo/src/stream.js"],"names":["streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","type","streamObjectType","Feature","object","FeatureCollection","features","i","n","length","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd"],"mappings":"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","sourcesContent":["function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}