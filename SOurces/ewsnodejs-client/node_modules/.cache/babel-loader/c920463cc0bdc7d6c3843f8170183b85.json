{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nexport var omit = function omit(obj) {\n  var clone = _objectSpread({}, obj);\n\n  for (var _len = arguments.length, keys = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    keys[_key - 1] = arguments[_key];\n  }\n\n  keys.forEach(function (key) {\n    delete clone[key];\n  });\n  return clone;\n};\n/**\n * Cut input selection into 2 part and return text before selection start\n */\n\nexport function getBeforeSelectionText(input) {\n  var selectionStart = input.selectionStart;\n  return input.value.slice(0, selectionStart);\n}\n/**\n * Find the last match prefix index\n */\n\nexport function getLastMeasureIndex(text) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var prefixList = Array.isArray(prefix) ? prefix : [prefix];\n  return prefixList.reduce(function (lastMatch, prefixStr) {\n    var lastIndex = text.lastIndexOf(prefixStr);\n\n    if (lastIndex > lastMatch.location) {\n      return {\n        location: lastIndex,\n        prefix: prefixStr\n      };\n    }\n\n    return lastMatch;\n  }, {\n    location: -1,\n    prefix: ''\n  });\n}\n\nfunction lower(char) {\n  return (char || '').toLowerCase();\n}\n\nfunction reduceText(text, targetText, split) {\n  var firstChar = text[0];\n\n  if (!firstChar || firstChar === split) {\n    return text;\n  } // Reuse rest text as it can\n\n\n  var restText = text;\n  var targetTextLen = targetText.length;\n\n  for (var i = 0; i < targetTextLen; i += 1) {\n    if (lower(restText[i]) !== lower(targetText[i])) {\n      restText = restText.slice(i);\n      break;\n    } else if (i === targetTextLen - 1) {\n      restText = restText.slice(targetTextLen);\n    }\n  }\n\n  return restText;\n}\n/**\n * Paint targetText into current text:\n *  text: little@litest\n *  targetText: light\n *  => little @light test\n */\n\n\nexport function replaceWithMeasure(text, measureConfig) {\n  var measureLocation = measureConfig.measureLocation,\n      prefix = measureConfig.prefix,\n      targetText = measureConfig.targetText,\n      selectionStart = measureConfig.selectionStart,\n      split = measureConfig.split; // Before text will append one space if have other text\n\n  var beforeMeasureText = text.slice(0, measureLocation);\n\n  if (beforeMeasureText[beforeMeasureText.length - split.length] === split) {\n    beforeMeasureText = beforeMeasureText.slice(0, beforeMeasureText.length - split.length);\n  }\n\n  if (beforeMeasureText) {\n    beforeMeasureText = \"\".concat(beforeMeasureText).concat(split);\n  } // Cut duplicate string with current targetText\n\n\n  var restText = reduceText(text.slice(selectionStart), targetText.slice(selectionStart - measureLocation - prefix.length), split);\n\n  if (restText.slice(0, split.length) === split) {\n    restText = restText.slice(split.length);\n  }\n\n  var connectedStartText = \"\".concat(beforeMeasureText).concat(prefix).concat(targetText).concat(split);\n  return {\n    text: \"\".concat(connectedStartText).concat(restText),\n    selectionLocation: connectedStartText.length\n  };\n}\nexport function setInputSelection(input, location) {\n  input.setSelectionRange(location, location);\n  /**\n   * Reset caret into view.\n   * Since this function always called by user control, it's safe to focus element.\n   */\n\n  input.blur();\n  input.focus();\n}\nexport function validateSearch(text, props) {\n  var split = props.split;\n  return !split || text.indexOf(split) === -1;\n}\nexport function filterOption(input, _ref) {\n  var _ref$value = _ref.value,\n      value = _ref$value === void 0 ? '' : _ref$value;\n  var lowerCase = input.toLowerCase();\n  return value.toLowerCase().indexOf(lowerCase) !== -1;\n}","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/rc-mentions/es/util.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","omit","clone","_len","Array","_key","getBeforeSelectionText","input","selectionStart","slice","getLastMeasureIndex","text","prefix","undefined","prefixList","isArray","reduce","lastMatch","prefixStr","lastIndex","lastIndexOf","location","lower","char","toLowerCase","reduceText","targetText","split","firstChar","restText","targetTextLen","replaceWithMeasure","measureConfig","measureLocation","beforeMeasureText","concat","connectedStartText","selectionLocation","setInputSelection","setSelectionRange","blur","focus","validateSearch","props","indexOf","filterOption","_ref","_ref$value","lowerCase"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport var omit = function omit(obj) {\n  var clone = _objectSpread({}, obj);\n\n  for (var _len = arguments.length, keys = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    keys[_key - 1] = arguments[_key];\n  }\n\n  keys.forEach(function (key) {\n    delete clone[key];\n  });\n  return clone;\n};\n/**\n * Cut input selection into 2 part and return text before selection start\n */\n\nexport function getBeforeSelectionText(input) {\n  var selectionStart = input.selectionStart;\n  return input.value.slice(0, selectionStart);\n}\n/**\n * Find the last match prefix index\n */\n\nexport function getLastMeasureIndex(text) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var prefixList = Array.isArray(prefix) ? prefix : [prefix];\n  return prefixList.reduce(function (lastMatch, prefixStr) {\n    var lastIndex = text.lastIndexOf(prefixStr);\n\n    if (lastIndex > lastMatch.location) {\n      return {\n        location: lastIndex,\n        prefix: prefixStr\n      };\n    }\n\n    return lastMatch;\n  }, {\n    location: -1,\n    prefix: ''\n  });\n}\n\nfunction lower(char) {\n  return (char || '').toLowerCase();\n}\n\nfunction reduceText(text, targetText, split) {\n  var firstChar = text[0];\n\n  if (!firstChar || firstChar === split) {\n    return text;\n  } // Reuse rest text as it can\n\n\n  var restText = text;\n  var targetTextLen = targetText.length;\n\n  for (var i = 0; i < targetTextLen; i += 1) {\n    if (lower(restText[i]) !== lower(targetText[i])) {\n      restText = restText.slice(i);\n      break;\n    } else if (i === targetTextLen - 1) {\n      restText = restText.slice(targetTextLen);\n    }\n  }\n\n  return restText;\n}\n/**\n * Paint targetText into current text:\n *  text: little@litest\n *  targetText: light\n *  => little @light test\n */\n\n\nexport function replaceWithMeasure(text, measureConfig) {\n  var measureLocation = measureConfig.measureLocation,\n      prefix = measureConfig.prefix,\n      targetText = measureConfig.targetText,\n      selectionStart = measureConfig.selectionStart,\n      split = measureConfig.split; // Before text will append one space if have other text\n\n  var beforeMeasureText = text.slice(0, measureLocation);\n\n  if (beforeMeasureText[beforeMeasureText.length - split.length] === split) {\n    beforeMeasureText = beforeMeasureText.slice(0, beforeMeasureText.length - split.length);\n  }\n\n  if (beforeMeasureText) {\n    beforeMeasureText = \"\".concat(beforeMeasureText).concat(split);\n  } // Cut duplicate string with current targetText\n\n\n  var restText = reduceText(text.slice(selectionStart), targetText.slice(selectionStart - measureLocation - prefix.length), split);\n\n  if (restText.slice(0, split.length) === split) {\n    restText = restText.slice(split.length);\n  }\n\n  var connectedStartText = \"\".concat(beforeMeasureText).concat(prefix).concat(targetText).concat(split);\n  return {\n    text: \"\".concat(connectedStartText).concat(restText),\n    selectionLocation: connectedStartText.length\n  };\n}\nexport function setInputSelection(input, location) {\n  input.setSelectionRange(location, location);\n  /**\n   * Reset caret into view.\n   * Since this function always called by user control, it's safe to focus element.\n   */\n\n  input.blur();\n  input.focus();\n}\nexport function validateSearch(text, props) {\n  var split = props.split;\n  return !split || text.indexOf(split) === -1;\n}\nexport function filterOption(input, _ref) {\n  var _ref$value = _ref.value,\n      value = _ref$value === void 0 ? '' : _ref$value;\n  var lowerCase = input.toLowerCase();\n  return value.toLowerCase().indexOf(lowerCase) !== -1;\n}"]},"metadata":{},"sourceType":"module"}