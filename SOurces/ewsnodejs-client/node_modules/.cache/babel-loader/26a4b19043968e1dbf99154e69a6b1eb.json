{"ast":null,"code":"import { point as _point } from \"./basis.js\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function areaStart() {\n    this._line = 0;\n  },\n  areaEnd: function areaEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._x0 = this._x1 = this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function point(x, y) {\n    x = +x, y = +y;\n\n    switch (this._point) {\n      case 0:\n        this._point = 1;\n        break;\n\n      case 1:\n        this._point = 2;\n        break;\n\n      case 2:\n        this._point = 3;\n        var x0 = (this._x0 + 4 * this._x1 + x) / 6,\n            y0 = (this._y0 + 4 * this._y1 + y) / 6;\n        this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);\n        break;\n\n      case 3:\n        this._point = 4;\n      // proceed\n\n      default:\n        _point(this, x, y);\n\n        break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\nexport default function (context) {\n  return new BasisOpen(context);\n}","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/d3-shape/src/curve/basisOpen.js"],"names":["point","BasisOpen","context","_context","prototype","areaStart","_line","areaEnd","NaN","lineStart","_x0","_x1","_y0","_y1","_point","lineEnd","closePath","x","y","x0","y0","lineTo","moveTo"],"mappings":"AAAA,SAAQA,KAAK,IAALA,MAAR,QAAoB,YAApB;;AAEA,SAASC,SAAT,CAAmBC,OAAnB,EAA4B;AAC1B,OAAKC,QAAL,GAAgBD,OAAhB;AACD;;AAEDD,SAAS,CAACG,SAAV,GAAsB;AACpBC,EAAAA,SAAS,EAAE,qBAAW;AACpB,SAAKC,KAAL,GAAa,CAAb;AACD,GAHmB;AAIpBC,EAAAA,OAAO,EAAE,mBAAW;AAClB,SAAKD,KAAL,GAAaE,GAAb;AACD,GANmB;AAOpBC,EAAAA,SAAS,EAAE,qBAAW;AACpB,SAAKC,GAAL,GAAW,KAAKC,GAAL,GACX,KAAKC,GAAL,GAAW,KAAKC,GAAL,GAAWL,GADtB;AAEA,SAAKM,MAAL,GAAc,CAAd;AACD,GAXmB;AAYpBC,EAAAA,OAAO,EAAE,mBAAW;AAClB,QAAI,KAAKT,KAAL,IAAe,KAAKA,KAAL,KAAe,CAAf,IAAoB,KAAKQ,MAAL,KAAgB,CAAvD,EAA2D,KAAKX,QAAL,CAAca,SAAd;AAC3D,SAAKV,KAAL,GAAa,IAAI,KAAKA,KAAtB;AACD,GAfmB;AAgBpBN,EAAAA,KAAK,EAAE,eAASiB,CAAT,EAAYC,CAAZ,EAAe;AACpBD,IAAAA,CAAC,GAAG,CAACA,CAAL,EAAQC,CAAC,GAAG,CAACA,CAAb;;AACA,YAAQ,KAAKJ,MAAb;AACE,WAAK,CAAL;AAAQ,aAAKA,MAAL,GAAc,CAAd;AAAiB;;AACzB,WAAK,CAAL;AAAQ,aAAKA,MAAL,GAAc,CAAd;AAAiB;;AACzB,WAAK,CAAL;AAAQ,aAAKA,MAAL,GAAc,CAAd;AAAiB,YAAIK,EAAE,GAAG,CAAC,KAAKT,GAAL,GAAW,IAAI,KAAKC,GAApB,GAA0BM,CAA3B,IAAgC,CAAzC;AAAA,YAA4CG,EAAE,GAAG,CAAC,KAAKR,GAAL,GAAW,IAAI,KAAKC,GAApB,GAA0BK,CAA3B,IAAgC,CAAjF;AAAoF,aAAKZ,KAAL,GAAa,KAAKH,QAAL,CAAckB,MAAd,CAAqBF,EAArB,EAAyBC,EAAzB,CAAb,GAA4C,KAAKjB,QAAL,CAAcmB,MAAd,CAAqBH,EAArB,EAAyBC,EAAzB,CAA5C;AAA0E;;AACvL,WAAK,CAAL;AAAQ,aAAKN,MAAL,GAAc,CAAd;AAAiB;;AACzB;AAASd,QAAAA,MAAK,CAAC,IAAD,EAAOiB,CAAP,EAAUC,CAAV,CAAL;;AAAmB;AAL9B;;AAOA,SAAKR,GAAL,GAAW,KAAKC,GAAhB,EAAqB,KAAKA,GAAL,GAAWM,CAAhC;AACA,SAAKL,GAAL,GAAW,KAAKC,GAAhB,EAAqB,KAAKA,GAAL,GAAWK,CAAhC;AACD;AA3BmB,CAAtB;AA8BA,eAAe,UAAShB,OAAT,EAAkB;AAC/B,SAAO,IAAID,SAAJ,CAAcC,OAAd,CAAP;AACD","sourcesContent":["import {point} from \"./basis.js\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n"]},"metadata":{},"sourceType":"module"}