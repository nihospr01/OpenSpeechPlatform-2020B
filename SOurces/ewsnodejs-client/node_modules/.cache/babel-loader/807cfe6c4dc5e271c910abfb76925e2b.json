{"ast":null,"code":"import projection from \"./index.js\";\nimport { abs, epsilon } from \"../math.js\";\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi,\n      phi4 = phi2 * phi2;\n  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];\n}\n\nnaturalEarth1Raw.invert = function (x, y) {\n  var phi = y,\n      i = 25,\n      delta;\n\n  do {\n    var phi2 = phi * phi,\n        phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n\n  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];\n};\n\nexport default function () {\n  return projection(naturalEarth1Raw).scale(175.295);\n}","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/d3-geo/src/projection/naturalEarth1.js"],"names":["projection","abs","epsilon","naturalEarth1Raw","lambda","phi","phi2","phi4","invert","x","y","i","delta","scale"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,SAAQC,GAAR,EAAaC,OAAb,QAA2B,YAA3B;AAEA,OAAO,SAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,GAAlC,EAAuC;AAC5C,MAAIC,IAAI,GAAGD,GAAG,GAAGA,GAAjB;AAAA,MAAsBE,IAAI,GAAGD,IAAI,GAAGA,IAApC;AACA,SAAO,CACLF,MAAM,IAAI,SAAS,WAAWE,IAApB,GAA2BC,IAAI,IAAI,CAAC,QAAD,GAAYA,IAAI,IAAI,WAAWD,IAAX,GAAkB,WAAWC,IAAjC,CAApB,CAAnC,CADD,EAELF,GAAG,IAAI,WAAWC,IAAI,IAAI,WAAWC,IAAI,IAAI,CAAC,QAAD,GAAY,WAAWD,IAAvB,GAA8B,WAAWC,IAA7C,CAAnB,CAAnB,CAFE,CAAP;AAID;;AAEDJ,gBAAgB,CAACK,MAAjB,GAA0B,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACvC,MAAIL,GAAG,GAAGK,CAAV;AAAA,MAAaC,CAAC,GAAG,EAAjB;AAAA,MAAqBC,KAArB;;AACA,KAAG;AACD,QAAIN,IAAI,GAAGD,GAAG,GAAGA,GAAjB;AAAA,QAAsBE,IAAI,GAAGD,IAAI,GAAGA,IAApC;AACAD,IAAAA,GAAG,IAAIO,KAAK,GAAG,CAACP,GAAG,IAAI,WAAWC,IAAI,IAAI,WAAWC,IAAI,IAAI,CAAC,QAAD,GAAY,WAAWD,IAAvB,GAA8B,WAAWC,IAA7C,CAAnB,CAAnB,CAAH,GAAgGG,CAAjG,KACV,WAAWJ,IAAI,IAAI,WAAW,CAAX,GAAeC,IAAI,IAAI,CAAC,QAAD,GAAY,CAAZ,GAAgB,WAAW,CAAX,GAAeD,IAA/B,GAAsC,WAAW,EAAX,GAAgBC,IAA1D,CAAvB,CADL,CAAf;AAED,GAJD,QAISN,GAAG,CAACW,KAAD,CAAH,GAAaV,OAAb,IAAwB,EAAES,CAAF,GAAM,CAJvC;;AAKA,SAAO,CACLF,CAAC,IAAI,SAAS,CAACH,IAAI,GAAGD,GAAG,GAAGA,GAAd,KAAsB,CAAC,QAAD,GAAYC,IAAI,IAAI,CAAC,QAAD,GAAYA,IAAI,GAAGA,IAAP,GAAcA,IAAd,IAAsB,WAAW,WAAWA,IAA5C,CAAhB,CAAtC,CAAb,CADI,EAELD,GAFK,CAAP;AAID,CAXD;;AAaA,eAAe,YAAW;AACxB,SAAOL,UAAU,CAACG,gBAAD,CAAV,CACFU,KADE,CACI,OADJ,CAAP;AAED","sourcesContent":["import projection from \"./index.js\";\nimport {abs, epsilon} from \"../math.js\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n"]},"metadata":{},"sourceType":"module"}