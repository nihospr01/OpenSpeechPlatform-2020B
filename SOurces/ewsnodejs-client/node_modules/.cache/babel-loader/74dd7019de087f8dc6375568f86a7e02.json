{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule findAncestorOffsetKey\n * @format\n * \n */\n'use strict';\n\nvar getSelectionOffsetKeyForNode = require('./getSelectionOffsetKeyForNode');\n/**\n * Get the key from the node's nearest offset-aware ancestor.\n */\n\n\nfunction findAncestorOffsetKey(node) {\n  var searchNode = node;\n\n  while (searchNode && searchNode !== document.documentElement) {\n    var key = getSelectionOffsetKeyForNode(searchNode);\n\n    if (key != null) {\n      return key;\n    }\n\n    searchNode = searchNode.parentNode;\n  }\n\n  return null;\n}\n\nmodule.exports = findAncestorOffsetKey;","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/draft-js/lib/findAncestorOffsetKey.js"],"names":["getSelectionOffsetKeyForNode","require","findAncestorOffsetKey","node","searchNode","document","documentElement","key","parentNode","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,4BAA4B,GAAGC,OAAO,CAAC,gCAAD,CAA1C;AAEA;AACA;AACA;;;AACA,SAASC,qBAAT,CAA+BC,IAA/B,EAAqC;AACnC,MAAIC,UAAU,GAAGD,IAAjB;;AACA,SAAOC,UAAU,IAAIA,UAAU,KAAKC,QAAQ,CAACC,eAA7C,EAA8D;AAC5D,QAAIC,GAAG,GAAGP,4BAA4B,CAACI,UAAD,CAAtC;;AACA,QAAIG,GAAG,IAAI,IAAX,EAAiB;AACf,aAAOA,GAAP;AACD;;AACDH,IAAAA,UAAU,GAAGA,UAAU,CAACI,UAAxB;AACD;;AACD,SAAO,IAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBR,qBAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule findAncestorOffsetKey\n * @format\n * \n */\n\n'use strict';\n\nvar getSelectionOffsetKeyForNode = require('./getSelectionOffsetKeyForNode');\n\n/**\n * Get the key from the node's nearest offset-aware ancestor.\n */\nfunction findAncestorOffsetKey(node) {\n  var searchNode = node;\n  while (searchNode && searchNode !== document.documentElement) {\n    var key = getSelectionOffsetKeyForNode(searchNode);\n    if (key != null) {\n      return key;\n    }\n    searchNode = searchNode.parentNode;\n  }\n  return null;\n}\n\nmodule.exports = findAncestorOffsetKey;"]},"metadata":{},"sourceType":"script"}