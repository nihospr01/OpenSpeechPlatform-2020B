{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport { Circle as RCCircle } from 'rc-progress';\nimport classNames from 'classnames';\nimport { validProgress } from './utils';\nvar statusColorMap = {\n  normal: '#108ee9',\n  exception: '#ff5500',\n  success: '#87d068'\n};\n\nfunction getPercentage(_ref) {\n  var percent = _ref.percent,\n      successPercent = _ref.successPercent;\n  var ptg = validProgress(percent);\n\n  if (!successPercent) {\n    return ptg;\n  }\n\n  var successPtg = validProgress(successPercent);\n  return [successPercent, validProgress(ptg - successPtg)];\n}\n\nfunction getStrokeColor(_ref2) {\n  var progressStatus = _ref2.progressStatus,\n      successPercent = _ref2.successPercent,\n      strokeColor = _ref2.strokeColor;\n  var color = strokeColor || statusColorMap[progressStatus];\n\n  if (!successPercent) {\n    return color;\n  }\n\n  return [statusColorMap.success, color];\n}\n\nvar Circle = function Circle(props) {\n  var prefixCls = props.prefixCls,\n      width = props.width,\n      strokeWidth = props.strokeWidth,\n      trailColor = props.trailColor,\n      strokeLinecap = props.strokeLinecap,\n      gapPosition = props.gapPosition,\n      gapDegree = props.gapDegree,\n      type = props.type,\n      children = props.children;\n  var circleSize = width || 120;\n  var circleStyle = {\n    width: circleSize,\n    height: circleSize,\n    fontSize: circleSize * 0.15 + 6\n  };\n  var circleWidth = strokeWidth || 6;\n  var gapPos = gapPosition || type === 'dashboard' && 'bottom' || 'top';\n  var gapDeg = gapDegree || (type === 'dashboard' ? 75 : undefined);\n  var strokeColor = getStrokeColor(props);\n  var isGradient = Object.prototype.toString.call(strokeColor) === '[object Object]';\n  var wrapperClassName = classNames(\"\".concat(prefixCls, \"-inner\"), _defineProperty({}, \"\".concat(prefixCls, \"-circle-gradient\"), isGradient));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClassName,\n    style: circleStyle\n  }, /*#__PURE__*/React.createElement(RCCircle, {\n    percent: getPercentage(props),\n    strokeWidth: circleWidth,\n    trailWidth: circleWidth,\n    strokeColor: strokeColor,\n    strokeLinecap: strokeLinecap,\n    trailColor: trailColor,\n    prefixCls: prefixCls,\n    gapDegree: gapDeg,\n    gapPosition: gapPos\n  }), children);\n};\n\nexport default Circle;","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/antd/es/progress/Circle.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","Circle","RCCircle","classNames","validProgress","statusColorMap","normal","exception","success","getPercentage","_ref","percent","successPercent","ptg","successPtg","getStrokeColor","_ref2","progressStatus","strokeColor","color","props","prefixCls","width","strokeWidth","trailColor","strokeLinecap","gapPosition","gapDegree","type","children","circleSize","circleStyle","height","fontSize","circleWidth","gapPos","gapDeg","undefined","isGradient","prototype","toString","call","wrapperClassName","concat","createElement","className","style","trailWidth"],"mappings":"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","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from 'react';\nimport { Circle as RCCircle } from 'rc-progress';\nimport classNames from 'classnames';\nimport { validProgress } from './utils';\nvar statusColorMap = {\n  normal: '#108ee9',\n  exception: '#ff5500',\n  success: '#87d068'\n};\n\nfunction getPercentage(_ref) {\n  var percent = _ref.percent,\n      successPercent = _ref.successPercent;\n  var ptg = validProgress(percent);\n\n  if (!successPercent) {\n    return ptg;\n  }\n\n  var successPtg = validProgress(successPercent);\n  return [successPercent, validProgress(ptg - successPtg)];\n}\n\nfunction getStrokeColor(_ref2) {\n  var progressStatus = _ref2.progressStatus,\n      successPercent = _ref2.successPercent,\n      strokeColor = _ref2.strokeColor;\n  var color = strokeColor || statusColorMap[progressStatus];\n\n  if (!successPercent) {\n    return color;\n  }\n\n  return [statusColorMap.success, color];\n}\n\nvar Circle = function Circle(props) {\n  var prefixCls = props.prefixCls,\n      width = props.width,\n      strokeWidth = props.strokeWidth,\n      trailColor = props.trailColor,\n      strokeLinecap = props.strokeLinecap,\n      gapPosition = props.gapPosition,\n      gapDegree = props.gapDegree,\n      type = props.type,\n      children = props.children;\n  var circleSize = width || 120;\n  var circleStyle = {\n    width: circleSize,\n    height: circleSize,\n    fontSize: circleSize * 0.15 + 6\n  };\n  var circleWidth = strokeWidth || 6;\n  var gapPos = gapPosition || type === 'dashboard' && 'bottom' || 'top';\n  var gapDeg = gapDegree || (type === 'dashboard' ? 75 : undefined);\n  var strokeColor = getStrokeColor(props);\n  var isGradient = Object.prototype.toString.call(strokeColor) === '[object Object]';\n  var wrapperClassName = classNames(\"\".concat(prefixCls, \"-inner\"), _defineProperty({}, \"\".concat(prefixCls, \"-circle-gradient\"), isGradient));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClassName,\n    style: circleStyle\n  }, /*#__PURE__*/React.createElement(RCCircle, {\n    percent: getPercentage(props),\n    strokeWidth: circleWidth,\n    trailWidth: circleWidth,\n    strokeColor: strokeColor,\n    strokeLinecap: strokeLinecap,\n    trailColor: trailColor,\n    prefixCls: prefixCls,\n    gapDegree: gapDeg,\n    gapPosition: gapPos\n  }), children);\n};\n\nexport default Circle;"]},"metadata":{},"sourceType":"module"}