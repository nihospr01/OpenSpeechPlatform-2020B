{"ast":null,"code":"// optional / simple context binding\nvar aFunction = require('./_a-function');\n\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n\n  switch (length) {\n    case 1:\n      return function (a) {\n        return fn.call(that, a);\n      };\n\n    case 2:\n      return function (a, b) {\n        return fn.call(that, a, b);\n      };\n\n    case 3:\n      return function (a, b, c) {\n        return fn.call(that, a, b, c);\n      };\n  }\n\n  return function ()\n  /* ...args */\n  {\n    return fn.apply(that, arguments);\n  };\n};","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/core-js/library/modules/_ctx.js"],"names":["aFunction","require","module","exports","fn","that","length","undefined","a","call","b","c","apply","arguments"],"mappings":"AAAA;AACA,IAAIA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAvB;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,EAAV,EAAcC,IAAd,EAAoBC,MAApB,EAA4B;AAC3CN,EAAAA,SAAS,CAACI,EAAD,CAAT;AACA,MAAIC,IAAI,KAAKE,SAAb,EAAwB,OAAOH,EAAP;;AACxB,UAAQE,MAAR;AACE,SAAK,CAAL;AAAQ,aAAO,UAAUE,CAAV,EAAa;AAC1B,eAAOJ,EAAE,CAACK,IAAH,CAAQJ,IAAR,EAAcG,CAAd,CAAP;AACD,OAFO;;AAGR,SAAK,CAAL;AAAQ,aAAO,UAAUA,CAAV,EAAaE,CAAb,EAAgB;AAC7B,eAAON,EAAE,CAACK,IAAH,CAAQJ,IAAR,EAAcG,CAAd,EAAiBE,CAAjB,CAAP;AACD,OAFO;;AAGR,SAAK,CAAL;AAAQ,aAAO,UAAUF,CAAV,EAAaE,CAAb,EAAgBC,CAAhB,EAAmB;AAChC,eAAOP,EAAE,CAACK,IAAH,CAAQJ,IAAR,EAAcG,CAAd,EAAiBE,CAAjB,EAAoBC,CAApB,CAAP;AACD,OAFO;AAPV;;AAWA,SAAO;AAAU;AAAe;AAC9B,WAAOP,EAAE,CAACQ,KAAH,CAASP,IAAT,EAAeQ,SAAf,CAAP;AACD,GAFD;AAGD,CAjBD","sourcesContent":["// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n"]},"metadata":{},"sourceType":"script"}