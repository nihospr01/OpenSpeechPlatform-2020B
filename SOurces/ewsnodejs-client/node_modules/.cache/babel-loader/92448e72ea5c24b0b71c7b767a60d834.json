{"ast":null,"code":"import Toolbar from './Toolbar';\n\nfunction noop(_) {}\n\n;\nexport function createToolbar() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  function editorStateChange(editorState) {// console.log('>> editorStateChange', editorState);\n  }\n\n  var callbacks = {\n    onChange: editorStateChange,\n    onUpArrow: noop,\n    onDownArrow: noop,\n    getEditorState: noop,\n    setEditorState: noop,\n    handleReturn: noop\n  };\n  return {\n    name: 'toolbar',\n    decorators: [],\n    callbacks: callbacks,\n    onChange: function onChange(editorState) {\n      return callbacks.onChange ? callbacks.onChange(editorState) : editorState;\n    },\n    component: Toolbar\n  };\n}","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/rc-editor-core/es/Toolbar/index.js"],"names":["Toolbar","noop","_","createToolbar","config","arguments","length","undefined","editorStateChange","editorState","callbacks","onChange","onUpArrow","onDownArrow","getEditorState","setEditorState","handleReturn","name","decorators","component"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;;AACA,SAASC,IAAT,CAAcC,CAAd,EAAiB,CAAE;;AACnB;AACA,OAAO,SAASC,aAAT,GAAyB;AAC5B,MAAIC,MAAM,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAjF;;AAEA,WAASG,iBAAT,CAA2BC,WAA3B,EAAwC,CACpC;AACH;;AACD,MAAIC,SAAS,GAAG;AACZC,IAAAA,QAAQ,EAAEH,iBADE;AAEZI,IAAAA,SAAS,EAAEX,IAFC;AAGZY,IAAAA,WAAW,EAAEZ,IAHD;AAIZa,IAAAA,cAAc,EAAEb,IAJJ;AAKZc,IAAAA,cAAc,EAAEd,IALJ;AAMZe,IAAAA,YAAY,EAAEf;AANF,GAAhB;AAQA,SAAO;AACHgB,IAAAA,IAAI,EAAE,SADH;AAEHC,IAAAA,UAAU,EAAE,EAFT;AAGHR,IAAAA,SAAS,EAAEA,SAHR;AAIHC,IAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBF,WAAlB,EAA+B;AACrC,aAAOC,SAAS,CAACC,QAAV,GAAqBD,SAAS,CAACC,QAAV,CAAmBF,WAAnB,CAArB,GAAuDA,WAA9D;AACH,KANE;AAQHU,IAAAA,SAAS,EAAEnB;AARR,GAAP;AAUH","sourcesContent":["import Toolbar from './Toolbar';\nfunction noop(_) {}\n;\nexport function createToolbar() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    function editorStateChange(editorState) {\n        // console.log('>> editorStateChange', editorState);\n    }\n    var callbacks = {\n        onChange: editorStateChange,\n        onUpArrow: noop,\n        onDownArrow: noop,\n        getEditorState: noop,\n        setEditorState: noop,\n        handleReturn: noop\n    };\n    return {\n        name: 'toolbar',\n        decorators: [],\n        callbacks: callbacks,\n        onChange: function onChange(editorState) {\n            return callbacks.onChange ? callbacks.onChange(editorState) : editorState;\n        },\n\n        component: Toolbar\n    };\n}"]},"metadata":{},"sourceType":"module"}