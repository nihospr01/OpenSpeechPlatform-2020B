{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ContentBlockNode\n * @format\n * \n *\n * This file is a fork of ContentBlock adding support for nesting references by\n * providing links to children, parent, prevSibling, and nextSibling.\n *\n * This is unstable and not part of the public API and should not be used by\n * production systems. This file may be update/removed without notice.\n */\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CharacterMetadata = require('./CharacterMetadata');\n\nvar Immutable = require('immutable');\n\nvar findRangesImmutable = require('./findRangesImmutable');\n\nvar List = Immutable.List,\n    Map = Immutable.Map,\n    OrderedSet = Immutable.OrderedSet,\n    Record = Immutable.Record,\n    Repeat = Immutable.Repeat;\nvar EMPTY_SET = OrderedSet();\nvar defaultRecord = {\n  parent: null,\n  characterList: List(),\n  data: Map(),\n  depth: 0,\n  key: '',\n  text: '',\n  type: 'unstyled',\n  children: List(),\n  prevSibling: null,\n  nextSibling: null\n};\n\nvar haveEqualStyle = function haveEqualStyle(charA, charB) {\n  return charA.getStyle() === charB.getStyle();\n};\n\nvar haveEqualEntity = function haveEqualEntity(charA, charB) {\n  return charA.getEntity() === charB.getEntity();\n};\n\nvar decorateCharacterList = function decorateCharacterList(config) {\n  if (!config) {\n    return config;\n  }\n\n  var characterList = config.characterList,\n      text = config.text;\n\n  if (text && !characterList) {\n    config.characterList = List(Repeat(CharacterMetadata.EMPTY, text.length));\n  }\n\n  return config;\n};\n\nvar ContentBlockNode = function (_Record) {\n  _inherits(ContentBlockNode, _Record);\n\n  function ContentBlockNode() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultRecord;\n\n    _classCallCheck(this, ContentBlockNode);\n\n    return _possibleConstructorReturn(this, _Record.call(this, decorateCharacterList(props)));\n  }\n\n  ContentBlockNode.prototype.getKey = function getKey() {\n    return this.get('key');\n  };\n\n  ContentBlockNode.prototype.getType = function getType() {\n    return this.get('type');\n  };\n\n  ContentBlockNode.prototype.getText = function getText() {\n    return this.get('text');\n  };\n\n  ContentBlockNode.prototype.getCharacterList = function getCharacterList() {\n    return this.get('characterList');\n  };\n\n  ContentBlockNode.prototype.getLength = function getLength() {\n    return this.getText().length;\n  };\n\n  ContentBlockNode.prototype.getDepth = function getDepth() {\n    return this.get('depth');\n  };\n\n  ContentBlockNode.prototype.getData = function getData() {\n    return this.get('data');\n  };\n\n  ContentBlockNode.prototype.getInlineStyleAt = function getInlineStyleAt(offset) {\n    var character = this.getCharacterList().get(offset);\n    return character ? character.getStyle() : EMPTY_SET;\n  };\n\n  ContentBlockNode.prototype.getEntityAt = function getEntityAt(offset) {\n    var character = this.getCharacterList().get(offset);\n    return character ? character.getEntity() : null;\n  };\n\n  ContentBlockNode.prototype.getChildKeys = function getChildKeys() {\n    return this.get('children');\n  };\n\n  ContentBlockNode.prototype.getParentKey = function getParentKey() {\n    return this.get('parent');\n  };\n\n  ContentBlockNode.prototype.getPrevSiblingKey = function getPrevSiblingKey() {\n    return this.get('prevSibling');\n  };\n\n  ContentBlockNode.prototype.getNextSiblingKey = function getNextSiblingKey() {\n    return this.get('nextSibling');\n  };\n\n  ContentBlockNode.prototype.findStyleRanges = function findStyleRanges(filterFn, callback) {\n    findRangesImmutable(this.getCharacterList(), haveEqualStyle, filterFn, callback);\n  };\n\n  ContentBlockNode.prototype.findEntityRanges = function findEntityRanges(filterFn, callback) {\n    findRangesImmutable(this.getCharacterList(), haveEqualEntity, filterFn, callback);\n  };\n\n  return ContentBlockNode;\n}(Record(defaultRecord));\n\nmodule.exports = ContentBlockNode;","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/draft-js/lib/ContentBlockNode.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","CharacterMetadata","require","Immutable","findRangesImmutable","List","Map","OrderedSet","Record","Repeat","EMPTY_SET","defaultRecord","parent","characterList","data","depth","key","text","type","children","prevSibling","nextSibling","haveEqualStyle","charA","charB","getStyle","haveEqualEntity","getEntity","decorateCharacterList","config","EMPTY","length","ContentBlockNode","_Record","props","arguments","undefined","getKey","get","getType","getText","getCharacterList","getLength","getDepth","getData","getInlineStyleAt","offset","character","getEntityAt","getChildKeys","getParentKey","getPrevSiblingKey","getNextSiblingKey","findStyleRanges","filterFn","callback","findEntityRanges","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ContentBlockNode\n * @format\n * \n *\n * This file is a fork of ContentBlock adding support for nesting references by\n * providing links to children, parent, prevSibling, and nextSibling.\n *\n * This is unstable and not part of the public API and should not be used by\n * production systems. This file may be update/removed without notice.\n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar CharacterMetadata = require('./CharacterMetadata');\nvar Immutable = require('immutable');\n\nvar findRangesImmutable = require('./findRangesImmutable');\n\nvar List = Immutable.List,\n    Map = Immutable.Map,\n    OrderedSet = Immutable.OrderedSet,\n    Record = Immutable.Record,\n    Repeat = Immutable.Repeat;\n\n\nvar EMPTY_SET = OrderedSet();\n\nvar defaultRecord = {\n  parent: null,\n  characterList: List(),\n  data: Map(),\n  depth: 0,\n  key: '',\n  text: '',\n  type: 'unstyled',\n  children: List(),\n  prevSibling: null,\n  nextSibling: null\n};\n\nvar haveEqualStyle = function haveEqualStyle(charA, charB) {\n  return charA.getStyle() === charB.getStyle();\n};\n\nvar haveEqualEntity = function haveEqualEntity(charA, charB) {\n  return charA.getEntity() === charB.getEntity();\n};\n\nvar decorateCharacterList = function decorateCharacterList(config) {\n  if (!config) {\n    return config;\n  }\n\n  var characterList = config.characterList,\n      text = config.text;\n\n\n  if (text && !characterList) {\n    config.characterList = List(Repeat(CharacterMetadata.EMPTY, text.length));\n  }\n\n  return config;\n};\n\nvar ContentBlockNode = function (_Record) {\n  _inherits(ContentBlockNode, _Record);\n\n  function ContentBlockNode() {\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultRecord;\n\n    _classCallCheck(this, ContentBlockNode);\n\n    return _possibleConstructorReturn(this, _Record.call(this, decorateCharacterList(props)));\n  }\n\n  ContentBlockNode.prototype.getKey = function getKey() {\n    return this.get('key');\n  };\n\n  ContentBlockNode.prototype.getType = function getType() {\n    return this.get('type');\n  };\n\n  ContentBlockNode.prototype.getText = function getText() {\n    return this.get('text');\n  };\n\n  ContentBlockNode.prototype.getCharacterList = function getCharacterList() {\n    return this.get('characterList');\n  };\n\n  ContentBlockNode.prototype.getLength = function getLength() {\n    return this.getText().length;\n  };\n\n  ContentBlockNode.prototype.getDepth = function getDepth() {\n    return this.get('depth');\n  };\n\n  ContentBlockNode.prototype.getData = function getData() {\n    return this.get('data');\n  };\n\n  ContentBlockNode.prototype.getInlineStyleAt = function getInlineStyleAt(offset) {\n    var character = this.getCharacterList().get(offset);\n    return character ? character.getStyle() : EMPTY_SET;\n  };\n\n  ContentBlockNode.prototype.getEntityAt = function getEntityAt(offset) {\n    var character = this.getCharacterList().get(offset);\n    return character ? character.getEntity() : null;\n  };\n\n  ContentBlockNode.prototype.getChildKeys = function getChildKeys() {\n    return this.get('children');\n  };\n\n  ContentBlockNode.prototype.getParentKey = function getParentKey() {\n    return this.get('parent');\n  };\n\n  ContentBlockNode.prototype.getPrevSiblingKey = function getPrevSiblingKey() {\n    return this.get('prevSibling');\n  };\n\n  ContentBlockNode.prototype.getNextSiblingKey = function getNextSiblingKey() {\n    return this.get('nextSibling');\n  };\n\n  ContentBlockNode.prototype.findStyleRanges = function findStyleRanges(filterFn, callback) {\n    findRangesImmutable(this.getCharacterList(), haveEqualStyle, filterFn, callback);\n  };\n\n  ContentBlockNode.prototype.findEntityRanges = function findEntityRanges(filterFn, callback) {\n    findRangesImmutable(this.getCharacterList(), haveEqualEntity, filterFn, callback);\n  };\n\n  return ContentBlockNode;\n}(Record(defaultRecord));\n\nmodule.exports = ContentBlockNode;"]},"metadata":{},"sourceType":"script"}