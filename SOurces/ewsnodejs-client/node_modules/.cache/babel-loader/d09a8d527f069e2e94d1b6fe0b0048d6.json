{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getDefaultKeyBinding\n * @format\n * \n */\n'use strict';\n\nvar KeyBindingUtil = require('./KeyBindingUtil');\n\nvar Keys = require('fbjs/lib/Keys');\n\nvar UserAgent = require('fbjs/lib/UserAgent');\n\nvar isOSX = UserAgent.isPlatform('Mac OS X');\nvar isWindows = UserAgent.isPlatform('Windows'); // Firefox on OSX had a bug resulting in navigation instead of cursor movement.\n// This bug was fixed in Firefox 29. Feature detection is virtually impossible\n// so we just check the version number. See #342765.\n\nvar shouldFixFirefoxMovement = isOSX && UserAgent.isBrowser('Firefox < 29');\nvar hasCommandModifier = KeyBindingUtil.hasCommandModifier,\n    isCtrlKeyCommand = KeyBindingUtil.isCtrlKeyCommand;\n\nfunction shouldRemoveWord(e) {\n  return isOSX && e.altKey || isCtrlKeyCommand(e);\n}\n/**\n * Get the appropriate undo/redo command for a Z key command.\n */\n\n\nfunction getZCommand(e) {\n  if (!hasCommandModifier(e)) {\n    return null;\n  }\n\n  return e.shiftKey ? 'redo' : 'undo';\n}\n\nfunction getDeleteCommand(e) {\n  // Allow default \"cut\" behavior for Windows on Shift + Delete.\n  if (isWindows && e.shiftKey) {\n    return null;\n  }\n\n  return shouldRemoveWord(e) ? 'delete-word' : 'delete';\n}\n\nfunction getBackspaceCommand(e) {\n  if (hasCommandModifier(e) && isOSX) {\n    return 'backspace-to-start-of-line';\n  }\n\n  return shouldRemoveWord(e) ? 'backspace-word' : 'backspace';\n}\n/**\n * Retrieve a bound key command for the given event.\n */\n\n\nfunction getDefaultKeyBinding(e) {\n  switch (e.keyCode) {\n    case 66:\n      // B\n      return hasCommandModifier(e) ? 'bold' : null;\n\n    case 68:\n      // D\n      return isCtrlKeyCommand(e) ? 'delete' : null;\n\n    case 72:\n      // H\n      return isCtrlKeyCommand(e) ? 'backspace' : null;\n\n    case 73:\n      // I\n      return hasCommandModifier(e) ? 'italic' : null;\n\n    case 74:\n      // J\n      return hasCommandModifier(e) ? 'code' : null;\n\n    case 75:\n      // K\n      return !isWindows && isCtrlKeyCommand(e) ? 'secondary-cut' : null;\n\n    case 77:\n      // M\n      return isCtrlKeyCommand(e) ? 'split-block' : null;\n\n    case 79:\n      // O\n      return isCtrlKeyCommand(e) ? 'split-block' : null;\n\n    case 84:\n      // T\n      return isOSX && isCtrlKeyCommand(e) ? 'transpose-characters' : null;\n\n    case 85:\n      // U\n      return hasCommandModifier(e) ? 'underline' : null;\n\n    case 87:\n      // W\n      return isOSX && isCtrlKeyCommand(e) ? 'backspace-word' : null;\n\n    case 89:\n      // Y\n      if (isCtrlKeyCommand(e)) {\n        return isWindows ? 'redo' : 'secondary-paste';\n      }\n\n      return null;\n\n    case 90:\n      // Z\n      return getZCommand(e) || null;\n\n    case Keys.RETURN:\n      return 'split-block';\n\n    case Keys.DELETE:\n      return getDeleteCommand(e);\n\n    case Keys.BACKSPACE:\n      return getBackspaceCommand(e);\n    // LEFT/RIGHT handlers serve as a workaround for a Firefox bug.\n\n    case Keys.LEFT:\n      return shouldFixFirefoxMovement && hasCommandModifier(e) ? 'move-selection-to-start-of-block' : null;\n\n    case Keys.RIGHT:\n      return shouldFixFirefoxMovement && hasCommandModifier(e) ? 'move-selection-to-end-of-block' : null;\n\n    default:\n      return null;\n  }\n}\n\nmodule.exports = getDefaultKeyBinding;","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/draft-js/lib/getDefaultKeyBinding.js"],"names":["KeyBindingUtil","require","Keys","UserAgent","isOSX","isPlatform","isWindows","shouldFixFirefoxMovement","isBrowser","hasCommandModifier","isCtrlKeyCommand","shouldRemoveWord","e","altKey","getZCommand","shiftKey","getDeleteCommand","getBackspaceCommand","getDefaultKeyBinding","keyCode","RETURN","DELETE","BACKSPACE","LEFT","RIGHT","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getDefaultKeyBinding\n * @format\n * \n */\n\n'use strict';\n\nvar KeyBindingUtil = require('./KeyBindingUtil');\nvar Keys = require('fbjs/lib/Keys');\nvar UserAgent = require('fbjs/lib/UserAgent');\n\nvar isOSX = UserAgent.isPlatform('Mac OS X');\nvar isWindows = UserAgent.isPlatform('Windows');\n\n// Firefox on OSX had a bug resulting in navigation instead of cursor movement.\n// This bug was fixed in Firefox 29. Feature detection is virtually impossible\n// so we just check the version number. See #342765.\nvar shouldFixFirefoxMovement = isOSX && UserAgent.isBrowser('Firefox < 29');\n\nvar hasCommandModifier = KeyBindingUtil.hasCommandModifier,\n    isCtrlKeyCommand = KeyBindingUtil.isCtrlKeyCommand;\n\n\nfunction shouldRemoveWord(e) {\n  return isOSX && e.altKey || isCtrlKeyCommand(e);\n}\n\n/**\n * Get the appropriate undo/redo command for a Z key command.\n */\nfunction getZCommand(e) {\n  if (!hasCommandModifier(e)) {\n    return null;\n  }\n  return e.shiftKey ? 'redo' : 'undo';\n}\n\nfunction getDeleteCommand(e) {\n  // Allow default \"cut\" behavior for Windows on Shift + Delete.\n  if (isWindows && e.shiftKey) {\n    return null;\n  }\n  return shouldRemoveWord(e) ? 'delete-word' : 'delete';\n}\n\nfunction getBackspaceCommand(e) {\n  if (hasCommandModifier(e) && isOSX) {\n    return 'backspace-to-start-of-line';\n  }\n  return shouldRemoveWord(e) ? 'backspace-word' : 'backspace';\n}\n\n/**\n * Retrieve a bound key command for the given event.\n */\nfunction getDefaultKeyBinding(e) {\n  switch (e.keyCode) {\n    case 66:\n      // B\n      return hasCommandModifier(e) ? 'bold' : null;\n    case 68:\n      // D\n      return isCtrlKeyCommand(e) ? 'delete' : null;\n    case 72:\n      // H\n      return isCtrlKeyCommand(e) ? 'backspace' : null;\n    case 73:\n      // I\n      return hasCommandModifier(e) ? 'italic' : null;\n    case 74:\n      // J\n      return hasCommandModifier(e) ? 'code' : null;\n    case 75:\n      // K\n      return !isWindows && isCtrlKeyCommand(e) ? 'secondary-cut' : null;\n    case 77:\n      // M\n      return isCtrlKeyCommand(e) ? 'split-block' : null;\n    case 79:\n      // O\n      return isCtrlKeyCommand(e) ? 'split-block' : null;\n    case 84:\n      // T\n      return isOSX && isCtrlKeyCommand(e) ? 'transpose-characters' : null;\n    case 85:\n      // U\n      return hasCommandModifier(e) ? 'underline' : null;\n    case 87:\n      // W\n      return isOSX && isCtrlKeyCommand(e) ? 'backspace-word' : null;\n    case 89:\n      // Y\n      if (isCtrlKeyCommand(e)) {\n        return isWindows ? 'redo' : 'secondary-paste';\n      }\n      return null;\n    case 90:\n      // Z\n      return getZCommand(e) || null;\n    case Keys.RETURN:\n      return 'split-block';\n    case Keys.DELETE:\n      return getDeleteCommand(e);\n    case Keys.BACKSPACE:\n      return getBackspaceCommand(e);\n    // LEFT/RIGHT handlers serve as a workaround for a Firefox bug.\n    case Keys.LEFT:\n      return shouldFixFirefoxMovement && hasCommandModifier(e) ? 'move-selection-to-start-of-block' : null;\n    case Keys.RIGHT:\n      return shouldFixFirefoxMovement && hasCommandModifier(e) ? 'move-selection-to-end-of-block' : null;\n    default:\n      return null;\n  }\n}\n\nmodule.exports = getDefaultKeyBinding;"]},"metadata":{},"sourceType":"script"}