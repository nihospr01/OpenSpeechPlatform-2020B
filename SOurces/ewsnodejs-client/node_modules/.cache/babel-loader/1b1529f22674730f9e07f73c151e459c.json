{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ContentStateInlineStyle\n * @format\n * \n */\n'use strict';\n\nvar CharacterMetadata = require('./CharacterMetadata');\n\nvar _require = require('immutable'),\n    Map = _require.Map;\n\nvar ContentStateInlineStyle = {\n  add: function add(contentState, selectionState, inlineStyle) {\n    return modifyInlineStyle(contentState, selectionState, inlineStyle, true);\n  },\n  remove: function remove(contentState, selectionState, inlineStyle) {\n    return modifyInlineStyle(contentState, selectionState, inlineStyle, false);\n  }\n};\n\nfunction modifyInlineStyle(contentState, selectionState, inlineStyle, addOrRemove) {\n  var blockMap = contentState.getBlockMap();\n  var startKey = selectionState.getStartKey();\n  var startOffset = selectionState.getStartOffset();\n  var endKey = selectionState.getEndKey();\n  var endOffset = selectionState.getEndOffset();\n  var newBlocks = blockMap.skipUntil(function (_, k) {\n    return k === startKey;\n  }).takeUntil(function (_, k) {\n    return k === endKey;\n  }).concat(Map([[endKey, blockMap.get(endKey)]])).map(function (block, blockKey) {\n    var sliceStart;\n    var sliceEnd;\n\n    if (startKey === endKey) {\n      sliceStart = startOffset;\n      sliceEnd = endOffset;\n    } else {\n      sliceStart = blockKey === startKey ? startOffset : 0;\n      sliceEnd = blockKey === endKey ? endOffset : block.getLength();\n    }\n\n    var chars = block.getCharacterList();\n    var current;\n\n    while (sliceStart < sliceEnd) {\n      current = chars.get(sliceStart);\n      chars = chars.set(sliceStart, addOrRemove ? CharacterMetadata.applyStyle(current, inlineStyle) : CharacterMetadata.removeStyle(current, inlineStyle));\n      sliceStart++;\n    }\n\n    return block.set('characterList', chars);\n  });\n  return contentState.merge({\n    blockMap: blockMap.merge(newBlocks),\n    selectionBefore: selectionState,\n    selectionAfter: selectionState\n  });\n}\n\nmodule.exports = ContentStateInlineStyle;","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/draft-js/lib/ContentStateInlineStyle.js"],"names":["CharacterMetadata","require","_require","Map","ContentStateInlineStyle","add","contentState","selectionState","inlineStyle","modifyInlineStyle","remove","addOrRemove","blockMap","getBlockMap","startKey","getStartKey","startOffset","getStartOffset","endKey","getEndKey","endOffset","getEndOffset","newBlocks","skipUntil","_","k","takeUntil","concat","get","map","block","blockKey","sliceStart","sliceEnd","getLength","chars","getCharacterList","current","set","applyStyle","removeStyle","merge","selectionBefore","selectionAfter","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ContentStateInlineStyle\n * @format\n * \n */\n\n'use strict';\n\nvar CharacterMetadata = require('./CharacterMetadata');\n\nvar _require = require('immutable'),\n    Map = _require.Map;\n\nvar ContentStateInlineStyle = {\n  add: function add(contentState, selectionState, inlineStyle) {\n    return modifyInlineStyle(contentState, selectionState, inlineStyle, true);\n  },\n\n  remove: function remove(contentState, selectionState, inlineStyle) {\n    return modifyInlineStyle(contentState, selectionState, inlineStyle, false);\n  }\n};\n\nfunction modifyInlineStyle(contentState, selectionState, inlineStyle, addOrRemove) {\n  var blockMap = contentState.getBlockMap();\n  var startKey = selectionState.getStartKey();\n  var startOffset = selectionState.getStartOffset();\n  var endKey = selectionState.getEndKey();\n  var endOffset = selectionState.getEndOffset();\n\n  var newBlocks = blockMap.skipUntil(function (_, k) {\n    return k === startKey;\n  }).takeUntil(function (_, k) {\n    return k === endKey;\n  }).concat(Map([[endKey, blockMap.get(endKey)]])).map(function (block, blockKey) {\n    var sliceStart;\n    var sliceEnd;\n\n    if (startKey === endKey) {\n      sliceStart = startOffset;\n      sliceEnd = endOffset;\n    } else {\n      sliceStart = blockKey === startKey ? startOffset : 0;\n      sliceEnd = blockKey === endKey ? endOffset : block.getLength();\n    }\n\n    var chars = block.getCharacterList();\n    var current;\n    while (sliceStart < sliceEnd) {\n      current = chars.get(sliceStart);\n      chars = chars.set(sliceStart, addOrRemove ? CharacterMetadata.applyStyle(current, inlineStyle) : CharacterMetadata.removeStyle(current, inlineStyle));\n      sliceStart++;\n    }\n\n    return block.set('characterList', chars);\n  });\n\n  return contentState.merge({\n    blockMap: blockMap.merge(newBlocks),\n    selectionBefore: selectionState,\n    selectionAfter: selectionState\n  });\n}\n\nmodule.exports = ContentStateInlineStyle;"]},"metadata":{},"sourceType":"script"}