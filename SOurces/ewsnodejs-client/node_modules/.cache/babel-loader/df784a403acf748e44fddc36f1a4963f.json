{"ast":null,"code":"(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.eventListener = factory();\n  }\n})(this, function () {\n  function wrap(standard, fallback) {\n    return function (el, evtName, listener, useCapture) {\n      if (el[standard]) {\n        el[standard](evtName, listener, useCapture);\n      } else if (el[fallback]) {\n        el[fallback]('on' + evtName, listener);\n      }\n    };\n  }\n\n  return {\n    add: wrap('addEventListener', 'attachEvent'),\n    remove: wrap('removeEventListener', 'detachEvent')\n  };\n});","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/eventlistener/eventlistener.js"],"names":["root","factory","define","amd","exports","module","eventListener","wrap","standard","fallback","el","evtName","listener","useCapture","add","remove"],"mappings":"AAAC,WAASA,IAAT,EAAcC,OAAd,EAAsB;AACnB,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;AAC5CD,IAAAA,MAAM,CAACD,OAAD,CAAN;AACH,GAFD,MAEO,IAAI,OAAOG,OAAP,KAAmB,QAAvB,EAAiC;AACpCC,IAAAA,MAAM,CAACD,OAAP,GAAiBH,OAAO,EAAxB;AACH,GAFM,MAEA;AACHD,IAAAA,IAAI,CAACM,aAAL,GAAqBL,OAAO,EAA5B;AACL;AACF,CARA,EAQC,IARD,EAQO,YAAY;AACnB,WAASM,IAAT,CAAcC,QAAd,EAAwBC,QAAxB,EAAkC;AACjC,WAAO,UAAUC,EAAV,EAAcC,OAAd,EAAuBC,QAAvB,EAAiCC,UAAjC,EAA6C;AACnD,UAAIH,EAAE,CAACF,QAAD,CAAN,EAAkB;AACjBE,QAAAA,EAAE,CAACF,QAAD,CAAF,CAAaG,OAAb,EAAsBC,QAAtB,EAAgCC,UAAhC;AACA,OAFD,MAEO,IAAIH,EAAE,CAACD,QAAD,CAAN,EAAkB;AACxBC,QAAAA,EAAE,CAACD,QAAD,CAAF,CAAa,OAAOE,OAApB,EAA6BC,QAA7B;AACA;AACD,KAND;AAOA;;AAEE,SAAO;AACTE,IAAAA,GAAG,EAAEP,IAAI,CAAC,kBAAD,EAAqB,aAArB,CADA;AAETQ,IAAAA,MAAM,EAAER,IAAI,CAAC,qBAAD,EAAwB,aAAxB;AAFH,GAAP;AAIH,CAvBA,CAAD","sourcesContent":["(function(root,factory){\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.eventListener = factory();\n  }\n}(this, function () {\n\tfunction wrap(standard, fallback) {\n\t\treturn function (el, evtName, listener, useCapture) {\n\t\t\tif (el[standard]) {\n\t\t\t\tel[standard](evtName, listener, useCapture);\n\t\t\t} else if (el[fallback]) {\n\t\t\t\tel[fallback]('on' + evtName, listener);\n\t\t\t}\n\t\t}\n\t}\n\n    return {\n\t\tadd: wrap('addEventListener', 'attachEvent'),\n\t\tremove: wrap('removeEventListener', 'detachEvent')\n\t};\n}));"]},"metadata":{},"sourceType":"script"}