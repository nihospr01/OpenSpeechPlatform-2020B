{"ast":null,"code":"var frame = 0,\n    // is an animation frame pending?\ntimeout = 0,\n    // is a timeout pending?\ninterval = 0,\n    // are any timers active?\npokeDelay = 1000,\n    // how frequently we check for clock skew\ntaskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {\n  setTimeout(f, 17);\n};\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call = this._time = this._next = null;\n}\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function restart(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;else taskHead = this;\n      taskTail = this;\n    }\n\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function stop() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\nexport function timer(callback, delay, time) {\n  var t = new Timer();\n  t.restart(callback, delay, time);\n  return t;\n}\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n\n  var t = taskHead,\n      e;\n\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(),\n      delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0,\n      t1 = taskHead,\n      t2,\n      time = Infinity;\n\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/d3-timer/src/timer.js"],"names":["frame","timeout","interval","pokeDelay","taskHead","taskTail","clockLast","clockNow","clockSkew","clock","performance","now","Date","setFrame","window","requestAnimationFrame","bind","f","setTimeout","clearNow","Timer","_call","_time","_next","prototype","timer","constructor","restart","callback","delay","time","TypeError","sleep","stop","Infinity","t","timerFlush","e","call","wake","nap","poke","t0","t1","t2","clearTimeout","clearInterval","setInterval"],"mappings":"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","sourcesContent":["var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}