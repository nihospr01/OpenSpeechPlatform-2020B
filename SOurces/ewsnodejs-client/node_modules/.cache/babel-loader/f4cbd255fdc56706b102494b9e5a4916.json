{"ast":null,"code":"import clipRectangle from \"../clip/rectangle.js\";\nimport identity from \"../identity.js\";\nimport { transformer } from \"../transform.js\";\nimport { fitExtent, fitSize, fitWidth, fitHeight } from \"./fit.js\";\nimport { cos, degrees, radians, sin } from \"../math.js\";\nexport default function () {\n  var k = 1,\n      tx = 0,\n      ty = 0,\n      sx = 1,\n      sy = 1,\n      // scale, translate and reflect\n  alpha = 0,\n      ca,\n      sa,\n      // angle\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      // clip extent\n  kx = 1,\n      ky = 1,\n      transform = transformer({\n    point: function point(x, y) {\n      var p = projection([x, y]);\n      this.stream.point(p[0], p[1]);\n    }\n  }),\n      postclip = identity,\n      cache,\n      cacheStream;\n\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  function projection(p) {\n    var x = p[0] * kx,\n        y = p[1] * ky;\n\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }\n\n    return [x + tx, y + ty];\n  }\n\n  projection.invert = function (p) {\n    var x = p[0] - tx,\n        y = p[1] - ty;\n\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n\n    return [x / kx, y / ky];\n  };\n\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n\n  projection.postclip = function (_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n\n  projection.translate = function (_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  };\n\n  projection.angle = function (_) {\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\n  };\n\n  projection.reflectX = function (_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n\n  projection.reflectY = function (_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n\n  projection.fitExtent = function (extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function (width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function (height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  return projection;\n}","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/d3-geo/src/projection/identity.js"],"names":["clipRectangle","identity","transformer","fitExtent","fitSize","fitWidth","fitHeight","cos","degrees","radians","sin","k","tx","ty","sx","sy","alpha","ca","sa","x0","y0","x1","y1","kx","ky","transform","point","x","y","p","projection","stream","postclip","cache","cacheStream","reset","t","invert","_","arguments","length","clipExtent","scale","translate","angle","reflectX","reflectY","extent","object","size","width","height"],"mappings":"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","sourcesContent":["import clipRectangle from \"../clip/rectangle.js\";\nimport identity from \"../identity.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport {cos, degrees, radians, sin} from \"../math.js\";\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect\n      alpha = 0, ca, sa, // angle\n      x0 = null, y0, x1, y1, // clip extent\n      kx = 1, ky = 1,\n      transform = transformer({\n        point: function(x, y) {\n          var p = projection([x, y])\n          this.stream.point(p[0], p[1]);\n        }\n      }),\n      postclip = identity,\n      cache,\n      cacheStream;\n\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  function projection (p) {\n    var x = p[0] * kx, y = p[1] * ky;\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }    \n    return [x + tx, y + ty];\n  }\n  projection.invert = function(p) {\n    var x = p[0] - tx, y = p[1] - ty;\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n    return [x / kx, y / ky];\n  };\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n  projection.translate = function(_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  }\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\n  };\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  return projection;\n}\n"]},"metadata":{},"sourceType":"module"}