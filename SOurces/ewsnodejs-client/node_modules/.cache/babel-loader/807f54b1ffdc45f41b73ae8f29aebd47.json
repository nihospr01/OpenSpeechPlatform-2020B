{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getUpdatedSelectionState\n * @format\n * \n */\n'use strict';\n\nvar DraftOffsetKey = require('./DraftOffsetKey');\n\nvar nullthrows = require('fbjs/lib/nullthrows');\n\nfunction getUpdatedSelectionState(editorState, anchorKey, anchorOffset, focusKey, focusOffset) {\n  var selection = nullthrows(editorState.getSelection());\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!anchorKey || !focusKey) {\n      /*eslint-disable no-console */\n      console.warn('Invalid selection state.', arguments, editorState.toJS());\n      /*eslint-enable no-console */\n\n      return selection;\n    }\n  }\n\n  var anchorPath = DraftOffsetKey.decode(anchorKey);\n  var anchorBlockKey = anchorPath.blockKey;\n  var anchorLeaf = editorState.getBlockTree(anchorBlockKey).getIn([anchorPath.decoratorKey, 'leaves', anchorPath.leafKey]);\n  var focusPath = DraftOffsetKey.decode(focusKey);\n  var focusBlockKey = focusPath.blockKey;\n  var focusLeaf = editorState.getBlockTree(focusBlockKey).getIn([focusPath.decoratorKey, 'leaves', focusPath.leafKey]);\n  var anchorLeafStart = anchorLeaf.get('start');\n  var focusLeafStart = focusLeaf.get('start');\n  var anchorBlockOffset = anchorLeaf ? anchorLeafStart + anchorOffset : null;\n  var focusBlockOffset = focusLeaf ? focusLeafStart + focusOffset : null;\n  var areEqual = selection.getAnchorKey() === anchorBlockKey && selection.getAnchorOffset() === anchorBlockOffset && selection.getFocusKey() === focusBlockKey && selection.getFocusOffset() === focusBlockOffset;\n\n  if (areEqual) {\n    return selection;\n  }\n\n  var isBackward = false;\n\n  if (anchorBlockKey === focusBlockKey) {\n    var anchorLeafEnd = anchorLeaf.get('end');\n    var focusLeafEnd = focusLeaf.get('end');\n\n    if (focusLeafStart === anchorLeafStart && focusLeafEnd === anchorLeafEnd) {\n      isBackward = focusOffset < anchorOffset;\n    } else {\n      isBackward = focusLeafStart < anchorLeafStart;\n    }\n  } else {\n    var startKey = editorState.getCurrentContent().getBlockMap().keySeq().skipUntil(function (v) {\n      return v === anchorBlockKey || v === focusBlockKey;\n    }).first();\n    isBackward = startKey === focusBlockKey;\n  }\n\n  return selection.merge({\n    anchorKey: anchorBlockKey,\n    anchorOffset: anchorBlockOffset,\n    focusKey: focusBlockKey,\n    focusOffset: focusBlockOffset,\n    isBackward: isBackward\n  });\n}\n\nmodule.exports = getUpdatedSelectionState;","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/draft-js/lib/getUpdatedSelectionState.js"],"names":["DraftOffsetKey","require","nullthrows","getUpdatedSelectionState","editorState","anchorKey","anchorOffset","focusKey","focusOffset","selection","getSelection","process","env","NODE_ENV","console","warn","arguments","toJS","anchorPath","decode","anchorBlockKey","blockKey","anchorLeaf","getBlockTree","getIn","decoratorKey","leafKey","focusPath","focusBlockKey","focusLeaf","anchorLeafStart","get","focusLeafStart","anchorBlockOffset","focusBlockOffset","areEqual","getAnchorKey","getAnchorOffset","getFocusKey","getFocusOffset","isBackward","anchorLeafEnd","focusLeafEnd","startKey","getCurrentContent","getBlockMap","keySeq","skipUntil","v","first","merge","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,qBAAD,CAAxB;;AAEA,SAASE,wBAAT,CAAkCC,WAAlC,EAA+CC,SAA/C,EAA0DC,YAA1D,EAAwEC,QAAxE,EAAkFC,WAAlF,EAA+F;AAC7F,MAAIC,SAAS,GAAGP,UAAU,CAACE,WAAW,CAACM,YAAZ,EAAD,CAA1B;;AACA,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAI,CAACR,SAAD,IAAc,CAACE,QAAnB,EAA6B;AAC3B;AACAO,MAAAA,OAAO,CAACC,IAAR,CAAa,0BAAb,EAAyCC,SAAzC,EAAoDZ,WAAW,CAACa,IAAZ,EAApD;AACA;;AACA,aAAOR,SAAP;AACD;AACF;;AAED,MAAIS,UAAU,GAAGlB,cAAc,CAACmB,MAAf,CAAsBd,SAAtB,CAAjB;AACA,MAAIe,cAAc,GAAGF,UAAU,CAACG,QAAhC;AACA,MAAIC,UAAU,GAAGlB,WAAW,CAACmB,YAAZ,CAAyBH,cAAzB,EAAyCI,KAAzC,CAA+C,CAACN,UAAU,CAACO,YAAZ,EAA0B,QAA1B,EAAoCP,UAAU,CAACQ,OAA/C,CAA/C,CAAjB;AAEA,MAAIC,SAAS,GAAG3B,cAAc,CAACmB,MAAf,CAAsBZ,QAAtB,CAAhB;AACA,MAAIqB,aAAa,GAAGD,SAAS,CAACN,QAA9B;AACA,MAAIQ,SAAS,GAAGzB,WAAW,CAACmB,YAAZ,CAAyBK,aAAzB,EAAwCJ,KAAxC,CAA8C,CAACG,SAAS,CAACF,YAAX,EAAyB,QAAzB,EAAmCE,SAAS,CAACD,OAA7C,CAA9C,CAAhB;AAEA,MAAII,eAAe,GAAGR,UAAU,CAACS,GAAX,CAAe,OAAf,CAAtB;AACA,MAAIC,cAAc,GAAGH,SAAS,CAACE,GAAV,CAAc,OAAd,CAArB;AAEA,MAAIE,iBAAiB,GAAGX,UAAU,GAAGQ,eAAe,GAAGxB,YAArB,GAAoC,IAAtE;AACA,MAAI4B,gBAAgB,GAAGL,SAAS,GAAGG,cAAc,GAAGxB,WAApB,GAAkC,IAAlE;AAEA,MAAI2B,QAAQ,GAAG1B,SAAS,CAAC2B,YAAV,OAA6BhB,cAA7B,IAA+CX,SAAS,CAAC4B,eAAV,OAAgCJ,iBAA/E,IAAoGxB,SAAS,CAAC6B,WAAV,OAA4BV,aAAhI,IAAiJnB,SAAS,CAAC8B,cAAV,OAA+BL,gBAA/L;;AAEA,MAAIC,QAAJ,EAAc;AACZ,WAAO1B,SAAP;AACD;;AAED,MAAI+B,UAAU,GAAG,KAAjB;;AACA,MAAIpB,cAAc,KAAKQ,aAAvB,EAAsC;AACpC,QAAIa,aAAa,GAAGnB,UAAU,CAACS,GAAX,CAAe,KAAf,CAApB;AACA,QAAIW,YAAY,GAAGb,SAAS,CAACE,GAAV,CAAc,KAAd,CAAnB;;AACA,QAAIC,cAAc,KAAKF,eAAnB,IAAsCY,YAAY,KAAKD,aAA3D,EAA0E;AACxED,MAAAA,UAAU,GAAGhC,WAAW,GAAGF,YAA3B;AACD,KAFD,MAEO;AACLkC,MAAAA,UAAU,GAAGR,cAAc,GAAGF,eAA9B;AACD;AACF,GARD,MAQO;AACL,QAAIa,QAAQ,GAAGvC,WAAW,CAACwC,iBAAZ,GAAgCC,WAAhC,GAA8CC,MAA9C,GAAuDC,SAAvD,CAAiE,UAAUC,CAAV,EAAa;AAC3F,aAAOA,CAAC,KAAK5B,cAAN,IAAwB4B,CAAC,KAAKpB,aAArC;AACD,KAFc,EAEZqB,KAFY,EAAf;AAGAT,IAAAA,UAAU,GAAGG,QAAQ,KAAKf,aAA1B;AACD;;AAED,SAAOnB,SAAS,CAACyC,KAAV,CAAgB;AACrB7C,IAAAA,SAAS,EAAEe,cADU;AAErBd,IAAAA,YAAY,EAAE2B,iBAFO;AAGrB1B,IAAAA,QAAQ,EAAEqB,aAHW;AAIrBpB,IAAAA,WAAW,EAAE0B,gBAJQ;AAKrBM,IAAAA,UAAU,EAAEA;AALS,GAAhB,CAAP;AAOD;;AAEDW,MAAM,CAACC,OAAP,GAAiBjD,wBAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getUpdatedSelectionState\n * @format\n * \n */\n\n'use strict';\n\nvar DraftOffsetKey = require('./DraftOffsetKey');\n\nvar nullthrows = require('fbjs/lib/nullthrows');\n\nfunction getUpdatedSelectionState(editorState, anchorKey, anchorOffset, focusKey, focusOffset) {\n  var selection = nullthrows(editorState.getSelection());\n  if (process.env.NODE_ENV !== 'production') {\n    if (!anchorKey || !focusKey) {\n      /*eslint-disable no-console */\n      console.warn('Invalid selection state.', arguments, editorState.toJS());\n      /*eslint-enable no-console */\n      return selection;\n    }\n  }\n\n  var anchorPath = DraftOffsetKey.decode(anchorKey);\n  var anchorBlockKey = anchorPath.blockKey;\n  var anchorLeaf = editorState.getBlockTree(anchorBlockKey).getIn([anchorPath.decoratorKey, 'leaves', anchorPath.leafKey]);\n\n  var focusPath = DraftOffsetKey.decode(focusKey);\n  var focusBlockKey = focusPath.blockKey;\n  var focusLeaf = editorState.getBlockTree(focusBlockKey).getIn([focusPath.decoratorKey, 'leaves', focusPath.leafKey]);\n\n  var anchorLeafStart = anchorLeaf.get('start');\n  var focusLeafStart = focusLeaf.get('start');\n\n  var anchorBlockOffset = anchorLeaf ? anchorLeafStart + anchorOffset : null;\n  var focusBlockOffset = focusLeaf ? focusLeafStart + focusOffset : null;\n\n  var areEqual = selection.getAnchorKey() === anchorBlockKey && selection.getAnchorOffset() === anchorBlockOffset && selection.getFocusKey() === focusBlockKey && selection.getFocusOffset() === focusBlockOffset;\n\n  if (areEqual) {\n    return selection;\n  }\n\n  var isBackward = false;\n  if (anchorBlockKey === focusBlockKey) {\n    var anchorLeafEnd = anchorLeaf.get('end');\n    var focusLeafEnd = focusLeaf.get('end');\n    if (focusLeafStart === anchorLeafStart && focusLeafEnd === anchorLeafEnd) {\n      isBackward = focusOffset < anchorOffset;\n    } else {\n      isBackward = focusLeafStart < anchorLeafStart;\n    }\n  } else {\n    var startKey = editorState.getCurrentContent().getBlockMap().keySeq().skipUntil(function (v) {\n      return v === anchorBlockKey || v === focusBlockKey;\n    }).first();\n    isBackward = startKey === focusBlockKey;\n  }\n\n  return selection.merge({\n    anchorKey: anchorBlockKey,\n    anchorOffset: anchorBlockOffset,\n    focusKey: focusBlockKey,\n    focusOffset: focusBlockOffset,\n    isBackward: isBackward\n  });\n}\n\nmodule.exports = getUpdatedSelectionState;"]},"metadata":{},"sourceType":"script"}