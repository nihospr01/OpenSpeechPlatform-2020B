{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule decodeEntityRanges\n * @format\n * \n */\n'use strict';\n\nvar UnicodeUtils = require('fbjs/lib/UnicodeUtils');\n\nvar substr = UnicodeUtils.substr;\n/**\n * Convert to native JavaScript string lengths to determine ranges.\n */\n\nfunction decodeEntityRanges(text, ranges) {\n  var entities = Array(text.length).fill(null);\n\n  if (ranges) {\n    ranges.forEach(function (range) {\n      // Using Unicode-enabled substrings converted to JavaScript lengths,\n      // fill the output array with entity keys.\n      var start = substr(text, 0, range.offset).length;\n      var end = start + substr(text, range.offset, range.length).length;\n\n      for (var ii = start; ii < end; ii++) {\n        entities[ii] = range.key;\n      }\n    });\n  }\n\n  return entities;\n}\n\nmodule.exports = decodeEntityRanges;","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/draft-js/lib/decodeEntityRanges.js"],"names":["UnicodeUtils","require","substr","decodeEntityRanges","text","ranges","entities","Array","length","fill","forEach","range","start","offset","end","ii","key","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,uBAAD,CAA1B;;AAEA,IAAIC,MAAM,GAAGF,YAAY,CAACE,MAA1B;AAEA;AACA;AACA;;AAEA,SAASC,kBAAT,CAA4BC,IAA5B,EAAkCC,MAAlC,EAA0C;AACxC,MAAIC,QAAQ,GAAGC,KAAK,CAACH,IAAI,CAACI,MAAN,CAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAAf;;AACA,MAAIJ,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACK,OAAP,CAAe,UAAUC,KAAV,EAAiB;AAC9B;AACA;AACA,UAAIC,KAAK,GAAGV,MAAM,CAACE,IAAD,EAAO,CAAP,EAAUO,KAAK,CAACE,MAAhB,CAAN,CAA8BL,MAA1C;AACA,UAAIM,GAAG,GAAGF,KAAK,GAAGV,MAAM,CAACE,IAAD,EAAOO,KAAK,CAACE,MAAb,EAAqBF,KAAK,CAACH,MAA3B,CAAN,CAAyCA,MAA3D;;AACA,WAAK,IAAIO,EAAE,GAAGH,KAAd,EAAqBG,EAAE,GAAGD,GAA1B,EAA+BC,EAAE,EAAjC,EAAqC;AACnCT,QAAAA,QAAQ,CAACS,EAAD,CAAR,GAAeJ,KAAK,CAACK,GAArB;AACD;AACF,KARD;AASD;;AACD,SAAOV,QAAP;AACD;;AAEDW,MAAM,CAACC,OAAP,GAAiBf,kBAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule decodeEntityRanges\n * @format\n * \n */\n\n'use strict';\n\nvar UnicodeUtils = require('fbjs/lib/UnicodeUtils');\n\nvar substr = UnicodeUtils.substr;\n\n/**\n * Convert to native JavaScript string lengths to determine ranges.\n */\n\nfunction decodeEntityRanges(text, ranges) {\n  var entities = Array(text.length).fill(null);\n  if (ranges) {\n    ranges.forEach(function (range) {\n      // Using Unicode-enabled substrings converted to JavaScript lengths,\n      // fill the output array with entity keys.\n      var start = substr(text, 0, range.offset).length;\n      var end = start + substr(text, range.offset, range.length).length;\n      for (var ii = start; ii < end; ii++) {\n        entities[ii] = range.key;\n      }\n    });\n  }\n  return entities;\n}\n\nmodule.exports = decodeEntityRanges;"]},"metadata":{},"sourceType":"script"}