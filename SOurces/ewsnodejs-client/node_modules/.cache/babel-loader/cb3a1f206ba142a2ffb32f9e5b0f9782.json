{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _util = require('../util');\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj['default'] = obj;\n    return newObj;\n  }\n}\n/**\n *  Rule for validating a regular expression pattern.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\n\nfunction pattern(rule, value, source, errors, options) {\n  if (rule.pattern) {\n    if (rule.pattern instanceof RegExp) {\n      // if a RegExp instance is passed, reset `lastIndex` in case its `global`\n      // flag is accidentally set to `true`, which in a validation scenario\n      // is not necessary and the result might be misleading\n      rule.pattern.lastIndex = 0;\n\n      if (!rule.pattern.test(value)) {\n        errors.push(util.format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));\n      }\n    } else if (typeof rule.pattern === 'string') {\n      var _pattern = new RegExp(rule.pattern);\n\n      if (!_pattern.test(value)) {\n        errors.push(util.format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));\n      }\n    }\n  }\n}\n\nexports['default'] = pattern;","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/async-validator/es/rule/pattern.js"],"names":["Object","defineProperty","exports","value","_util","require","util","_interopRequireWildcard","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","pattern","rule","source","errors","options","RegExp","lastIndex","test","push","format","messages","mismatch","fullField","_pattern"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AAEA,IAAIC,IAAI,GAAGC,uBAAuB,CAACH,KAAD,CAAlC;;AAEA,SAASG,uBAAT,CAAiCC,GAAjC,EAAsC;AAAE,MAAIA,GAAG,IAAIA,GAAG,CAACC,UAAf,EAA2B;AAAE,WAAOD,GAAP;AAAa,GAA1C,MAAgD;AAAE,QAAIE,MAAM,GAAG,EAAb;;AAAiB,QAAIF,GAAG,IAAI,IAAX,EAAiB;AAAE,WAAK,IAAIG,GAAT,IAAgBH,GAAhB,EAAqB;AAAE,YAAIR,MAAM,CAACY,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0CG,GAA1C,CAAJ,EAAoDD,MAAM,CAACC,GAAD,CAAN,GAAcH,GAAG,CAACG,GAAD,CAAjB;AAAyB;AAAE;;AAACD,IAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBF,GAApB;AAAyB,WAAOE,MAAP;AAAgB;AAAE;AAEhR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASK,OAAT,CAAiBC,IAAjB,EAAuBb,KAAvB,EAA8Bc,MAA9B,EAAsCC,MAAtC,EAA8CC,OAA9C,EAAuD;AACrD,MAAIH,IAAI,CAACD,OAAT,EAAkB;AAChB,QAAIC,IAAI,CAACD,OAAL,YAAwBK,MAA5B,EAAoC;AAClC;AACA;AACA;AACAJ,MAAAA,IAAI,CAACD,OAAL,CAAaM,SAAb,GAAyB,CAAzB;;AACA,UAAI,CAACL,IAAI,CAACD,OAAL,CAAaO,IAAb,CAAkBnB,KAAlB,CAAL,EAA+B;AAC7Be,QAAAA,MAAM,CAACK,IAAP,CAAYjB,IAAI,CAACkB,MAAL,CAAYL,OAAO,CAACM,QAAR,CAAiBV,OAAjB,CAAyBW,QAArC,EAA+CV,IAAI,CAACW,SAApD,EAA+DxB,KAA/D,EAAsEa,IAAI,CAACD,OAA3E,CAAZ;AACD;AACF,KARD,MAQO,IAAI,OAAOC,IAAI,CAACD,OAAZ,KAAwB,QAA5B,EAAsC;AAC3C,UAAIa,QAAQ,GAAG,IAAIR,MAAJ,CAAWJ,IAAI,CAACD,OAAhB,CAAf;;AACA,UAAI,CAACa,QAAQ,CAACN,IAAT,CAAcnB,KAAd,CAAL,EAA2B;AACzBe,QAAAA,MAAM,CAACK,IAAP,CAAYjB,IAAI,CAACkB,MAAL,CAAYL,OAAO,CAACM,QAAR,CAAiBV,OAAjB,CAAyBW,QAArC,EAA+CV,IAAI,CAACW,SAApD,EAA+DxB,KAA/D,EAAsEa,IAAI,CAACD,OAA3E,CAAZ;AACD;AACF;AACF;AACF;;AAEDb,OAAO,CAAC,SAAD,CAAP,GAAqBa,OAArB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _util = require('../util');\n\nvar util = _interopRequireWildcard(_util);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\n/**\n *  Rule for validating a regular expression pattern.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction pattern(rule, value, source, errors, options) {\n  if (rule.pattern) {\n    if (rule.pattern instanceof RegExp) {\n      // if a RegExp instance is passed, reset `lastIndex` in case its `global`\n      // flag is accidentally set to `true`, which in a validation scenario\n      // is not necessary and the result might be misleading\n      rule.pattern.lastIndex = 0;\n      if (!rule.pattern.test(value)) {\n        errors.push(util.format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));\n      }\n    } else if (typeof rule.pattern === 'string') {\n      var _pattern = new RegExp(rule.pattern);\n      if (!_pattern.test(value)) {\n        errors.push(util.format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));\n      }\n    }\n  }\n}\n\nexports['default'] = pattern;"]},"metadata":{},"sourceType":"script"}