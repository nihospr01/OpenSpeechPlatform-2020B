{"ast":null,"code":"import _classCallCheck from\"/opt/osp/ewsnodejs-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/opt/osp/ewsnodejs-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/opt/osp/ewsnodejs-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/opt/osp/ewsnodejs-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{withStyles}from'@material-ui/styles';import Typography from'@material-ui/core/Typography';import Button from'@material-ui/core/Button';import TableRow from'@material-ui/core/TableRow';import TableCell from'@material-ui/core/TableCell';import{withRouter}from'react-router-dom';import{compose}from'recompose';import withUserAuth from'context/withUserAuth';var styles=function styles(theme){return{root:{flexGrow:1},content:{padding:theme.spacing(3)},listenerSection:{marginTop:30,width:'90%',maxWidth:1000},listenerSectionContent:{display:'flex',flexDirection:'column',alignItems:'center'},topBarButton:{marginLeft:30},textField:{width:'90%',maxWidth:400,marginBottom:20}};};var FileListRow=/*#__PURE__*/function(_Component){_inherits(FileListRow,_Component);var _super=_createSuper(FileListRow);function FileListRow(){var _this;_classCallCheck(this,FileListRow);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={};return _this;}_createClass(FileListRow,[{key:\"render\",value:function render(){var _this$props=this.props,filename=_this$props.filename,handleDelete=_this$props.handleDelete;return/*#__PURE__*/React.createElement(TableRow,{hover:true},/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(Typography,{variant:\"subtitle1\",color:\"textSecondary\"},filename)),/*#__PURE__*/React.createElement(TableCell,null,/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return handleDelete(filename);},color:\"secondary\"},\"Delete\")));}}]);return FileListRow;}(Component);export default compose(withUserAuth,withRouter,withStyles(styles))(FileListRow);","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/src/components/fileListRow.jsx"],"names":["React","Component","withStyles","Typography","Button","TableRow","TableCell","withRouter","compose","withUserAuth","styles","theme","root","flexGrow","content","padding","spacing","listenerSection","marginTop","width","maxWidth","listenerSectionContent","display","flexDirection","alignItems","topBarButton","marginLeft","textField","marginBottom","FileListRow","state","props","filename","handleDelete"],"mappings":"gjBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,UAAT,KAA2B,qBAA3B,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,OAAT,KAAwB,WAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,sBAAzB,CAGA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,QAAY,CACvBC,IAAI,CAAE,CACFC,QAAQ,CAAE,CADR,CADiB,CAIvBC,OAAO,CAAE,CACLC,OAAO,CAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADJ,CAJc,CAOvBC,eAAe,CAAE,CACbC,SAAS,CAAE,EADE,CAEbC,KAAK,CAAE,KAFM,CAGbC,QAAQ,CAAE,IAHG,CAPM,CAYvBC,sBAAsB,CAAE,CACpBC,OAAO,CAAE,MADW,CAEpBC,aAAa,CAAE,QAFK,CAGpBC,UAAU,CAAE,QAHQ,CAZD,CAiBvBC,YAAY,CAAE,CACVC,UAAU,CAAE,EADF,CAjBS,CAoBvBC,SAAS,CAAE,CACPR,KAAK,CAAE,KADA,CAEPC,QAAQ,CAAE,GAFH,CAGPQ,YAAY,CAAE,EAHP,CApBY,CAAZ,EAAf,C,GA2BMC,CAAAA,W,+UACFC,K,CAAQ,E,8EAIC,iBAID,KAAKC,KAJJ,CAEDC,QAFC,aAEDA,QAFC,CAGDC,YAHC,aAGDA,YAHC,CAML,mBACI,oBAAC,QAAD,EAAU,KAAK,KAAf,eACI,oBAAC,SAAD,mBACI,oBAAC,UAAD,EAAY,OAAO,CAAC,WAApB,CAAgC,KAAK,CAAC,eAAtC,EAAuDD,QAAvD,CADJ,CADJ,cAII,oBAAC,SAAD,mBACI,oBAAC,MAAD,EACI,OAAO,CAAE,yBAAMC,CAAAA,YAAY,CAACD,QAAD,CAAlB,EADb,CAEI,KAAK,CAAC,WAFV,WADJ,CAJJ,CADJ,CAqHH,C,yBAhIqB/B,S,EAuI1B,cAAeO,CAAAA,OAAO,CAClBC,YADkB,CAElBF,UAFkB,CAGlBL,UAAU,CAACQ,MAAD,CAHQ,CAAP,CAIbmB,WAJa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport withUserAuth from 'context/withUserAuth';\nimport PropTypes from 'prop-types';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    content: {\n        padding: theme.spacing(3),\n    },\n    listenerSection: {\n        marginTop: 30,\n        width: '90%',\n        maxWidth: 1000,\n    },\n    listenerSectionContent: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    topBarButton: {\n        marginLeft: 30,\n    },\n    textField: {\n        width: '90%',\n        maxWidth: 400,\n        marginBottom: 20,\n    },\n});\n\nclass FileListRow extends Component {\n    state = {\n\n    };\n    \n    render() {\n        const { \n            filename,\n            handleDelete,\n        } = this.props;\n        \n        return (\n            <TableRow hover>\n                <TableCell>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\">{filename}</Typography>\n                </TableCell>\n                <TableCell>\n                    <Button\n                        onClick={() => handleDelete(filename)}\n                        color=\"secondary\"\n                    >\n                        Delete\n                    </Button>\n                    {/* <Button\n                        onClick={null}\n                        color=\"secondary\"\n                    >\n                        Replace\n                    </Button> */}\n                    {/* <Button\n                        onClick={this.handleEditPasswordClose}\n                        color=\"secondary\"\n                    >\n                        Cancel\n                    </Button> */}\n                </TableCell>\n                {/* <Dialog open={showLogOpen} fullWidth={true} maxWidth='xl' onClose={this.handleShowLogClose}>\n                    <DialogTitle>Log</DialogTitle>\n                    <DialogContent>\n                        <Typography\n                            variant=\"body1\"\n                            style={{\n                                whiteSpace: 'pre-line'\n                            }}\n                        >\n                            {listener.userLog}\n                        </Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            color=\"primary\"\n                            onClick={this.exportTXT}\n                        >\n                            Export\n                        </Button>\n                        <Button\n                            color=\"primary\"\n                            onClick={this.handleShowLogClose}\n                        >\n                            OK\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog open={editPasswordOpen} onClose={this.handleEditPasswordClose}>\n                    <DialogTitle>Edit Password</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            variant=\"outlined\"\n                            label=\"Current Password\"\n                            disabled\n                            value={listener.password}\n                            style={{\n                                width: '90%',\n                                maxWidth: 400,\n                                marginBottom: 20\n                            }}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            label=\"New Password\"\n                            style={{\n                                width: '90%',\n                                maxWidth: 400,\n                                marginBottom: 20\n                            }}\n                            onChange={this.handlePasswordChange}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            onClick={this.handleEditPasswordClose}\n                            color=\"secondary\"\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            color=\"primary\"\n                            disabled={submitDisabled}\n                            onClick={this.handleEditPassword}\n                        >\n                            Confirm\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog open={deleteDialogOpen} onClose={this.handleClose}>\n                    <DialogTitle>Delete Listener</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Warning! This action is NOT reversable.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            onClick={this.handleClose}\n                            color=\"secondary\"\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            color=\"primary\"\n                            onClick={this.handleDeleteListener}\n                        >\n                            Delete\n                        </Button>\n                    </DialogActions>\n                </Dialog> */}\n            </TableRow>\n        );\n    }\n}\n\nFileListRow.propTypes = {\n    handleDelete: PropTypes.func.isRequired,\n};\n\nexport default compose(\n    withUserAuth,\n    withRouter,\n    withStyles(styles)\n)(FileListRow);"]},"metadata":{},"sourceType":"module"}