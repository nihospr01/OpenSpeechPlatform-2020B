{"ast":null,"code":"import { Selection } from \"./index\";\nimport matcher from \"../matcher\";\nexport default function (match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/d3-selection/src/selection/filter.js"],"names":["Selection","matcher","match","groups","_groups","m","length","subgroups","Array","j","group","n","subgroup","node","i","call","__data__","push","_parents"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,SAAxB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,eAAe,UAASC,KAAT,EAAgB;AAC7B,MAAI,OAAOA,KAAP,KAAiB,UAArB,EAAiCA,KAAK,GAAGD,OAAO,CAACC,KAAD,CAAf;;AAEjC,OAAK,IAAIC,MAAM,GAAG,KAAKC,OAAlB,EAA2BC,CAAC,GAAGF,MAAM,CAACG,MAAtC,EAA8CC,SAAS,GAAG,IAAIC,KAAJ,CAAUH,CAAV,CAA1D,EAAwEI,CAAC,GAAG,CAAjF,EAAoFA,CAAC,GAAGJ,CAAxF,EAA2F,EAAEI,CAA7F,EAAgG;AAC9F,SAAK,IAAIC,KAAK,GAAGP,MAAM,CAACM,CAAD,CAAlB,EAAuBE,CAAC,GAAGD,KAAK,CAACJ,MAAjC,EAAyCM,QAAQ,GAAGL,SAAS,CAACE,CAAD,CAAT,GAAe,EAAnE,EAAuEI,IAAvE,EAA6EC,CAAC,GAAG,CAAtF,EAAyFA,CAAC,GAAGH,CAA7F,EAAgG,EAAEG,CAAlG,EAAqG;AACnG,UAAI,CAACD,IAAI,GAAGH,KAAK,CAACI,CAAD,CAAb,KAAqBZ,KAAK,CAACa,IAAN,CAAWF,IAAX,EAAiBA,IAAI,CAACG,QAAtB,EAAgCF,CAAhC,EAAmCJ,KAAnC,CAAzB,EAAoE;AAClEE,QAAAA,QAAQ,CAACK,IAAT,CAAcJ,IAAd;AACD;AACF;AACF;;AAED,SAAO,IAAIb,SAAJ,CAAcO,SAAd,EAAyB,KAAKW,QAA9B,CAAP;AACD","sourcesContent":["import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n"]},"metadata":{},"sourceType":"module"}