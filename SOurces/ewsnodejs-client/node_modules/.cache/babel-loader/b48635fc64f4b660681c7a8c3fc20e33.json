{"ast":null,"code":"import number from \"./number\";\nexport default function (values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/d3-array/src/quantile.js"],"names":["number","values","p","valueof","n","length","i","i0","Math","floor","value0","value1"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,UAAnB;AAEA,eAAe,UAASC,MAAT,EAAiBC,CAAjB,EAAoBC,OAApB,EAA6B;AAC1C,MAAIA,OAAO,IAAI,IAAf,EAAqBA,OAAO,GAAGH,MAAV;AACrB,MAAI,EAAEI,CAAC,GAAGH,MAAM,CAACI,MAAb,CAAJ,EAA0B;AAC1B,MAAI,CAACH,CAAC,GAAG,CAACA,CAAN,KAAY,CAAZ,IAAiBE,CAAC,GAAG,CAAzB,EAA4B,OAAO,CAACD,OAAO,CAACF,MAAM,CAAC,CAAD,CAAP,EAAY,CAAZ,EAAeA,MAAf,CAAf;AAC5B,MAAIC,CAAC,IAAI,CAAT,EAAY,OAAO,CAACC,OAAO,CAACF,MAAM,CAACG,CAAC,GAAG,CAAL,CAAP,EAAgBA,CAAC,GAAG,CAApB,EAAuBH,MAAvB,CAAf;AACZ,MAAIG,CAAJ;AAAA,MACIE,CAAC,GAAG,CAACF,CAAC,GAAG,CAAL,IAAUF,CADlB;AAAA,MAEIK,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWH,CAAX,CAFT;AAAA,MAGII,MAAM,GAAG,CAACP,OAAO,CAACF,MAAM,CAACM,EAAD,CAAP,EAAaA,EAAb,EAAiBN,MAAjB,CAHrB;AAAA,MAIIU,MAAM,GAAG,CAACR,OAAO,CAACF,MAAM,CAACM,EAAE,GAAG,CAAN,CAAP,EAAiBA,EAAE,GAAG,CAAtB,EAAyBN,MAAzB,CAJrB;AAKA,SAAOS,MAAM,GAAG,CAACC,MAAM,GAAGD,MAAV,KAAqBJ,CAAC,GAAGC,EAAzB,CAAhB;AACD","sourcesContent":["import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n"]},"metadata":{},"sourceType":"module"}