{"ast":null,"code":"// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function (s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\":\n        i0 = i1 = i;\n        break;\n\n      case \"0\":\n        if (i0 === 0) i0 = i;\n        i1 = i;\n        break;\n\n      default:\n        if (!+s[i]) break out;\n        if (i0 > 0) i0 = 0;\n        break;\n    }\n  }\n\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/d3-format/src/formatTrim.js"],"names":["s","out","n","length","i","i0","i1","slice"],"mappings":"AAAA;AACA,eAAe,UAASA,CAAT,EAAY;AACzBC,EAAAA,GAAG,EAAE,KAAK,IAAIC,CAAC,GAAGF,CAAC,CAACG,MAAV,EAAkBC,CAAC,GAAG,CAAtB,EAAyBC,EAAE,GAAG,CAAC,CAA/B,EAAkCC,EAAvC,EAA2CF,CAAC,GAAGF,CAA/C,EAAkD,EAAEE,CAApD,EAAuD;AAC1D,YAAQJ,CAAC,CAACI,CAAD,CAAT;AACE,WAAK,GAAL;AAAUC,QAAAA,EAAE,GAAGC,EAAE,GAAGF,CAAV;AAAa;;AACvB,WAAK,GAAL;AAAU,YAAIC,EAAE,KAAK,CAAX,EAAcA,EAAE,GAAGD,CAAL;AAAQE,QAAAA,EAAE,GAAGF,CAAL;AAAQ;;AACxC;AAAS,YAAI,CAAC,CAACJ,CAAC,CAACI,CAAD,CAAP,EAAY,MAAMH,GAAN;AAAW,YAAII,EAAE,GAAG,CAAT,EAAYA,EAAE,GAAG,CAAL;AAAQ;AAHtD;AAKD;;AACD,SAAOA,EAAE,GAAG,CAAL,GAASL,CAAC,CAACO,KAAF,CAAQ,CAAR,EAAWF,EAAX,IAAiBL,CAAC,CAACO,KAAF,CAAQD,EAAE,GAAG,CAAb,CAA1B,GAA4CN,CAAnD;AACD","sourcesContent":["// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n"]},"metadata":{},"sourceType":"module"}