{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule convertFromHTMLToContentBlocks\n * @format\n * \n */\n'use strict';\n\nvar _extends = _assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _knownListItemDepthCl,\n    _assign = require('object-assign');\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar CharacterMetadata = require('./CharacterMetadata');\n\nvar ContentBlock = require('./ContentBlock');\n\nvar ContentBlockNode = require('./ContentBlockNode');\n\nvar DefaultDraftBlockRenderMap = require('./DefaultDraftBlockRenderMap');\n\nvar DraftEntity = require('./DraftEntity');\n\nvar DraftFeatureFlags = require('./DraftFeatureFlags');\n\nvar Immutable = require('immutable');\n\nvar _require = require('immutable'),\n    Set = _require.Set;\n\nvar URI = require('fbjs/lib/URI');\n\nvar cx = require('fbjs/lib/cx');\n\nvar generateRandomKey = require('./generateRandomKey');\n\nvar getSafeBodyFromHTML = require('./getSafeBodyFromHTML');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar sanitizeDraftText = require('./sanitizeDraftText');\n\nvar experimentalTreeDataSupport = DraftFeatureFlags.draft_tree_data_support;\nvar List = Immutable.List,\n    OrderedSet = Immutable.OrderedSet;\nvar NBSP = '&nbsp;';\nvar SPACE = ' '; // Arbitrary max indent\n\nvar MAX_DEPTH = 4; // used for replacing characters in HTML\n\nvar REGEX_CR = new RegExp('\\r', 'g');\nvar REGEX_LF = new RegExp('\\n', 'g');\nvar REGEX_NBSP = new RegExp(NBSP, 'g');\nvar REGEX_CARRIAGE = new RegExp('&#13;?', 'g');\nvar REGEX_ZWS = new RegExp('&#8203;?', 'g'); // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight\n\nvar boldValues = ['bold', 'bolder', '500', '600', '700', '800', '900'];\nvar notBoldValues = ['light', 'lighter', '100', '200', '300', '400']; // Block tag flow is different because LIs do not have\n// a deterministic style ;_;\n\nvar inlineTags = {\n  b: 'BOLD',\n  code: 'CODE',\n  del: 'STRIKETHROUGH',\n  em: 'ITALIC',\n  i: 'ITALIC',\n  s: 'STRIKETHROUGH',\n  strike: 'STRIKETHROUGH',\n  strong: 'BOLD',\n  u: 'UNDERLINE'\n};\nvar knownListItemDepthClasses = (_knownListItemDepthCl = {}, _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth0'), 0), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth1'), 1), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth2'), 2), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth3'), 3), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth4'), 4), _knownListItemDepthCl);\nvar anchorAttr = ['className', 'href', 'rel', 'target', 'title'];\nvar imgAttr = ['alt', 'className', 'height', 'src', 'width'];\nvar lastBlock = void 0;\nvar EMPTY_CHUNK = {\n  text: '',\n  inlines: [],\n  entities: [],\n  blocks: []\n};\nvar EMPTY_BLOCK = {\n  children: List(),\n  depth: 0,\n  key: '',\n  type: ''\n};\n\nvar getListBlockType = function getListBlockType(tag, lastList) {\n  if (tag === 'li') {\n    return lastList === 'ol' ? 'ordered-list-item' : 'unordered-list-item';\n  }\n\n  return null;\n};\n\nvar getBlockMapSupportedTags = function getBlockMapSupportedTags(blockRenderMap) {\n  var unstyledElement = blockRenderMap.get('unstyled').element;\n  var tags = Set([]);\n  blockRenderMap.forEach(function (draftBlock) {\n    if (draftBlock.aliasedElements) {\n      draftBlock.aliasedElements.forEach(function (tag) {\n        tags = tags.add(tag);\n      });\n    }\n\n    tags = tags.add(draftBlock.element);\n  });\n  return tags.filter(function (tag) {\n    return tag && tag !== unstyledElement;\n  }).toArray().sort();\n}; // custom element conversions\n\n\nvar getMultiMatchedType = function getMultiMatchedType(tag, lastList, multiMatchExtractor) {\n  for (var ii = 0; ii < multiMatchExtractor.length; ii++) {\n    var matchType = multiMatchExtractor[ii](tag, lastList);\n\n    if (matchType) {\n      return matchType;\n    }\n  }\n\n  return null;\n};\n\nvar getBlockTypeForTag = function getBlockTypeForTag(tag, lastList, blockRenderMap) {\n  var matchedTypes = blockRenderMap.filter(function (draftBlock) {\n    return draftBlock.element === tag || draftBlock.wrapper === tag || draftBlock.aliasedElements && draftBlock.aliasedElements.some(function (alias) {\n      return alias === tag;\n    });\n  }).keySeq().toSet().toArray().sort(); // if we dont have any matched type, return unstyled\n  // if we have one matched type return it\n  // if we have multi matched types use the multi-match function to gather type\n\n  switch (matchedTypes.length) {\n    case 0:\n      return 'unstyled';\n\n    case 1:\n      return matchedTypes[0];\n\n    default:\n      return getMultiMatchedType(tag, lastList, [getListBlockType]) || 'unstyled';\n  }\n};\n\nvar processInlineTag = function processInlineTag(tag, node, currentStyle) {\n  var styleToCheck = inlineTags[tag];\n\n  if (styleToCheck) {\n    currentStyle = currentStyle.add(styleToCheck).toOrderedSet();\n  } else if (node instanceof HTMLElement) {\n    var htmlElement = node;\n    currentStyle = currentStyle.withMutations(function (style) {\n      var fontWeight = htmlElement.style.fontWeight;\n      var fontStyle = htmlElement.style.fontStyle;\n      var textDecoration = htmlElement.style.textDecoration;\n\n      if (boldValues.indexOf(fontWeight) >= 0) {\n        style.add('BOLD');\n      } else if (notBoldValues.indexOf(fontWeight) >= 0) {\n        style.remove('BOLD');\n      }\n\n      if (fontStyle === 'italic') {\n        style.add('ITALIC');\n      } else if (fontStyle === 'normal') {\n        style.remove('ITALIC');\n      }\n\n      if (textDecoration === 'underline') {\n        style.add('UNDERLINE');\n      }\n\n      if (textDecoration === 'line-through') {\n        style.add('STRIKETHROUGH');\n      }\n\n      if (textDecoration === 'none') {\n        style.remove('UNDERLINE');\n        style.remove('STRIKETHROUGH');\n      }\n    }).toOrderedSet();\n  }\n\n  return currentStyle;\n};\n\nvar joinChunks = function joinChunks(A, B, experimentalHasNestedBlocks) {\n  // Sometimes two blocks will touch in the DOM and we need to strip the\n  // extra delimiter to preserve niceness.\n  var lastInA = A.text.slice(-1);\n  var firstInB = B.text.slice(0, 1);\n\n  if (lastInA === '\\r' && firstInB === '\\r' && !experimentalHasNestedBlocks) {\n    A.text = A.text.slice(0, -1);\n    A.inlines.pop();\n    A.entities.pop();\n    A.blocks.pop();\n  } // Kill whitespace after blocks\n\n\n  if (lastInA === '\\r') {\n    if (B.text === SPACE || B.text === '\\n') {\n      return A;\n    } else if (firstInB === SPACE || firstInB === '\\n') {\n      B.text = B.text.slice(1);\n      B.inlines.shift();\n      B.entities.shift();\n    }\n  }\n\n  return {\n    text: A.text + B.text,\n    inlines: A.inlines.concat(B.inlines),\n    entities: A.entities.concat(B.entities),\n    blocks: A.blocks.concat(B.blocks)\n  };\n};\n/**\n * Check to see if we have anything like <p> <blockquote> <h1>... to create\n * block tags from. If we do, we can use those and ignore <div> tags. If we\n * don't, we can treat <div> tags as meaningful (unstyled) blocks.\n */\n\n\nvar containsSemanticBlockMarkup = function containsSemanticBlockMarkup(html, blockTags) {\n  return blockTags.some(function (tag) {\n    return html.indexOf('<' + tag) !== -1;\n  });\n};\n\nvar hasValidLinkText = function hasValidLinkText(link) {\n  !(link instanceof HTMLAnchorElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Link must be an HTMLAnchorElement.') : invariant(false) : void 0;\n  var protocol = link.protocol;\n  return protocol === 'http:' || protocol === 'https:' || protocol === 'mailto:';\n};\n\nvar getWhitespaceChunk = function getWhitespaceChunk(inEntity) {\n  var entities = new Array(1);\n\n  if (inEntity) {\n    entities[0] = inEntity;\n  }\n\n  return _extends({}, EMPTY_CHUNK, {\n    text: SPACE,\n    inlines: [OrderedSet()],\n    entities: entities\n  });\n};\n\nvar getSoftNewlineChunk = function getSoftNewlineChunk() {\n  return _extends({}, EMPTY_CHUNK, {\n    text: '\\n',\n    inlines: [OrderedSet()],\n    entities: new Array(1)\n  });\n};\n\nvar getChunkedBlock = function getChunkedBlock() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return _extends({}, EMPTY_BLOCK, props);\n};\n\nvar getBlockDividerChunk = function getBlockDividerChunk(block, depth) {\n  var parentKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return {\n    text: '\\r',\n    inlines: [OrderedSet()],\n    entities: new Array(1),\n    blocks: [getChunkedBlock({\n      parent: parentKey,\n      key: generateRandomKey(),\n      type: block,\n      depth: Math.max(0, Math.min(MAX_DEPTH, depth))\n    })]\n  };\n};\n/**\n *  If we're pasting from one DraftEditor to another we can check to see if\n *  existing list item depth classes are being used and preserve this style\n */\n\n\nvar getListItemDepth = function getListItemDepth(node) {\n  var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  Object.keys(knownListItemDepthClasses).some(function (depthClass) {\n    if (node.classList.contains(depthClass)) {\n      depth = knownListItemDepthClasses[depthClass];\n    }\n  });\n  return depth;\n};\n\nvar genFragment = function genFragment(entityMap, node, inlineStyle, lastList, inBlock, blockTags, depth, blockRenderMap, inEntity, parentKey) {\n  var lastLastBlock = lastBlock;\n  var nodeName = node.nodeName.toLowerCase();\n  var newEntityMap = entityMap;\n  var nextBlockType = 'unstyled';\n  var newBlock = false;\n  var inBlockType = inBlock && getBlockTypeForTag(inBlock, lastList, blockRenderMap);\n\n  var chunk = _extends({}, EMPTY_CHUNK);\n\n  var newChunk = null;\n  var blockKey = void 0; // Base Case\n\n  if (nodeName === '#text') {\n    var _text = node.textContent;\n\n    var nodeTextContent = _text.trim(); // We should not create blocks for leading spaces that are\n    // existing around ol/ul and their children list items\n\n\n    if (lastList && nodeTextContent === '' && node.parentElement) {\n      var parentNodeName = node.parentElement.nodeName.toLowerCase();\n\n      if (parentNodeName === 'ol' || parentNodeName === 'ul') {\n        return {\n          chunk: _extends({}, EMPTY_CHUNK),\n          entityMap: entityMap\n        };\n      }\n    }\n\n    if (nodeTextContent === '' && inBlock !== 'pre') {\n      return {\n        chunk: getWhitespaceChunk(inEntity),\n        entityMap: entityMap\n      };\n    }\n\n    if (inBlock !== 'pre') {\n      // Can't use empty string because MSWord\n      _text = _text.replace(REGEX_LF, SPACE);\n    } // save the last block so we can use it later\n\n\n    lastBlock = nodeName;\n    return {\n      chunk: {\n        text: _text,\n        inlines: Array(_text.length).fill(inlineStyle),\n        entities: Array(_text.length).fill(inEntity),\n        blocks: []\n      },\n      entityMap: entityMap\n    };\n  } // save the last block so we can use it later\n\n\n  lastBlock = nodeName; // BR tags\n\n  if (nodeName === 'br') {\n    if (lastLastBlock === 'br' && (!inBlock || inBlockType === 'unstyled')) {\n      return {\n        chunk: getBlockDividerChunk('unstyled', depth, parentKey),\n        entityMap: entityMap\n      };\n    }\n\n    return {\n      chunk: getSoftNewlineChunk(),\n      entityMap: entityMap\n    };\n  } // IMG tags\n\n\n  if (nodeName === 'img' && node instanceof HTMLImageElement && node.attributes.getNamedItem('src') && node.attributes.getNamedItem('src').value) {\n    var image = node;\n    var entityConfig = {};\n    imgAttr.forEach(function (attr) {\n      var imageAttribute = image.getAttribute(attr);\n\n      if (imageAttribute) {\n        entityConfig[attr] = imageAttribute;\n      }\n    }); // Forcing this node to have children because otherwise no entity will be\n    // created for this node.\n    // The child text node cannot just have a space or return as content -\n    // we strip those out.\n    // See https://github.com/facebook/draft-js/issues/231 for some context.\n\n    node.textContent = \"\\uD83D\\uDCF7\"; // TODO: update this when we remove DraftEntity entirely\n\n    inEntity = DraftEntity.__create('IMAGE', 'MUTABLE', entityConfig || {});\n  } // Inline tags\n\n\n  inlineStyle = processInlineTag(nodeName, node, inlineStyle); // Handle lists\n\n  if (nodeName === 'ul' || nodeName === 'ol') {\n    if (lastList) {\n      depth += 1;\n    }\n\n    lastList = nodeName;\n  }\n\n  if (!experimentalTreeDataSupport && nodeName === 'li' && node instanceof HTMLElement) {\n    depth = getListItemDepth(node, depth);\n  }\n\n  var blockType = getBlockTypeForTag(nodeName, lastList, blockRenderMap);\n  var inListBlock = lastList && inBlock === 'li' && nodeName === 'li';\n  var inBlockOrHasNestedBlocks = (!inBlock || experimentalTreeDataSupport) && blockTags.indexOf(nodeName) !== -1; // Block Tags\n\n  if (inListBlock || inBlockOrHasNestedBlocks) {\n    chunk = getBlockDividerChunk(blockType, depth, parentKey);\n    blockKey = chunk.blocks[0].key;\n    inBlock = nodeName;\n    newBlock = !experimentalTreeDataSupport;\n  } // this is required so that we can handle 'ul' and 'ol'\n\n\n  if (inListBlock) {\n    nextBlockType = lastList === 'ul' ? 'unordered-list-item' : 'ordered-list-item';\n  } // Recurse through children\n\n\n  var child = node.firstChild;\n\n  if (child != null) {\n    nodeName = child.nodeName.toLowerCase();\n  }\n\n  var entityId = null;\n\n  while (child) {\n    if (child instanceof HTMLAnchorElement && child.href && hasValidLinkText(child)) {\n      (function () {\n        var anchor = child;\n        var entityConfig = {};\n        anchorAttr.forEach(function (attr) {\n          var anchorAttribute = anchor.getAttribute(attr);\n\n          if (anchorAttribute) {\n            entityConfig[attr] = anchorAttribute;\n          }\n        });\n        entityConfig.url = new URI(anchor.href).toString(); // TODO: update this when we remove DraftEntity completely\n\n        entityId = DraftEntity.__create('LINK', 'MUTABLE', entityConfig || {});\n      })();\n    } else {\n      entityId = undefined;\n    }\n\n    var _genFragment = genFragment(newEntityMap, child, inlineStyle, lastList, inBlock, blockTags, depth, blockRenderMap, entityId || inEntity, experimentalTreeDataSupport ? blockKey : null),\n        generatedChunk = _genFragment.chunk,\n        maybeUpdatedEntityMap = _genFragment.entityMap;\n\n    newChunk = generatedChunk;\n    newEntityMap = maybeUpdatedEntityMap;\n    chunk = joinChunks(chunk, newChunk, experimentalTreeDataSupport);\n    var sibling = child.nextSibling; // Put in a newline to break up blocks inside blocks\n\n    if (!parentKey && sibling && blockTags.indexOf(nodeName) >= 0 && inBlock) {\n      chunk = joinChunks(chunk, getSoftNewlineChunk());\n    }\n\n    if (sibling) {\n      nodeName = sibling.nodeName.toLowerCase();\n    }\n\n    child = sibling;\n  }\n\n  if (newBlock) {\n    chunk = joinChunks(chunk, getBlockDividerChunk(nextBlockType, depth, parentKey));\n  }\n\n  return {\n    chunk: chunk,\n    entityMap: newEntityMap\n  };\n};\n\nvar getChunkForHTML = function getChunkForHTML(html, DOMBuilder, blockRenderMap, entityMap) {\n  html = html.trim().replace(REGEX_CR, '').replace(REGEX_NBSP, SPACE).replace(REGEX_CARRIAGE, '').replace(REGEX_ZWS, '');\n  var supportedBlockTags = getBlockMapSupportedTags(blockRenderMap);\n  var safeBody = DOMBuilder(html);\n\n  if (!safeBody) {\n    return null;\n  }\n\n  lastBlock = null; // Sometimes we aren't dealing with content that contains nice semantic\n  // tags. In this case, use divs to separate everything out into paragraphs\n  // and hope for the best.\n\n  var workingBlocks = containsSemanticBlockMarkup(html, supportedBlockTags) ? supportedBlockTags : ['div']; // Start with -1 block depth to offset the fact that we are passing in a fake\n  // UL block to start with.\n\n  var fragment = genFragment(entityMap, safeBody, OrderedSet(), 'ul', null, workingBlocks, -1, blockRenderMap);\n  var chunk = fragment.chunk;\n  var newEntityMap = fragment.entityMap; // join with previous block to prevent weirdness on paste\n\n  if (chunk.text.indexOf('\\r') === 0) {\n    chunk = {\n      text: chunk.text.slice(1),\n      inlines: chunk.inlines.slice(1),\n      entities: chunk.entities.slice(1),\n      blocks: chunk.blocks\n    };\n  } // Kill block delimiter at the end\n\n\n  if (chunk.text.slice(-1) === '\\r') {\n    chunk.text = chunk.text.slice(0, -1);\n    chunk.inlines = chunk.inlines.slice(0, -1);\n    chunk.entities = chunk.entities.slice(0, -1);\n    chunk.blocks.pop();\n  } // If we saw no block tags, put an unstyled one in\n\n\n  if (chunk.blocks.length === 0) {\n    chunk.blocks.push(_extends({}, EMPTY_CHUNK, {\n      type: 'unstyled',\n      depth: 0\n    }));\n  } // Sometimes we start with text that isn't in a block, which is then\n  // followed by blocks. Need to fix up the blocks to add in\n  // an unstyled block for this content\n\n\n  if (chunk.text.split('\\r').length === chunk.blocks.length + 1) {\n    chunk.blocks.unshift({\n      type: 'unstyled',\n      depth: 0\n    });\n  }\n\n  return {\n    chunk: chunk,\n    entityMap: newEntityMap\n  };\n};\n\nvar convertChunkToContentBlocks = function convertChunkToContentBlocks(chunk) {\n  if (!chunk || !chunk.text || !Array.isArray(chunk.blocks)) {\n    return null;\n  }\n\n  var initialState = {\n    cacheRef: {},\n    contentBlocks: []\n  };\n  var start = 0;\n  var rawBlocks = chunk.blocks,\n      rawInlines = chunk.inlines,\n      rawEntities = chunk.entities;\n  var BlockNodeRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\n  return chunk.text.split('\\r').reduce(function (acc, textBlock, index) {\n    // Make absolutely certain that our text is acceptable.\n    textBlock = sanitizeDraftText(textBlock);\n    var block = rawBlocks[index];\n    var end = start + textBlock.length;\n    var inlines = rawInlines.slice(start, end);\n    var entities = rawEntities.slice(start, end);\n    var characterList = List(inlines.map(function (style, index) {\n      var data = {\n        style: style,\n        entity: null\n      };\n\n      if (entities[index]) {\n        data.entity = entities[index];\n      }\n\n      return CharacterMetadata.create(data);\n    }));\n    start = end + 1;\n    var depth = block.depth,\n        type = block.type,\n        parent = block.parent;\n    var key = block.key || generateRandomKey();\n    var parentTextNodeKey = null; // will be used to store container text nodes\n    // childrens add themselves to their parents since we are iterating in order\n\n    if (parent) {\n      var parentIndex = acc.cacheRef[parent];\n      var parentRecord = acc.contentBlocks[parentIndex]; // if parent has text we need to split it into a separate unstyled element\n\n      if (parentRecord.getChildKeys().isEmpty() && parentRecord.getText()) {\n        var parentCharacterList = parentRecord.getCharacterList();\n        var parentText = parentRecord.getText();\n        parentTextNodeKey = generateRandomKey();\n        var textNode = new ContentBlockNode({\n          key: parentTextNodeKey,\n          text: parentText,\n          characterList: parentCharacterList,\n          parent: parent,\n          nextSibling: key\n        });\n        acc.contentBlocks.push(textNode);\n        parentRecord = parentRecord.withMutations(function (block) {\n          block.set('characterList', List()).set('text', '').set('children', parentRecord.children.push(textNode.getKey()));\n        });\n      }\n\n      acc.contentBlocks[parentIndex] = parentRecord.set('children', parentRecord.children.push(key));\n    }\n\n    var blockNode = new BlockNodeRecord({\n      key: key,\n      parent: parent,\n      type: type,\n      depth: depth,\n      text: textBlock,\n      characterList: characterList,\n      prevSibling: parentTextNodeKey || (index === 0 || rawBlocks[index - 1].parent !== parent ? null : rawBlocks[index - 1].key),\n      nextSibling: index === rawBlocks.length - 1 || rawBlocks[index + 1].parent !== parent ? null : rawBlocks[index + 1].key\n    }); // insert node\n\n    acc.contentBlocks.push(blockNode); // cache ref for building links\n\n    acc.cacheRef[blockNode.key] = index;\n    return acc;\n  }, initialState).contentBlocks;\n};\n\nvar convertFromHTMLtoContentBlocks = function convertFromHTMLtoContentBlocks(html) {\n  var DOMBuilder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getSafeBodyFromHTML;\n  var blockRenderMap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DefaultDraftBlockRenderMap; // Be ABSOLUTELY SURE that the dom builder you pass here won't execute\n  // arbitrary code in whatever environment you're running this in. For an\n  // example of how we try to do this in-browser, see getSafeBodyFromHTML.\n  // TODO: replace DraftEntity with an OrderedMap here\n\n  var chunkData = getChunkForHTML(html, DOMBuilder, blockRenderMap, DraftEntity);\n\n  if (chunkData == null) {\n    return null;\n  }\n\n  var chunk = chunkData.chunk,\n      entityMap = chunkData.entityMap;\n  var contentBlocks = convertChunkToContentBlocks(chunk);\n  return {\n    contentBlocks: contentBlocks,\n    entityMap: entityMap\n  };\n};\n\nmodule.exports = convertFromHTMLtoContentBlocks;","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/draft-js/lib/convertFromHTMLToContentBlocks.js"],"names":["_extends","_assign","target","i","arguments","length","source","key","Object","prototype","hasOwnProperty","call","_knownListItemDepthCl","require","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","CharacterMetadata","ContentBlock","ContentBlockNode","DefaultDraftBlockRenderMap","DraftEntity","DraftFeatureFlags","Immutable","_require","Set","URI","cx","generateRandomKey","getSafeBodyFromHTML","invariant","sanitizeDraftText","experimentalTreeDataSupport","draft_tree_data_support","List","OrderedSet","NBSP","SPACE","MAX_DEPTH","REGEX_CR","RegExp","REGEX_LF","REGEX_NBSP","REGEX_CARRIAGE","REGEX_ZWS","boldValues","notBoldValues","inlineTags","b","code","del","em","s","strike","strong","u","knownListItemDepthClasses","anchorAttr","imgAttr","lastBlock","EMPTY_CHUNK","text","inlines","entities","blocks","EMPTY_BLOCK","children","depth","type","getListBlockType","tag","lastList","getBlockMapSupportedTags","blockRenderMap","unstyledElement","get","element","tags","forEach","draftBlock","aliasedElements","add","filter","toArray","sort","getMultiMatchedType","multiMatchExtractor","ii","matchType","getBlockTypeForTag","matchedTypes","wrapper","some","alias","keySeq","toSet","processInlineTag","node","currentStyle","styleToCheck","toOrderedSet","HTMLElement","htmlElement","withMutations","style","fontWeight","fontStyle","textDecoration","indexOf","remove","joinChunks","A","B","experimentalHasNestedBlocks","lastInA","slice","firstInB","pop","shift","concat","containsSemanticBlockMarkup","html","blockTags","hasValidLinkText","link","HTMLAnchorElement","process","env","NODE_ENV","protocol","getWhitespaceChunk","inEntity","Array","getSoftNewlineChunk","getChunkedBlock","props","undefined","getBlockDividerChunk","block","parentKey","parent","Math","max","min","getListItemDepth","keys","depthClass","classList","contains","genFragment","entityMap","inlineStyle","inBlock","lastLastBlock","nodeName","toLowerCase","newEntityMap","nextBlockType","newBlock","inBlockType","chunk","newChunk","blockKey","_text","textContent","nodeTextContent","trim","parentElement","parentNodeName","replace","fill","HTMLImageElement","attributes","getNamedItem","image","entityConfig","attr","imageAttribute","getAttribute","__create","blockType","inListBlock","inBlockOrHasNestedBlocks","child","firstChild","entityId","href","anchor","anchorAttribute","url","toString","_genFragment","generatedChunk","maybeUpdatedEntityMap","sibling","nextSibling","getChunkForHTML","DOMBuilder","supportedBlockTags","safeBody","workingBlocks","fragment","push","split","unshift","convertChunkToContentBlocks","isArray","initialState","cacheRef","contentBlocks","start","rawBlocks","rawInlines","rawEntities","BlockNodeRecord","reduce","acc","textBlock","index","end","characterList","map","data","entity","create","parentTextNodeKey","parentIndex","parentRecord","getChildKeys","isEmpty","getText","parentCharacterList","getCharacterList","parentText","textNode","set","getKey","blockNode","prevSibling","convertFromHTMLtoContentBlocks","chunkData","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule convertFromHTMLToContentBlocks\n * @format\n * \n */\n\n'use strict';\n\nvar _extends = _assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _knownListItemDepthCl,\n    _assign = require('object-assign');\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar CharacterMetadata = require('./CharacterMetadata');\nvar ContentBlock = require('./ContentBlock');\nvar ContentBlockNode = require('./ContentBlockNode');\nvar DefaultDraftBlockRenderMap = require('./DefaultDraftBlockRenderMap');\nvar DraftEntity = require('./DraftEntity');\nvar DraftFeatureFlags = require('./DraftFeatureFlags');\nvar Immutable = require('immutable');\n\nvar _require = require('immutable'),\n    Set = _require.Set;\n\nvar URI = require('fbjs/lib/URI');\n\nvar cx = require('fbjs/lib/cx');\nvar generateRandomKey = require('./generateRandomKey');\nvar getSafeBodyFromHTML = require('./getSafeBodyFromHTML');\nvar invariant = require('fbjs/lib/invariant');\nvar sanitizeDraftText = require('./sanitizeDraftText');\n\nvar experimentalTreeDataSupport = DraftFeatureFlags.draft_tree_data_support;\n\nvar List = Immutable.List,\n    OrderedSet = Immutable.OrderedSet;\n\n\nvar NBSP = '&nbsp;';\nvar SPACE = ' ';\n\n// Arbitrary max indent\nvar MAX_DEPTH = 4;\n\n// used for replacing characters in HTML\nvar REGEX_CR = new RegExp('\\r', 'g');\nvar REGEX_LF = new RegExp('\\n', 'g');\nvar REGEX_NBSP = new RegExp(NBSP, 'g');\nvar REGEX_CARRIAGE = new RegExp('&#13;?', 'g');\nvar REGEX_ZWS = new RegExp('&#8203;?', 'g');\n\n// https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight\nvar boldValues = ['bold', 'bolder', '500', '600', '700', '800', '900'];\nvar notBoldValues = ['light', 'lighter', '100', '200', '300', '400'];\n\n// Block tag flow is different because LIs do not have\n// a deterministic style ;_;\nvar inlineTags = {\n  b: 'BOLD',\n  code: 'CODE',\n  del: 'STRIKETHROUGH',\n  em: 'ITALIC',\n  i: 'ITALIC',\n  s: 'STRIKETHROUGH',\n  strike: 'STRIKETHROUGH',\n  strong: 'BOLD',\n  u: 'UNDERLINE'\n};\n\nvar knownListItemDepthClasses = (_knownListItemDepthCl = {}, _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth0'), 0), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth1'), 1), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth2'), 2), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth3'), 3), _defineProperty(_knownListItemDepthCl, cx('public/DraftStyleDefault/depth4'), 4), _knownListItemDepthCl);\n\nvar anchorAttr = ['className', 'href', 'rel', 'target', 'title'];\n\nvar imgAttr = ['alt', 'className', 'height', 'src', 'width'];\n\nvar lastBlock = void 0;\n\nvar EMPTY_CHUNK = {\n  text: '',\n  inlines: [],\n  entities: [],\n  blocks: []\n};\n\nvar EMPTY_BLOCK = {\n  children: List(),\n  depth: 0,\n  key: '',\n  type: ''\n};\n\nvar getListBlockType = function getListBlockType(tag, lastList) {\n  if (tag === 'li') {\n    return lastList === 'ol' ? 'ordered-list-item' : 'unordered-list-item';\n  }\n  return null;\n};\n\nvar getBlockMapSupportedTags = function getBlockMapSupportedTags(blockRenderMap) {\n  var unstyledElement = blockRenderMap.get('unstyled').element;\n  var tags = Set([]);\n\n  blockRenderMap.forEach(function (draftBlock) {\n    if (draftBlock.aliasedElements) {\n      draftBlock.aliasedElements.forEach(function (tag) {\n        tags = tags.add(tag);\n      });\n    }\n\n    tags = tags.add(draftBlock.element);\n  });\n\n  return tags.filter(function (tag) {\n    return tag && tag !== unstyledElement;\n  }).toArray().sort();\n};\n\n// custom element conversions\nvar getMultiMatchedType = function getMultiMatchedType(tag, lastList, multiMatchExtractor) {\n  for (var ii = 0; ii < multiMatchExtractor.length; ii++) {\n    var matchType = multiMatchExtractor[ii](tag, lastList);\n    if (matchType) {\n      return matchType;\n    }\n  }\n  return null;\n};\n\nvar getBlockTypeForTag = function getBlockTypeForTag(tag, lastList, blockRenderMap) {\n  var matchedTypes = blockRenderMap.filter(function (draftBlock) {\n    return draftBlock.element === tag || draftBlock.wrapper === tag || draftBlock.aliasedElements && draftBlock.aliasedElements.some(function (alias) {\n      return alias === tag;\n    });\n  }).keySeq().toSet().toArray().sort();\n\n  // if we dont have any matched type, return unstyled\n  // if we have one matched type return it\n  // if we have multi matched types use the multi-match function to gather type\n  switch (matchedTypes.length) {\n    case 0:\n      return 'unstyled';\n    case 1:\n      return matchedTypes[0];\n    default:\n      return getMultiMatchedType(tag, lastList, [getListBlockType]) || 'unstyled';\n  }\n};\n\nvar processInlineTag = function processInlineTag(tag, node, currentStyle) {\n  var styleToCheck = inlineTags[tag];\n  if (styleToCheck) {\n    currentStyle = currentStyle.add(styleToCheck).toOrderedSet();\n  } else if (node instanceof HTMLElement) {\n    var htmlElement = node;\n    currentStyle = currentStyle.withMutations(function (style) {\n      var fontWeight = htmlElement.style.fontWeight;\n      var fontStyle = htmlElement.style.fontStyle;\n      var textDecoration = htmlElement.style.textDecoration;\n\n      if (boldValues.indexOf(fontWeight) >= 0) {\n        style.add('BOLD');\n      } else if (notBoldValues.indexOf(fontWeight) >= 0) {\n        style.remove('BOLD');\n      }\n\n      if (fontStyle === 'italic') {\n        style.add('ITALIC');\n      } else if (fontStyle === 'normal') {\n        style.remove('ITALIC');\n      }\n\n      if (textDecoration === 'underline') {\n        style.add('UNDERLINE');\n      }\n      if (textDecoration === 'line-through') {\n        style.add('STRIKETHROUGH');\n      }\n      if (textDecoration === 'none') {\n        style.remove('UNDERLINE');\n        style.remove('STRIKETHROUGH');\n      }\n    }).toOrderedSet();\n  }\n  return currentStyle;\n};\n\nvar joinChunks = function joinChunks(A, B, experimentalHasNestedBlocks) {\n  // Sometimes two blocks will touch in the DOM and we need to strip the\n  // extra delimiter to preserve niceness.\n  var lastInA = A.text.slice(-1);\n  var firstInB = B.text.slice(0, 1);\n\n  if (lastInA === '\\r' && firstInB === '\\r' && !experimentalHasNestedBlocks) {\n    A.text = A.text.slice(0, -1);\n    A.inlines.pop();\n    A.entities.pop();\n    A.blocks.pop();\n  }\n\n  // Kill whitespace after blocks\n  if (lastInA === '\\r') {\n    if (B.text === SPACE || B.text === '\\n') {\n      return A;\n    } else if (firstInB === SPACE || firstInB === '\\n') {\n      B.text = B.text.slice(1);\n      B.inlines.shift();\n      B.entities.shift();\n    }\n  }\n\n  return {\n    text: A.text + B.text,\n    inlines: A.inlines.concat(B.inlines),\n    entities: A.entities.concat(B.entities),\n    blocks: A.blocks.concat(B.blocks)\n  };\n};\n\n/**\n * Check to see if we have anything like <p> <blockquote> <h1>... to create\n * block tags from. If we do, we can use those and ignore <div> tags. If we\n * don't, we can treat <div> tags as meaningful (unstyled) blocks.\n */\nvar containsSemanticBlockMarkup = function containsSemanticBlockMarkup(html, blockTags) {\n  return blockTags.some(function (tag) {\n    return html.indexOf('<' + tag) !== -1;\n  });\n};\n\nvar hasValidLinkText = function hasValidLinkText(link) {\n  !(link instanceof HTMLAnchorElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Link must be an HTMLAnchorElement.') : invariant(false) : void 0;\n  var protocol = link.protocol;\n  return protocol === 'http:' || protocol === 'https:' || protocol === 'mailto:';\n};\n\nvar getWhitespaceChunk = function getWhitespaceChunk(inEntity) {\n  var entities = new Array(1);\n  if (inEntity) {\n    entities[0] = inEntity;\n  }\n  return _extends({}, EMPTY_CHUNK, {\n    text: SPACE,\n    inlines: [OrderedSet()],\n    entities: entities\n  });\n};\n\nvar getSoftNewlineChunk = function getSoftNewlineChunk() {\n  return _extends({}, EMPTY_CHUNK, {\n    text: '\\n',\n    inlines: [OrderedSet()],\n    entities: new Array(1)\n  });\n};\n\nvar getChunkedBlock = function getChunkedBlock() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return _extends({}, EMPTY_BLOCK, props);\n};\n\nvar getBlockDividerChunk = function getBlockDividerChunk(block, depth) {\n  var parentKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  return {\n    text: '\\r',\n    inlines: [OrderedSet()],\n    entities: new Array(1),\n    blocks: [getChunkedBlock({\n      parent: parentKey,\n      key: generateRandomKey(),\n      type: block,\n      depth: Math.max(0, Math.min(MAX_DEPTH, depth))\n    })]\n  };\n};\n\n/**\n *  If we're pasting from one DraftEditor to another we can check to see if\n *  existing list item depth classes are being used and preserve this style\n */\nvar getListItemDepth = function getListItemDepth(node) {\n  var depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n  Object.keys(knownListItemDepthClasses).some(function (depthClass) {\n    if (node.classList.contains(depthClass)) {\n      depth = knownListItemDepthClasses[depthClass];\n    }\n  });\n  return depth;\n};\n\nvar genFragment = function genFragment(entityMap, node, inlineStyle, lastList, inBlock, blockTags, depth, blockRenderMap, inEntity, parentKey) {\n  var lastLastBlock = lastBlock;\n  var nodeName = node.nodeName.toLowerCase();\n  var newEntityMap = entityMap;\n  var nextBlockType = 'unstyled';\n  var newBlock = false;\n  var inBlockType = inBlock && getBlockTypeForTag(inBlock, lastList, blockRenderMap);\n  var chunk = _extends({}, EMPTY_CHUNK);\n  var newChunk = null;\n  var blockKey = void 0;\n\n  // Base Case\n  if (nodeName === '#text') {\n    var _text = node.textContent;\n    var nodeTextContent = _text.trim();\n\n    // We should not create blocks for leading spaces that are\n    // existing around ol/ul and their children list items\n    if (lastList && nodeTextContent === '' && node.parentElement) {\n      var parentNodeName = node.parentElement.nodeName.toLowerCase();\n      if (parentNodeName === 'ol' || parentNodeName === 'ul') {\n        return { chunk: _extends({}, EMPTY_CHUNK), entityMap: entityMap };\n      }\n    }\n\n    if (nodeTextContent === '' && inBlock !== 'pre') {\n      return { chunk: getWhitespaceChunk(inEntity), entityMap: entityMap };\n    }\n    if (inBlock !== 'pre') {\n      // Can't use empty string because MSWord\n      _text = _text.replace(REGEX_LF, SPACE);\n    }\n\n    // save the last block so we can use it later\n    lastBlock = nodeName;\n\n    return {\n      chunk: {\n        text: _text,\n        inlines: Array(_text.length).fill(inlineStyle),\n        entities: Array(_text.length).fill(inEntity),\n        blocks: []\n      },\n      entityMap: entityMap\n    };\n  }\n\n  // save the last block so we can use it later\n  lastBlock = nodeName;\n\n  // BR tags\n  if (nodeName === 'br') {\n    if (lastLastBlock === 'br' && (!inBlock || inBlockType === 'unstyled')) {\n      return {\n        chunk: getBlockDividerChunk('unstyled', depth, parentKey),\n        entityMap: entityMap\n      };\n    }\n    return { chunk: getSoftNewlineChunk(), entityMap: entityMap };\n  }\n\n  // IMG tags\n  if (nodeName === 'img' && node instanceof HTMLImageElement && node.attributes.getNamedItem('src') && node.attributes.getNamedItem('src').value) {\n    var image = node;\n    var entityConfig = {};\n\n    imgAttr.forEach(function (attr) {\n      var imageAttribute = image.getAttribute(attr);\n      if (imageAttribute) {\n        entityConfig[attr] = imageAttribute;\n      }\n    });\n    // Forcing this node to have children because otherwise no entity will be\n    // created for this node.\n    // The child text node cannot just have a space or return as content -\n    // we strip those out.\n    // See https://github.com/facebook/draft-js/issues/231 for some context.\n    node.textContent = '\\uD83D\\uDCF7';\n\n    // TODO: update this when we remove DraftEntity entirely\n    inEntity = DraftEntity.__create('IMAGE', 'MUTABLE', entityConfig || {});\n  }\n\n  // Inline tags\n  inlineStyle = processInlineTag(nodeName, node, inlineStyle);\n\n  // Handle lists\n  if (nodeName === 'ul' || nodeName === 'ol') {\n    if (lastList) {\n      depth += 1;\n    }\n    lastList = nodeName;\n  }\n\n  if (!experimentalTreeDataSupport && nodeName === 'li' && node instanceof HTMLElement) {\n    depth = getListItemDepth(node, depth);\n  }\n\n  var blockType = getBlockTypeForTag(nodeName, lastList, blockRenderMap);\n  var inListBlock = lastList && inBlock === 'li' && nodeName === 'li';\n  var inBlockOrHasNestedBlocks = (!inBlock || experimentalTreeDataSupport) && blockTags.indexOf(nodeName) !== -1;\n\n  // Block Tags\n  if (inListBlock || inBlockOrHasNestedBlocks) {\n    chunk = getBlockDividerChunk(blockType, depth, parentKey);\n    blockKey = chunk.blocks[0].key;\n    inBlock = nodeName;\n    newBlock = !experimentalTreeDataSupport;\n  }\n\n  // this is required so that we can handle 'ul' and 'ol'\n  if (inListBlock) {\n    nextBlockType = lastList === 'ul' ? 'unordered-list-item' : 'ordered-list-item';\n  }\n\n  // Recurse through children\n  var child = node.firstChild;\n  if (child != null) {\n    nodeName = child.nodeName.toLowerCase();\n  }\n\n  var entityId = null;\n\n  while (child) {\n    if (child instanceof HTMLAnchorElement && child.href && hasValidLinkText(child)) {\n      (function () {\n        var anchor = child;\n        var entityConfig = {};\n\n        anchorAttr.forEach(function (attr) {\n          var anchorAttribute = anchor.getAttribute(attr);\n          if (anchorAttribute) {\n            entityConfig[attr] = anchorAttribute;\n          }\n        });\n\n        entityConfig.url = new URI(anchor.href).toString();\n        // TODO: update this when we remove DraftEntity completely\n        entityId = DraftEntity.__create('LINK', 'MUTABLE', entityConfig || {});\n      })();\n    } else {\n      entityId = undefined;\n    }\n\n    var _genFragment = genFragment(newEntityMap, child, inlineStyle, lastList, inBlock, blockTags, depth, blockRenderMap, entityId || inEntity, experimentalTreeDataSupport ? blockKey : null),\n        generatedChunk = _genFragment.chunk,\n        maybeUpdatedEntityMap = _genFragment.entityMap;\n\n    newChunk = generatedChunk;\n    newEntityMap = maybeUpdatedEntityMap;\n\n    chunk = joinChunks(chunk, newChunk, experimentalTreeDataSupport);\n    var sibling = child.nextSibling;\n\n    // Put in a newline to break up blocks inside blocks\n    if (!parentKey && sibling && blockTags.indexOf(nodeName) >= 0 && inBlock) {\n      chunk = joinChunks(chunk, getSoftNewlineChunk());\n    }\n    if (sibling) {\n      nodeName = sibling.nodeName.toLowerCase();\n    }\n    child = sibling;\n  }\n\n  if (newBlock) {\n    chunk = joinChunks(chunk, getBlockDividerChunk(nextBlockType, depth, parentKey));\n  }\n\n  return { chunk: chunk, entityMap: newEntityMap };\n};\n\nvar getChunkForHTML = function getChunkForHTML(html, DOMBuilder, blockRenderMap, entityMap) {\n  html = html.trim().replace(REGEX_CR, '').replace(REGEX_NBSP, SPACE).replace(REGEX_CARRIAGE, '').replace(REGEX_ZWS, '');\n\n  var supportedBlockTags = getBlockMapSupportedTags(blockRenderMap);\n\n  var safeBody = DOMBuilder(html);\n  if (!safeBody) {\n    return null;\n  }\n  lastBlock = null;\n\n  // Sometimes we aren't dealing with content that contains nice semantic\n  // tags. In this case, use divs to separate everything out into paragraphs\n  // and hope for the best.\n  var workingBlocks = containsSemanticBlockMarkup(html, supportedBlockTags) ? supportedBlockTags : ['div'];\n\n  // Start with -1 block depth to offset the fact that we are passing in a fake\n  // UL block to start with.\n  var fragment = genFragment(entityMap, safeBody, OrderedSet(), 'ul', null, workingBlocks, -1, blockRenderMap);\n\n  var chunk = fragment.chunk;\n  var newEntityMap = fragment.entityMap;\n\n  // join with previous block to prevent weirdness on paste\n  if (chunk.text.indexOf('\\r') === 0) {\n    chunk = {\n      text: chunk.text.slice(1),\n      inlines: chunk.inlines.slice(1),\n      entities: chunk.entities.slice(1),\n      blocks: chunk.blocks\n    };\n  }\n\n  // Kill block delimiter at the end\n  if (chunk.text.slice(-1) === '\\r') {\n    chunk.text = chunk.text.slice(0, -1);\n    chunk.inlines = chunk.inlines.slice(0, -1);\n    chunk.entities = chunk.entities.slice(0, -1);\n    chunk.blocks.pop();\n  }\n\n  // If we saw no block tags, put an unstyled one in\n  if (chunk.blocks.length === 0) {\n    chunk.blocks.push(_extends({}, EMPTY_CHUNK, {\n      type: 'unstyled',\n      depth: 0\n    }));\n  }\n\n  // Sometimes we start with text that isn't in a block, which is then\n  // followed by blocks. Need to fix up the blocks to add in\n  // an unstyled block for this content\n  if (chunk.text.split('\\r').length === chunk.blocks.length + 1) {\n    chunk.blocks.unshift({ type: 'unstyled', depth: 0 });\n  }\n\n  return { chunk: chunk, entityMap: newEntityMap };\n};\n\nvar convertChunkToContentBlocks = function convertChunkToContentBlocks(chunk) {\n  if (!chunk || !chunk.text || !Array.isArray(chunk.blocks)) {\n    return null;\n  }\n\n  var initialState = {\n    cacheRef: {},\n    contentBlocks: []\n  };\n\n  var start = 0;\n\n  var rawBlocks = chunk.blocks,\n      rawInlines = chunk.inlines,\n      rawEntities = chunk.entities;\n\n\n  var BlockNodeRecord = experimentalTreeDataSupport ? ContentBlockNode : ContentBlock;\n\n  return chunk.text.split('\\r').reduce(function (acc, textBlock, index) {\n    // Make absolutely certain that our text is acceptable.\n    textBlock = sanitizeDraftText(textBlock);\n\n    var block = rawBlocks[index];\n    var end = start + textBlock.length;\n    var inlines = rawInlines.slice(start, end);\n    var entities = rawEntities.slice(start, end);\n    var characterList = List(inlines.map(function (style, index) {\n      var data = { style: style, entity: null };\n      if (entities[index]) {\n        data.entity = entities[index];\n      }\n      return CharacterMetadata.create(data);\n    }));\n    start = end + 1;\n\n    var depth = block.depth,\n        type = block.type,\n        parent = block.parent;\n\n\n    var key = block.key || generateRandomKey();\n    var parentTextNodeKey = null; // will be used to store container text nodes\n\n    // childrens add themselves to their parents since we are iterating in order\n    if (parent) {\n      var parentIndex = acc.cacheRef[parent];\n      var parentRecord = acc.contentBlocks[parentIndex];\n\n      // if parent has text we need to split it into a separate unstyled element\n      if (parentRecord.getChildKeys().isEmpty() && parentRecord.getText()) {\n        var parentCharacterList = parentRecord.getCharacterList();\n        var parentText = parentRecord.getText();\n        parentTextNodeKey = generateRandomKey();\n\n        var textNode = new ContentBlockNode({\n          key: parentTextNodeKey,\n          text: parentText,\n          characterList: parentCharacterList,\n          parent: parent,\n          nextSibling: key\n        });\n\n        acc.contentBlocks.push(textNode);\n\n        parentRecord = parentRecord.withMutations(function (block) {\n          block.set('characterList', List()).set('text', '').set('children', parentRecord.children.push(textNode.getKey()));\n        });\n      }\n\n      acc.contentBlocks[parentIndex] = parentRecord.set('children', parentRecord.children.push(key));\n    }\n\n    var blockNode = new BlockNodeRecord({\n      key: key,\n      parent: parent,\n      type: type,\n      depth: depth,\n      text: textBlock,\n      characterList: characterList,\n      prevSibling: parentTextNodeKey || (index === 0 || rawBlocks[index - 1].parent !== parent ? null : rawBlocks[index - 1].key),\n      nextSibling: index === rawBlocks.length - 1 || rawBlocks[index + 1].parent !== parent ? null : rawBlocks[index + 1].key\n    });\n\n    // insert node\n    acc.contentBlocks.push(blockNode);\n\n    // cache ref for building links\n    acc.cacheRef[blockNode.key] = index;\n\n    return acc;\n  }, initialState).contentBlocks;\n};\n\nvar convertFromHTMLtoContentBlocks = function convertFromHTMLtoContentBlocks(html) {\n  var DOMBuilder = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getSafeBodyFromHTML;\n  var blockRenderMap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DefaultDraftBlockRenderMap;\n\n  // Be ABSOLUTELY SURE that the dom builder you pass here won't execute\n  // arbitrary code in whatever environment you're running this in. For an\n  // example of how we try to do this in-browser, see getSafeBodyFromHTML.\n\n  // TODO: replace DraftEntity with an OrderedMap here\n  var chunkData = getChunkForHTML(html, DOMBuilder, blockRenderMap, DraftEntity);\n\n  if (chunkData == null) {\n    return null;\n  }\n\n  var chunk = chunkData.chunk,\n      entityMap = chunkData.entityMap;\n\n  var contentBlocks = convertChunkToContentBlocks(chunk);\n\n  return {\n    contentBlocks: contentBlocks,\n    entityMap: entityMap\n  };\n};\n\nmodule.exports = convertFromHTMLtoContentBlocks;"]},"metadata":{},"sourceType":"script"}