{"ast":null,"code":"import interval from \"./interval.js\";\nvar year = interval(function (date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function (date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function (start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function (date) {\n  return date.getFullYear();\n}); // An optimized implementation for this simple case.\n\nyear.every = function (k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function (date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function (date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/d3-time/src/year.js"],"names":["interval","year","date","setMonth","setHours","step","setFullYear","getFullYear","start","end","every","k","isFinite","Math","floor","years","range"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,eAArB;AAEA,IAAIC,IAAI,GAAGD,QAAQ,CAAC,UAASE,IAAT,EAAe;AACjCA,EAAAA,IAAI,CAACC,QAAL,CAAc,CAAd,EAAiB,CAAjB;AACAD,EAAAA,IAAI,CAACE,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACD,CAHkB,EAGhB,UAASF,IAAT,EAAeG,IAAf,EAAqB;AACtBH,EAAAA,IAAI,CAACI,WAAL,CAAiBJ,IAAI,CAACK,WAAL,KAAqBF,IAAtC;AACD,CALkB,EAKhB,UAASG,KAAT,EAAgBC,GAAhB,EAAqB;AACtB,SAAOA,GAAG,CAACF,WAAJ,KAAoBC,KAAK,CAACD,WAAN,EAA3B;AACD,CAPkB,EAOhB,UAASL,IAAT,EAAe;AAChB,SAAOA,IAAI,CAACK,WAAL,EAAP;AACD,CATkB,CAAnB,C,CAWA;;AACAN,IAAI,CAACS,KAAL,GAAa,UAASC,CAAT,EAAY;AACvB,SAAO,CAACC,QAAQ,CAACD,CAAC,GAAGE,IAAI,CAACC,KAAL,CAAWH,CAAX,CAAL,CAAT,IAAgC,EAAEA,CAAC,GAAG,CAAN,CAAhC,GAA2C,IAA3C,GAAkDX,QAAQ,CAAC,UAASE,IAAT,EAAe;AAC/EA,IAAAA,IAAI,CAACI,WAAL,CAAiBO,IAAI,CAACC,KAAL,CAAWZ,IAAI,CAACK,WAAL,KAAqBI,CAAhC,IAAqCA,CAAtD;AACAT,IAAAA,IAAI,CAACC,QAAL,CAAc,CAAd,EAAiB,CAAjB;AACAD,IAAAA,IAAI,CAACE,QAAL,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;AACD,GAJgE,EAI9D,UAASF,IAAT,EAAeG,IAAf,EAAqB;AACtBH,IAAAA,IAAI,CAACI,WAAL,CAAiBJ,IAAI,CAACK,WAAL,KAAqBF,IAAI,GAAGM,CAA7C;AACD,GANgE,CAAjE;AAOD,CARD;;AAUA,eAAeV,IAAf;AACA,OAAO,IAAIc,KAAK,GAAGd,IAAI,CAACe,KAAjB","sourcesContent":["import interval from \"./interval.js\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n"]},"metadata":{},"sourceType":"module"}