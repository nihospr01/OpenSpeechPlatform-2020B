{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getVisibleSelectionRect\n * @format\n * \n */\n'use strict';\n\nvar getRangeBoundingClientRect = require('./getRangeBoundingClientRect');\n/**\n * Return the bounding ClientRect for the visible DOM selection, if any.\n * In cases where there are no selected ranges or the bounding rect is\n * temporarily invalid, return null.\n */\n\n\nfunction getVisibleSelectionRect(global) {\n  var selection = global.getSelection();\n\n  if (!selection.rangeCount) {\n    return null;\n  }\n\n  var range = selection.getRangeAt(0);\n  var boundingRect = getRangeBoundingClientRect(range);\n  var top = boundingRect.top,\n      right = boundingRect.right,\n      bottom = boundingRect.bottom,\n      left = boundingRect.left; // When a re-render leads to a node being removed, the DOM selection will\n  // temporarily be placed on an ancestor node, which leads to an invalid\n  // bounding rect. Discard this state.\n\n  if (top === 0 && right === 0 && bottom === 0 && left === 0) {\n    return null;\n  }\n\n  return boundingRect;\n}\n\nmodule.exports = getVisibleSelectionRect;","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/draft-js/lib/getVisibleSelectionRect.js"],"names":["getRangeBoundingClientRect","require","getVisibleSelectionRect","global","selection","getSelection","rangeCount","range","getRangeAt","boundingRect","top","right","bottom","left","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,0BAA0B,GAAGC,OAAO,CAAC,8BAAD,CAAxC;AAEA;AACA;AACA;AACA;AACA;;;AACA,SAASC,uBAAT,CAAiCC,MAAjC,EAAyC;AACvC,MAAIC,SAAS,GAAGD,MAAM,CAACE,YAAP,EAAhB;;AACA,MAAI,CAACD,SAAS,CAACE,UAAf,EAA2B;AACzB,WAAO,IAAP;AACD;;AAED,MAAIC,KAAK,GAAGH,SAAS,CAACI,UAAV,CAAqB,CAArB,CAAZ;AACA,MAAIC,YAAY,GAAGT,0BAA0B,CAACO,KAAD,CAA7C;AACA,MAAIG,GAAG,GAAGD,YAAY,CAACC,GAAvB;AAAA,MACIC,KAAK,GAAGF,YAAY,CAACE,KADzB;AAAA,MAEIC,MAAM,GAAGH,YAAY,CAACG,MAF1B;AAAA,MAGIC,IAAI,GAAGJ,YAAY,CAACI,IAHxB,CARuC,CAavC;AACA;AACA;;AAEA,MAAIH,GAAG,KAAK,CAAR,IAAaC,KAAK,KAAK,CAAvB,IAA4BC,MAAM,KAAK,CAAvC,IAA4CC,IAAI,KAAK,CAAzD,EAA4D;AAC1D,WAAO,IAAP;AACD;;AAED,SAAOJ,YAAP;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiBb,uBAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getVisibleSelectionRect\n * @format\n * \n */\n\n'use strict';\n\nvar getRangeBoundingClientRect = require('./getRangeBoundingClientRect');\n\n/**\n * Return the bounding ClientRect for the visible DOM selection, if any.\n * In cases where there are no selected ranges or the bounding rect is\n * temporarily invalid, return null.\n */\nfunction getVisibleSelectionRect(global) {\n  var selection = global.getSelection();\n  if (!selection.rangeCount) {\n    return null;\n  }\n\n  var range = selection.getRangeAt(0);\n  var boundingRect = getRangeBoundingClientRect(range);\n  var top = boundingRect.top,\n      right = boundingRect.right,\n      bottom = boundingRect.bottom,\n      left = boundingRect.left;\n\n  // When a re-render leads to a node being removed, the DOM selection will\n  // temporarily be placed on an ancestor node, which leads to an invalid\n  // bounding rect. Discard this state.\n\n  if (top === 0 && right === 0 && bottom === 0 && left === 0) {\n    return null;\n  }\n\n  return boundingRect;\n}\n\nmodule.exports = getVisibleSelectionRect;"]},"metadata":{},"sourceType":"script"}