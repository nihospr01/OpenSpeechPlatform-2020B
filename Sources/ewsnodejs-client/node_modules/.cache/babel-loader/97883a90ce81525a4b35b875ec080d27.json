{"ast":null,"code":"import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\nexport default {\n  \"%\": function _(x, p) {\n    return (x * 100).toFixed(p);\n  },\n  \"b\": function b(x) {\n    return Math.round(x).toString(2);\n  },\n  \"c\": function c(x) {\n    return x + \"\";\n  },\n  \"d\": formatDecimal,\n  \"e\": function e(x, p) {\n    return x.toExponential(p);\n  },\n  \"f\": function f(x, p) {\n    return x.toFixed(p);\n  },\n  \"g\": function g(x, p) {\n    return x.toPrecision(p);\n  },\n  \"o\": function o(x) {\n    return Math.round(x).toString(8);\n  },\n  \"p\": function p(x, _p) {\n    return formatRounded(x * 100, _p);\n  },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function X(x) {\n    return Math.round(x).toString(16).toUpperCase();\n  },\n  \"x\": function x(_x) {\n    return Math.round(_x).toString(16);\n  }\n};","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/d3-format/src/formatTypes.js"],"names":["formatDecimal","formatPrefixAuto","formatRounded","x","p","toFixed","Math","round","toString","toExponential","toPrecision","toUpperCase"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,oBAA1B;AACA,OAAOC,gBAAP,MAA6B,uBAA7B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AAEA,eAAe;AACb,OAAK,WAASC,CAAT,EAAYC,CAAZ,EAAe;AAAE,WAAO,CAACD,CAAC,GAAG,GAAL,EAAUE,OAAV,CAAkBD,CAAlB,CAAP;AAA8B,GADvC;AAEb,OAAK,WAASD,CAAT,EAAY;AAAE,WAAOG,IAAI,CAACC,KAAL,CAAWJ,CAAX,EAAcK,QAAd,CAAuB,CAAvB,CAAP;AAAmC,GAFzC;AAGb,OAAK,WAASL,CAAT,EAAY;AAAE,WAAOA,CAAC,GAAG,EAAX;AAAgB,GAHtB;AAIb,OAAKH,aAJQ;AAKb,OAAK,WAASG,CAAT,EAAYC,CAAZ,EAAe;AAAE,WAAOD,CAAC,CAACM,aAAF,CAAgBL,CAAhB,CAAP;AAA4B,GALrC;AAMb,OAAK,WAASD,CAAT,EAAYC,CAAZ,EAAe;AAAE,WAAOD,CAAC,CAACE,OAAF,CAAUD,CAAV,CAAP;AAAsB,GAN/B;AAOb,OAAK,WAASD,CAAT,EAAYC,CAAZ,EAAe;AAAE,WAAOD,CAAC,CAACO,WAAF,CAAcN,CAAd,CAAP;AAA0B,GAPnC;AAQb,OAAK,WAASD,CAAT,EAAY;AAAE,WAAOG,IAAI,CAACC,KAAL,CAAWJ,CAAX,EAAcK,QAAd,CAAuB,CAAvB,CAAP;AAAmC,GARzC;AASb,OAAK,WAASL,CAAT,EAAYC,EAAZ,EAAe;AAAE,WAAOF,aAAa,CAACC,CAAC,GAAG,GAAL,EAAUC,EAAV,CAApB;AAAmC,GAT5C;AAUb,OAAKF,aAVQ;AAWb,OAAKD,gBAXQ;AAYb,OAAK,WAASE,CAAT,EAAY;AAAE,WAAOG,IAAI,CAACC,KAAL,CAAWJ,CAAX,EAAcK,QAAd,CAAuB,EAAvB,EAA2BG,WAA3B,EAAP;AAAkD,GAZxD;AAab,OAAK,WAASR,EAAT,EAAY;AAAE,WAAOG,IAAI,CAACC,KAAL,CAAWJ,EAAX,EAAcK,QAAd,CAAuB,EAAvB,CAAP;AAAoC;AAb1C,CAAf","sourcesContent":["import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": formatDecimal,\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n"]},"metadata":{},"sourceType":"module"}