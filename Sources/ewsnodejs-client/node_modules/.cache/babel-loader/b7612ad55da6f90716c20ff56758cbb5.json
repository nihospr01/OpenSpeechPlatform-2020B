{"ast":null,"code":"var global = require('./_global');\n\nvar core = require('./_core');\n\nvar ctx = require('./_ctx');\n\nvar hide = require('./_hide');\n\nvar has = require('./_has');\n\nvar PROTOTYPE = 'prototype';\n\nvar $export = function $export(type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue; // export native or passed\n\n    out = own ? target[key] : source[key]; // prevent global pollution for namespaces\n\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key] // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global) // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? function (C) {\n      var F = function F(a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0:\n              return new C();\n\n            case 1:\n              return new C(a);\n\n            case 2:\n              return new C(a, b);\n          }\n\n          return new C(a, b, c);\n        }\n\n        return C.apply(this, arguments);\n      };\n\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F; // make static versions for prototype methods\n    }(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out; // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out; // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n}; // type bitmap\n\n\n$export.F = 1; // forced\n\n$export.G = 2; // global\n\n$export.S = 4; // static\n\n$export.P = 8; // proto\n\n$export.B = 16; // bind\n\n$export.W = 32; // wrap\n\n$export.U = 64; // safe\n\n$export.R = 128; // real proto method for `library`\n\nmodule.exports = $export;","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/core-js/library/modules/_export.js"],"names":["global","require","core","ctx","hide","has","PROTOTYPE","$export","type","name","source","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","B","IS_WRAP","W","exports","expProto","target","key","own","out","undefined","C","a","b","c","arguments","length","apply","Function","call","virtual","R","U","module"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAApB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,SAAD,CAAlB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,SAAD,CAAlB;;AACA,IAAII,GAAG,GAAGJ,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAIK,SAAS,GAAG,WAAhB;;AAEA,IAAIC,OAAO,GAAG,SAAVA,OAAU,CAAUC,IAAV,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8B;AAC1C,MAAIC,SAAS,GAAGH,IAAI,GAAGD,OAAO,CAACK,CAA/B;AACA,MAAIC,SAAS,GAAGL,IAAI,GAAGD,OAAO,CAACO,CAA/B;AACA,MAAIC,SAAS,GAAGP,IAAI,GAAGD,OAAO,CAACS,CAA/B;AACA,MAAIC,QAAQ,GAAGT,IAAI,GAAGD,OAAO,CAACW,CAA9B;AACA,MAAIC,OAAO,GAAGX,IAAI,GAAGD,OAAO,CAACa,CAA7B;AACA,MAAIC,OAAO,GAAGb,IAAI,GAAGD,OAAO,CAACe,CAA7B;AACA,MAAIC,OAAO,GAAGV,SAAS,GAAGX,IAAH,GAAUA,IAAI,CAACO,IAAD,CAAJ,KAAeP,IAAI,CAACO,IAAD,CAAJ,GAAa,EAA5B,CAAjC;AACA,MAAIe,QAAQ,GAAGD,OAAO,CAACjB,SAAD,CAAtB;AACA,MAAImB,MAAM,GAAGZ,SAAS,GAAGb,MAAH,GAAYe,SAAS,GAAGf,MAAM,CAACS,IAAD,CAAT,GAAkB,CAACT,MAAM,CAACS,IAAD,CAAN,IAAgB,EAAjB,EAAqBH,SAArB,CAA7D;AACA,MAAIoB,GAAJ,EAASC,GAAT,EAAcC,GAAd;AACA,MAAIf,SAAJ,EAAeH,MAAM,GAAGD,IAAT;;AACf,OAAKiB,GAAL,IAAYhB,MAAZ,EAAoB;AAClB;AACAiB,IAAAA,GAAG,GAAG,CAAChB,SAAD,IAAcc,MAAd,IAAwBA,MAAM,CAACC,GAAD,CAAN,KAAgBG,SAA9C;AACA,QAAIF,GAAG,IAAItB,GAAG,CAACkB,OAAD,EAAUG,GAAV,CAAd,EAA8B,SAHZ,CAIlB;;AACAE,IAAAA,GAAG,GAAGD,GAAG,GAAGF,MAAM,CAACC,GAAD,CAAT,GAAiBhB,MAAM,CAACgB,GAAD,CAAhC,CALkB,CAMlB;;AACAH,IAAAA,OAAO,CAACG,GAAD,CAAP,GAAeb,SAAS,IAAI,OAAOY,MAAM,CAACC,GAAD,CAAb,IAAsB,UAAnC,GAAgDhB,MAAM,CAACgB,GAAD,CAAtD,CACf;AADe,MAEbP,OAAO,IAAIQ,GAAX,GAAiBxB,GAAG,CAACyB,GAAD,EAAM5B,MAAN,CAApB,CACF;AADE,MAEAqB,OAAO,IAAII,MAAM,CAACC,GAAD,CAAN,IAAeE,GAA1B,GAAiC,UAAUE,CAAV,EAAa;AAC9C,UAAIlB,CAAC,GAAG,SAAJA,CAAI,CAAUmB,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB;AACzB,YAAI,gBAAgBH,CAApB,EAAuB;AACrB,kBAAQI,SAAS,CAACC,MAAlB;AACE,iBAAK,CAAL;AAAQ,qBAAO,IAAIL,CAAJ,EAAP;;AACR,iBAAK,CAAL;AAAQ,qBAAO,IAAIA,CAAJ,CAAMC,CAAN,CAAP;;AACR,iBAAK,CAAL;AAAQ,qBAAO,IAAID,CAAJ,CAAMC,CAAN,EAASC,CAAT,CAAP;AAHV;;AAIE,iBAAO,IAAIF,CAAJ,CAAMC,CAAN,EAASC,CAAT,EAAYC,CAAZ,CAAP;AACH;;AAAC,eAAOH,CAAC,CAACM,KAAF,CAAQ,IAAR,EAAcF,SAAd,CAAP;AACH,OARD;;AASAtB,MAAAA,CAAC,CAACN,SAAD,CAAD,GAAewB,CAAC,CAACxB,SAAD,CAAhB;AACA,aAAOM,CAAP,CAX8C,CAYhD;AACC,KAbiC,CAa/BgB,GAb+B,CAAhC,GAaQX,QAAQ,IAAI,OAAOW,GAAP,IAAc,UAA1B,GAAuCzB,GAAG,CAACkC,QAAQ,CAACC,IAAV,EAAgBV,GAAhB,CAA1C,GAAiEA,GAjB3E,CAPkB,CAyBlB;;AACA,QAAIX,QAAJ,EAAc;AACZ,OAACM,OAAO,CAACgB,OAAR,KAAoBhB,OAAO,CAACgB,OAAR,GAAkB,EAAtC,CAAD,EAA4Cb,GAA5C,IAAmDE,GAAnD,CADY,CAEZ;;AACA,UAAIpB,IAAI,GAAGD,OAAO,CAACiC,CAAf,IAAoBhB,QAApB,IAAgC,CAACA,QAAQ,CAACE,GAAD,CAA7C,EAAoDtB,IAAI,CAACoB,QAAD,EAAWE,GAAX,EAAgBE,GAAhB,CAAJ;AACrD;AACF;AACF,CA5CD,C,CA6CA;;;AACArB,OAAO,CAACK,CAAR,GAAY,CAAZ,C,CAAiB;;AACjBL,OAAO,CAACO,CAAR,GAAY,CAAZ,C,CAAiB;;AACjBP,OAAO,CAACS,CAAR,GAAY,CAAZ,C,CAAiB;;AACjBT,OAAO,CAACW,CAAR,GAAY,CAAZ,C,CAAiB;;AACjBX,OAAO,CAACa,CAAR,GAAY,EAAZ,C,CAAiB;;AACjBb,OAAO,CAACe,CAAR,GAAY,EAAZ,C,CAAiB;;AACjBf,OAAO,CAACkC,CAAR,GAAY,EAAZ,C,CAAiB;;AACjBlC,OAAO,CAACiC,CAAR,GAAY,GAAZ,C,CAAiB;;AACjBE,MAAM,CAACnB,OAAP,GAAiBhB,OAAjB","sourcesContent":["var global = require('./_global');\nvar core = require('./_core');\nvar ctx = require('./_ctx');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n"]},"metadata":{},"sourceType":"script"}