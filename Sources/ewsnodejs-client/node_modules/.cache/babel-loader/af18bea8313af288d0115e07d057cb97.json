{"ast":null,"code":"import { get, set, init } from \"./schedule.js\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function (t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0,\n      on1,\n      sit = start(name) ? init : set;\n  return function () {\n    var schedule = sit(this, id),\n        on = schedule.on; // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n    schedule.on = on1;\n  };\n}\n\nexport default function (name, listener) {\n  var id = this._id;\n  return arguments.length < 2 ? get(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));\n}","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/d3-transition/src/transition/on.js"],"names":["get","set","init","start","name","trim","split","every","t","i","indexOf","slice","onFunction","id","listener","on0","on1","sit","schedule","on","copy","_id","arguments","length","node","each"],"mappings":"AAAA,SAAQA,GAAR,EAAaC,GAAb,EAAkBC,IAAlB,QAA6B,eAA7B;;AAEA,SAASC,KAAT,CAAeC,IAAf,EAAqB;AACnB,SAAO,CAACA,IAAI,GAAG,EAAR,EAAYC,IAAZ,GAAmBC,KAAnB,CAAyB,OAAzB,EAAkCC,KAAlC,CAAwC,UAASC,CAAT,EAAY;AACzD,QAAIC,CAAC,GAAGD,CAAC,CAACE,OAAF,CAAU,GAAV,CAAR;AACA,QAAID,CAAC,IAAI,CAAT,EAAYD,CAAC,GAAGA,CAAC,CAACG,KAAF,CAAQ,CAAR,EAAWF,CAAX,CAAJ;AACZ,WAAO,CAACD,CAAD,IAAMA,CAAC,KAAK,OAAnB;AACD,GAJM,CAAP;AAKD;;AAED,SAASI,UAAT,CAAoBC,EAApB,EAAwBT,IAAxB,EAA8BU,QAA9B,EAAwC;AACtC,MAAIC,GAAJ;AAAA,MAASC,GAAT;AAAA,MAAcC,GAAG,GAAGd,KAAK,CAACC,IAAD,CAAL,GAAcF,IAAd,GAAqBD,GAAzC;AACA,SAAO,YAAW;AAChB,QAAIiB,QAAQ,GAAGD,GAAG,CAAC,IAAD,EAAOJ,EAAP,CAAlB;AAAA,QACIM,EAAE,GAAGD,QAAQ,CAACC,EADlB,CADgB,CAIhB;AACA;AACA;;AACA,QAAIA,EAAE,KAAKJ,GAAX,EAAgB,CAACC,GAAG,GAAG,CAACD,GAAG,GAAGI,EAAP,EAAWC,IAAX,EAAP,EAA0BD,EAA1B,CAA6Bf,IAA7B,EAAmCU,QAAnC;AAEhBI,IAAAA,QAAQ,CAACC,EAAT,GAAcH,GAAd;AACD,GAVD;AAWD;;AAED,eAAe,UAASZ,IAAT,EAAeU,QAAf,EAAyB;AACtC,MAAID,EAAE,GAAG,KAAKQ,GAAd;AAEA,SAAOC,SAAS,CAACC,MAAV,GAAmB,CAAnB,GACDvB,GAAG,CAAC,KAAKwB,IAAL,EAAD,EAAcX,EAAd,CAAH,CAAqBM,EAArB,CAAwBA,EAAxB,CAA2Bf,IAA3B,CADC,GAED,KAAKqB,IAAL,CAAUb,UAAU,CAACC,EAAD,EAAKT,IAAL,EAAWU,QAAX,CAApB,CAFN;AAGD","sourcesContent":["import {get, set, init} from \"./schedule.js\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n"]},"metadata":{},"sourceType":"module"}