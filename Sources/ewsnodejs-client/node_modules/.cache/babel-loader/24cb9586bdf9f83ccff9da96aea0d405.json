{"ast":null,"code":"/**\n *  Copyright (c) 2014-2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.Immutable = factory();\n})(this, function () {\n  'use strict';\n\n  var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n\n    ctor.prototype.constructor = ctor;\n  }\n\n  function Iterable(value) {\n    return isIterable(value) ? value : Seq(value);\n  }\n\n  createClass(KeyedIterable, Iterable);\n\n  function KeyedIterable(value) {\n    return isKeyed(value) ? value : KeyedSeq(value);\n  }\n\n  createClass(IndexedIterable, Iterable);\n\n  function IndexedIterable(value) {\n    return isIndexed(value) ? value : IndexedSeq(value);\n  }\n\n  createClass(SetIterable, Iterable);\n\n  function SetIterable(value) {\n    return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n  }\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@'; // Used for setting prototype methods that IE8 chokes on.\n\n  var DELETE = 'delete'; // Constants describing the size of trie nodes.\n\n  var SHIFT = 5; // Resulted in best performance after ______?\n\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1; // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n\n  var NOT_SET = {}; // Boolean references, Rough equivalent of `bool &`.\n\n  var CHANGE_LENGTH = {\n    value: false\n  };\n  var DID_ALTER = {\n    value: false\n  };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  } // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n\n\n  function OwnerID() {} // http://jsperf.com/copy-array-inline\n\n\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32âˆ’1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n\n      index = uint32Index;\n    }\n\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || size !== undefined && begin <= -size) && (end === undefined || size !== undefined && end >= size);\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ? defaultIndex : index < 0 ? Math.max(0, size + index) : size === undefined ? index : Math.min(size, index);\n  }\n  /* global Symbol */\n\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n  function Iterator(next) {\n    this.next = next;\n  }\n\n  Iterator.prototype.toString = function () {\n    return '[Iterator]';\n  };\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect = Iterator.prototype.toSource = function () {\n    return this.toString();\n  };\n\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? iteratorResult.value = value : iteratorResult = {\n      value: value,\n      done: false\n    };\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL] || iterable[FAUX_ITERATOR_SYMBOL]);\n\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n\n  function Seq(value) {\n    return value === null || value === undefined ? emptySequence() : isIterable(value) ? value.toSeq() : seqFromValue(value);\n  }\n\n  Seq.of = function ()\n  /*...values*/\n  {\n    return Seq(arguments);\n  };\n\n  Seq.prototype.toSeq = function () {\n    return this;\n  };\n\n  Seq.prototype.toString = function () {\n    return this.__toString('Seq {', '}');\n  };\n\n  Seq.prototype.cacheResult = function () {\n    if (!this._cache && this.__iterateUncached) {\n      this._cache = this.entrySeq().toArray();\n      this.size = this._cache.length;\n    }\n\n    return this;\n  }; // abstract __iterateUncached(fn, reverse)\n\n\n  Seq.prototype.__iterate = function (fn, reverse) {\n    return seqIterate(this, fn, reverse, true);\n  }; // abstract __iteratorUncached(type, reverse)\n\n\n  Seq.prototype.__iterator = function (type, reverse) {\n    return seqIterator(this, type, reverse, true);\n  };\n\n  createClass(KeyedSeq, Seq);\n\n  function KeyedSeq(value) {\n    return value === null || value === undefined ? emptySequence().toKeyedSeq() : isIterable(value) ? isKeyed(value) ? value.toSeq() : value.fromEntrySeq() : keyedSeqFromValue(value);\n  }\n\n  KeyedSeq.prototype.toKeyedSeq = function () {\n    return this;\n  };\n\n  createClass(IndexedSeq, Seq);\n\n  function IndexedSeq(value) {\n    return value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n  }\n\n  IndexedSeq.of = function ()\n  /*...values*/\n  {\n    return IndexedSeq(arguments);\n  };\n\n  IndexedSeq.prototype.toIndexedSeq = function () {\n    return this;\n  };\n\n  IndexedSeq.prototype.toString = function () {\n    return this.__toString('Seq [', ']');\n  };\n\n  IndexedSeq.prototype.__iterate = function (fn, reverse) {\n    return seqIterate(this, fn, reverse, false);\n  };\n\n  IndexedSeq.prototype.__iterator = function (type, reverse) {\n    return seqIterator(this, type, reverse, false);\n  };\n\n  createClass(SetSeq, Seq);\n\n  function SetSeq(value) {\n    return (value === null || value === undefined ? emptySequence() : !isIterable(value) ? indexedSeqFromValue(value) : isKeyed(value) ? value.entrySeq() : value).toSetSeq();\n  }\n\n  SetSeq.of = function ()\n  /*...values*/\n  {\n    return SetSeq(arguments);\n  };\n\n  SetSeq.prototype.toSetSeq = function () {\n    return this;\n  };\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n  createClass(ArraySeq, IndexedSeq);\n\n  function ArraySeq(array) {\n    this._array = array;\n    this.size = array.length;\n  }\n\n  ArraySeq.prototype.get = function (index, notSetValue) {\n    return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n  };\n\n  ArraySeq.prototype.__iterate = function (fn, reverse) {\n    var array = this._array;\n    var maxIndex = array.length - 1;\n\n    for (var ii = 0; ii <= maxIndex; ii++) {\n      if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n        return ii + 1;\n      }\n    }\n\n    return ii;\n  };\n\n  ArraySeq.prototype.__iterator = function (type, reverse) {\n    var array = this._array;\n    var maxIndex = array.length - 1;\n    var ii = 0;\n    return new Iterator(function () {\n      return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++]);\n    });\n  };\n\n  createClass(ObjectSeq, KeyedSeq);\n\n  function ObjectSeq(object) {\n    var keys = Object.keys(object);\n    this._object = object;\n    this._keys = keys;\n    this.size = keys.length;\n  }\n\n  ObjectSeq.prototype.get = function (key, notSetValue) {\n    if (notSetValue !== undefined && !this.has(key)) {\n      return notSetValue;\n    }\n\n    return this._object[key];\n  };\n\n  ObjectSeq.prototype.has = function (key) {\n    return this._object.hasOwnProperty(key);\n  };\n\n  ObjectSeq.prototype.__iterate = function (fn, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var maxIndex = keys.length - 1;\n\n    for (var ii = 0; ii <= maxIndex; ii++) {\n      var key = keys[reverse ? maxIndex - ii : ii];\n\n      if (fn(object[key], key, this) === false) {\n        return ii + 1;\n      }\n    }\n\n    return ii;\n  };\n\n  ObjectSeq.prototype.__iterator = function (type, reverse) {\n    var object = this._object;\n    var keys = this._keys;\n    var maxIndex = keys.length - 1;\n    var ii = 0;\n    return new Iterator(function () {\n      var key = keys[reverse ? maxIndex - ii : ii];\n      return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, key, object[key]);\n    });\n  };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n  createClass(IterableSeq, IndexedSeq);\n\n  function IterableSeq(iterable) {\n    this._iterable = iterable;\n    this.size = iterable.length || iterable.size;\n  }\n\n  IterableSeq.prototype.__iterateUncached = function (fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n\n    var iterable = this._iterable;\n    var iterator = getIterator(iterable);\n    var iterations = 0;\n\n    if (isIterator(iterator)) {\n      var step;\n\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n    }\n\n    return iterations;\n  };\n\n  IterableSeq.prototype.__iteratorUncached = function (type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n\n    var iterable = this._iterable;\n    var iterator = getIterator(iterable);\n\n    if (!isIterator(iterator)) {\n      return new Iterator(iteratorDone);\n    }\n\n    var iterations = 0;\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, iterations++, step.value);\n    });\n  };\n\n  createClass(IteratorSeq, IndexedSeq);\n\n  function IteratorSeq(iterator) {\n    this._iterator = iterator;\n    this._iteratorCache = [];\n  }\n\n  IteratorSeq.prototype.__iterateUncached = function (fn, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterate(fn, reverse);\n    }\n\n    var iterator = this._iterator;\n    var cache = this._iteratorCache;\n    var iterations = 0;\n\n    while (iterations < cache.length) {\n      if (fn(cache[iterations], iterations++, this) === false) {\n        return iterations;\n      }\n    }\n\n    var step;\n\n    while (!(step = iterator.next()).done) {\n      var val = step.value;\n      cache[iterations] = val;\n\n      if (fn(val, iterations++, this) === false) {\n        break;\n      }\n    }\n\n    return iterations;\n  };\n\n  IteratorSeq.prototype.__iteratorUncached = function (type, reverse) {\n    if (reverse) {\n      return this.cacheResult().__iterator(type, reverse);\n    }\n\n    var iterator = this._iterator;\n    var cache = this._iteratorCache;\n    var iterations = 0;\n    return new Iterator(function () {\n      if (iterations >= cache.length) {\n        var step = iterator.next();\n\n        if (step.done) {\n          return step;\n        }\n\n        cache[iterations] = step.value;\n      }\n\n      return iteratorValue(type, iterations, cache[iterations++]);\n    });\n  }; // # pragma Helper functions\n\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq = Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() : isIterator(value) ? new IteratorSeq(value).fromEntrySeq() : hasIterator(value) ? new IterableSeq(value).fromEntrySeq() : typeof value === 'object' ? new ObjectSeq(value) : undefined;\n\n    if (!seq) {\n      throw new TypeError('Expected Array or iterable object of [k, v] entries, ' + 'or keyed object: ' + value);\n    }\n\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n\n    if (!seq) {\n      throw new TypeError('Expected Array or iterable object of values: ' + value);\n    }\n\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) || typeof value === 'object' && new ObjectSeq(value);\n\n    if (!seq) {\n      throw new TypeError('Expected Array or iterable object of values, or keyed object: ' + value);\n    }\n\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return isArrayLike(value) ? new ArraySeq(value) : isIterator(value) ? new IteratorSeq(value) : hasIterator(value) ? new IterableSeq(value) : undefined;\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n\n    if (cache) {\n      var maxIndex = cache.length - 1;\n\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n\n      return ii;\n    }\n\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function () {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ? iteratorDone() : iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  function fromJS(json, converter) {\n    return converter ? fromJSWith(converter, json, '', {\n      '': json\n    }) : fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function (v, k) {\n        return fromJSWith(converter, v, k, json);\n      }));\n    }\n\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function (v, k) {\n        return fromJSWith(converter, v, k, json);\n      }));\n    }\n\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n\n\n  function is(valueA, valueB) {\n    if (valueA === valueB || valueA !== valueA && valueB !== valueB) {\n      return true;\n    }\n\n    if (!valueA || !valueB) {\n      return false;\n    }\n\n    if (typeof valueA.valueOf === 'function' && typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n\n      if (valueA === valueB || valueA !== valueA && valueB !== valueB) {\n        return true;\n      }\n\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n\n    if (typeof valueA.equals === 'function' && typeof valueB.equals === 'function' && valueA.equals(valueB)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (!isIterable(b) || a.size !== undefined && b.size !== undefined && a.size !== b.size || a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash || isKeyed(a) !== isKeyed(b) || isIndexed(a) !== isIndexed(b) || isOrdered(a) !== isOrdered(b)) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function (v, k) {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n\n    var bSize = b.__iterate(function (v, k) {\n      if (notAssociative ? !a.has(v) : flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Repeat, IndexedSeq);\n\n  function Repeat(value, times) {\n    if (!(this instanceof Repeat)) {\n      return new Repeat(value, times);\n    }\n\n    this._value = value;\n    this.size = times === undefined ? Infinity : Math.max(0, times);\n\n    if (this.size === 0) {\n      if (EMPTY_REPEAT) {\n        return EMPTY_REPEAT;\n      }\n\n      EMPTY_REPEAT = this;\n    }\n  }\n\n  Repeat.prototype.toString = function () {\n    if (this.size === 0) {\n      return 'Repeat []';\n    }\n\n    return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n  };\n\n  Repeat.prototype.get = function (index, notSetValue) {\n    return this.has(index) ? this._value : notSetValue;\n  };\n\n  Repeat.prototype.includes = function (searchValue) {\n    return is(this._value, searchValue);\n  };\n\n  Repeat.prototype.slice = function (begin, end) {\n    var size = this.size;\n    return wholeSlice(begin, end, size) ? this : new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n  };\n\n  Repeat.prototype.reverse = function () {\n    return this;\n  };\n\n  Repeat.prototype.indexOf = function (searchValue) {\n    if (is(this._value, searchValue)) {\n      return 0;\n    }\n\n    return -1;\n  };\n\n  Repeat.prototype.lastIndexOf = function (searchValue) {\n    if (is(this._value, searchValue)) {\n      return this.size;\n    }\n\n    return -1;\n  };\n\n  Repeat.prototype.__iterate = function (fn, reverse) {\n    for (var ii = 0; ii < this.size; ii++) {\n      if (fn(this._value, ii, this) === false) {\n        return ii + 1;\n      }\n    }\n\n    return ii;\n  };\n\n  Repeat.prototype.__iterator = function (type, reverse) {\n    var this$0 = this;\n    var ii = 0;\n    return new Iterator(function () {\n      return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone();\n    });\n  };\n\n  Repeat.prototype.equals = function (other) {\n    return other instanceof Repeat ? is(this._value, other._value) : deepEqual(other);\n  };\n\n  var EMPTY_REPEAT;\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  createClass(Range, IndexedSeq);\n\n  function Range(start, end, step) {\n    if (!(this instanceof Range)) {\n      return new Range(start, end, step);\n    }\n\n    invariant(step !== 0, 'Cannot step a Range by 0');\n    start = start || 0;\n\n    if (end === undefined) {\n      end = Infinity;\n    }\n\n    step = step === undefined ? 1 : Math.abs(step);\n\n    if (end < start) {\n      step = -step;\n    }\n\n    this._start = start;\n    this._end = end;\n    this._step = step;\n    this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n\n    if (this.size === 0) {\n      if (EMPTY_RANGE) {\n        return EMPTY_RANGE;\n      }\n\n      EMPTY_RANGE = this;\n    }\n  }\n\n  Range.prototype.toString = function () {\n    if (this.size === 0) {\n      return 'Range []';\n    }\n\n    return 'Range [ ' + this._start + '...' + this._end + (this._step > 1 ? ' by ' + this._step : '') + ' ]';\n  };\n\n  Range.prototype.get = function (index, notSetValue) {\n    return this.has(index) ? this._start + wrapIndex(this, index) * this._step : notSetValue;\n  };\n\n  Range.prototype.includes = function (searchValue) {\n    var possibleIndex = (searchValue - this._start) / this._step;\n    return possibleIndex >= 0 && possibleIndex < this.size && possibleIndex === Math.floor(possibleIndex);\n  };\n\n  Range.prototype.slice = function (begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n\n    begin = resolveBegin(begin, this.size);\n    end = resolveEnd(end, this.size);\n\n    if (end <= begin) {\n      return new Range(0, 0);\n    }\n\n    return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n  };\n\n  Range.prototype.indexOf = function (searchValue) {\n    var offsetValue = searchValue - this._start;\n\n    if (offsetValue % this._step === 0) {\n      var index = offsetValue / this._step;\n\n      if (index >= 0 && index < this.size) {\n        return index;\n      }\n    }\n\n    return -1;\n  };\n\n  Range.prototype.lastIndexOf = function (searchValue) {\n    return this.indexOf(searchValue);\n  };\n\n  Range.prototype.__iterate = function (fn, reverse) {\n    var maxIndex = this.size - 1;\n    var step = this._step;\n    var value = reverse ? this._start + maxIndex * step : this._start;\n\n    for (var ii = 0; ii <= maxIndex; ii++) {\n      if (fn(value, ii, this) === false) {\n        return ii + 1;\n      }\n\n      value += reverse ? -step : step;\n    }\n\n    return ii;\n  };\n\n  Range.prototype.__iterator = function (type, reverse) {\n    var maxIndex = this.size - 1;\n    var step = this._step;\n    var value = reverse ? this._start + maxIndex * step : this._start;\n    var ii = 0;\n    return new Iterator(function () {\n      var v = value;\n      value += reverse ? -step : step;\n      return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n    });\n  };\n\n  Range.prototype.equals = function (other) {\n    return other instanceof Range ? this._start === other._start && this._end === other._end && this._step === other._step : deepEqual(this, other);\n  };\n\n  var EMPTY_RANGE;\n  createClass(Collection, Iterable);\n\n  function Collection() {\n    throw TypeError('Abstract');\n  }\n\n  createClass(KeyedCollection, Collection);\n\n  function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);\n\n  function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);\n\n  function SetCollection() {}\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n  var imul = typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ? Math.imul : function imul(a, b) {\n    a = a | 0; // int\n\n    b = b | 0; // int\n\n    var c = a & 0xffff;\n    var d = b & 0xffff; // Shift by 0 fixes the sign on the high part.\n\n    return c * d + ((a >>> 16) * d + c * (b >>> 16) << 16 >>> 0) | 0; // int\n  }; // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n\n  function smi(i32) {\n    return i32 >>> 1 & 0x40000000 | i32 & 0xBFFFFFFF;\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n\n    if (o === true) {\n      return 1;\n    }\n\n    var type = typeof o;\n\n    if (type === 'number') {\n      var h = o | 0;\n\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n\n      return smi(h);\n    }\n\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n\n    if (hash === undefined) {\n      hash = hashString(string);\n\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n\n    return hash;\n  } // http://jsperf.com/hashing-strings\n\n\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash;\n\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = obj[UID_HASH_KEY];\n\n    if (hash !== undefined) {\n      return hash;\n    }\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n\n      if (hash !== undefined) {\n        return hash;\n      }\n\n      hash = getIENodeHash(obj);\n\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = ++objHashUID;\n\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined && obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function () {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  } // Get references to ES5 object methods.\n\n\n  var isExtensible = Object.isExtensible; // True if Object.defineProperty works as expected. IE8 fails this test.\n\n  var canDefineProperty = function () {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }(); // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n\n\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1:\n          // Element\n          return node.uniqueID;\n\n        case 9:\n          // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  } // If possible, use a WeakMap.\n\n\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n\n  var objHashUID = 0;\n  var UID_HASH_KEY = '__immutablehash__';\n\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function assertNotInfinite(size) {\n    invariant(size !== Infinity, 'Cannot perform this action with an infinite size.');\n  }\n\n  createClass(Map, KeyedCollection); // @pragma Construction\n\n  function Map(value) {\n    return value === null || value === undefined ? emptyMap() : isMap(value) && !isOrdered(value) ? value : emptyMap().withMutations(function (map) {\n      var iter = KeyedIterable(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v, k) {\n        return map.set(k, v);\n      });\n    });\n  }\n\n  Map.prototype.toString = function () {\n    return this.__toString('Map {', '}');\n  }; // @pragma Access\n\n\n  Map.prototype.get = function (k, notSetValue) {\n    return this._root ? this._root.get(0, undefined, k, notSetValue) : notSetValue;\n  }; // @pragma Modification\n\n\n  Map.prototype.set = function (k, v) {\n    return updateMap(this, k, v);\n  };\n\n  Map.prototype.setIn = function (keyPath, v) {\n    return this.updateIn(keyPath, NOT_SET, function () {\n      return v;\n    });\n  };\n\n  Map.prototype.remove = function (k) {\n    return updateMap(this, k, NOT_SET);\n  };\n\n  Map.prototype.deleteIn = function (keyPath) {\n    return this.updateIn(keyPath, function () {\n      return NOT_SET;\n    });\n  };\n\n  Map.prototype.update = function (k, notSetValue, updater) {\n    return arguments.length === 1 ? k(this) : this.updateIn([k], notSetValue, updater);\n  };\n\n  Map.prototype.updateIn = function (keyPath, notSetValue, updater) {\n    if (!updater) {\n      updater = notSetValue;\n      notSetValue = undefined;\n    }\n\n    var updatedValue = updateInDeepMap(this, forceIterator(keyPath), notSetValue, updater);\n    return updatedValue === NOT_SET ? undefined : updatedValue;\n  };\n\n  Map.prototype.clear = function () {\n    if (this.size === 0) {\n      return this;\n    }\n\n    if (this.__ownerID) {\n      this.size = 0;\n      this._root = null;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return emptyMap();\n  }; // @pragma Composition\n\n\n  Map.prototype.merge = function ()\n  /*...iters*/\n  {\n    return mergeIntoMapWith(this, undefined, arguments);\n  };\n\n  Map.prototype.mergeWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return mergeIntoMapWith(this, merger, iters);\n  };\n\n  Map.prototype.mergeIn = function (keyPath) {\n    var iters = SLICE$0.call(arguments, 1);\n    return this.updateIn(keyPath, emptyMap(), function (m) {\n      return typeof m.merge === 'function' ? m.merge.apply(m, iters) : iters[iters.length - 1];\n    });\n  };\n\n  Map.prototype.mergeDeep = function ()\n  /*...iters*/\n  {\n    return mergeIntoMapWith(this, deepMerger, arguments);\n  };\n\n  Map.prototype.mergeDeepWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n  };\n\n  Map.prototype.mergeDeepIn = function (keyPath) {\n    var iters = SLICE$0.call(arguments, 1);\n    return this.updateIn(keyPath, emptyMap(), function (m) {\n      return typeof m.mergeDeep === 'function' ? m.mergeDeep.apply(m, iters) : iters[iters.length - 1];\n    });\n  };\n\n  Map.prototype.sort = function (comparator) {\n    // Late binding\n    return OrderedMap(sortFactory(this, comparator));\n  };\n\n  Map.prototype.sortBy = function (mapper, comparator) {\n    // Late binding\n    return OrderedMap(sortFactory(this, comparator, mapper));\n  }; // @pragma Mutability\n\n\n  Map.prototype.withMutations = function (fn) {\n    var mutable = this.asMutable();\n    fn(mutable);\n    return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n  };\n\n  Map.prototype.asMutable = function () {\n    return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n  };\n\n  Map.prototype.asImmutable = function () {\n    return this.__ensureOwner();\n  };\n\n  Map.prototype.wasAltered = function () {\n    return this.__altered;\n  };\n\n  Map.prototype.__iterator = function (type, reverse) {\n    return new MapIterator(this, type, reverse);\n  };\n\n  Map.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    var iterations = 0;\n    this._root && this._root.iterate(function (entry) {\n      iterations++;\n      return fn(entry[1], entry[0], this$0);\n    }, reverse);\n    return iterations;\n  };\n\n  Map.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n\n    return makeMap(this.size, this._root, ownerID, this.__hash);\n  };\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn; // #pragma Trie Nodes\n\n  function ArrayMapNode(ownerID, entries) {\n    this.ownerID = ownerID;\n    this.entries = entries;\n  }\n\n  ArrayMapNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    var entries = this.entries;\n\n    for (var ii = 0, len = entries.length; ii < len; ii++) {\n      if (is(key, entries[ii][0])) {\n        return entries[ii][1];\n      }\n    }\n\n    return notSetValue;\n  };\n\n  ArrayMapNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    var removed = value === NOT_SET;\n    var entries = this.entries;\n    var idx = 0;\n\n    for (var len = entries.length; idx < len; idx++) {\n      if (is(key, entries[idx][0])) {\n        break;\n      }\n    }\n\n    var exists = idx < len;\n\n    if (exists ? entries[idx][1] === value : removed) {\n      return this;\n    }\n\n    SetRef(didAlter);\n    (removed || !exists) && SetRef(didChangeSize);\n\n    if (removed && entries.length === 1) {\n      return; // undefined\n    }\n\n    if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n      return createNodes(ownerID, entries, key, value);\n    }\n\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newEntries = isEditable ? entries : arrCopy(entries);\n\n    if (exists) {\n      if (removed) {\n        idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();\n      } else {\n        newEntries[idx] = [key, value];\n      }\n    } else {\n      newEntries.push([key, value]);\n    }\n\n    if (isEditable) {\n      this.entries = newEntries;\n      return this;\n    }\n\n    return new ArrayMapNode(ownerID, newEntries);\n  };\n\n  function BitmapIndexedNode(ownerID, bitmap, nodes) {\n    this.ownerID = ownerID;\n    this.bitmap = bitmap;\n    this.nodes = nodes;\n  }\n\n  BitmapIndexedNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n\n    var bit = 1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK);\n    var bitmap = this.bitmap;\n    return (bitmap & bit) === 0 ? notSetValue : this.nodes[popCount(bitmap & bit - 1)].get(shift + SHIFT, keyHash, key, notSetValue);\n  };\n\n  BitmapIndexedNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n\n    var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n    var bit = 1 << keyHashFrag;\n    var bitmap = this.bitmap;\n    var exists = (bitmap & bit) !== 0;\n\n    if (!exists && value === NOT_SET) {\n      return this;\n    }\n\n    var idx = popCount(bitmap & bit - 1);\n    var nodes = this.nodes;\n    var node = exists ? nodes[idx] : undefined;\n    var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n    if (newNode === node) {\n      return this;\n    }\n\n    if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n      return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n    }\n\n    if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n      return nodes[idx ^ 1];\n    }\n\n    if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n      return newNode;\n    }\n\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n    var newNodes = exists ? newNode ? setIn(nodes, idx, newNode, isEditable) : spliceOut(nodes, idx, isEditable) : spliceIn(nodes, idx, newNode, isEditable);\n\n    if (isEditable) {\n      this.bitmap = newBitmap;\n      this.nodes = newNodes;\n      return this;\n    }\n\n    return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n  };\n\n  function HashArrayMapNode(ownerID, count, nodes) {\n    this.ownerID = ownerID;\n    this.count = count;\n    this.nodes = nodes;\n  }\n\n  HashArrayMapNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n\n    var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n    var node = this.nodes[idx];\n    return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n  };\n\n  HashArrayMapNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n\n    var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n    var removed = value === NOT_SET;\n    var nodes = this.nodes;\n    var node = nodes[idx];\n\n    if (removed && !node) {\n      return this;\n    }\n\n    var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n    if (newNode === node) {\n      return this;\n    }\n\n    var newCount = this.count;\n\n    if (!node) {\n      newCount++;\n    } else if (!newNode) {\n      newCount--;\n\n      if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n        return packNodes(ownerID, nodes, newCount, idx);\n      }\n    }\n\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n    if (isEditable) {\n      this.count = newCount;\n      this.nodes = newNodes;\n      return this;\n    }\n\n    return new HashArrayMapNode(ownerID, newCount, newNodes);\n  };\n\n  function HashCollisionNode(ownerID, keyHash, entries) {\n    this.ownerID = ownerID;\n    this.keyHash = keyHash;\n    this.entries = entries;\n  }\n\n  HashCollisionNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    var entries = this.entries;\n\n    for (var ii = 0, len = entries.length; ii < len; ii++) {\n      if (is(key, entries[ii][0])) {\n        return entries[ii][1];\n      }\n    }\n\n    return notSetValue;\n  };\n\n  HashCollisionNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (keyHash === undefined) {\n      keyHash = hash(key);\n    }\n\n    var removed = value === NOT_SET;\n\n    if (keyHash !== this.keyHash) {\n      if (removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n    }\n\n    var entries = this.entries;\n    var idx = 0;\n\n    for (var len = entries.length; idx < len; idx++) {\n      if (is(key, entries[idx][0])) {\n        break;\n      }\n    }\n\n    var exists = idx < len;\n\n    if (exists ? entries[idx][1] === value : removed) {\n      return this;\n    }\n\n    SetRef(didAlter);\n    (removed || !exists) && SetRef(didChangeSize);\n\n    if (removed && len === 2) {\n      return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n    }\n\n    var isEditable = ownerID && ownerID === this.ownerID;\n    var newEntries = isEditable ? entries : arrCopy(entries);\n\n    if (exists) {\n      if (removed) {\n        idx === len - 1 ? newEntries.pop() : newEntries[idx] = newEntries.pop();\n      } else {\n        newEntries[idx] = [key, value];\n      }\n    } else {\n      newEntries.push([key, value]);\n    }\n\n    if (isEditable) {\n      this.entries = newEntries;\n      return this;\n    }\n\n    return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n  };\n\n  function ValueNode(ownerID, keyHash, entry) {\n    this.ownerID = ownerID;\n    this.keyHash = keyHash;\n    this.entry = entry;\n  }\n\n  ValueNode.prototype.get = function (shift, keyHash, key, notSetValue) {\n    return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n  };\n\n  ValueNode.prototype.update = function (ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    var removed = value === NOT_SET;\n    var keyMatch = is(key, this.entry[0]);\n\n    if (keyMatch ? value === this.entry[1] : removed) {\n      return this;\n    }\n\n    SetRef(didAlter);\n\n    if (removed) {\n      SetRef(didChangeSize);\n      return; // undefined\n    }\n\n    if (keyMatch) {\n      if (ownerID && ownerID === this.ownerID) {\n        this.entry[1] = value;\n        return this;\n      }\n\n      return new ValueNode(ownerID, this.keyHash, [key, value]);\n    }\n\n    SetRef(didChangeSize);\n    return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n  }; // #pragma Iterators\n\n\n  ArrayMapNode.prototype.iterate = HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  };\n\n  BitmapIndexedNode.prototype.iterate = HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  };\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  };\n\n  createClass(MapIterator, Iterator);\n\n  function MapIterator(map, type, reverse) {\n    this._type = type;\n    this._reverse = reverse;\n    this._stack = map._root && mapIteratorFrame(map._root);\n  }\n\n  MapIterator.prototype.next = function () {\n    var type = this._type;\n    var stack = this._stack;\n\n    while (stack) {\n      var node = stack.node;\n      var index = stack.index++;\n      var maxIndex;\n\n      if (node.entry) {\n        if (index === 0) {\n          return mapIteratorValue(type, node.entry);\n        }\n      } else if (node.entries) {\n        maxIndex = node.entries.length - 1;\n\n        if (index <= maxIndex) {\n          return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n        }\n      } else {\n        maxIndex = node.nodes.length - 1;\n\n        if (index <= maxIndex) {\n          var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n\n          if (subNode) {\n            if (subNode.entry) {\n              return mapIteratorValue(type, subNode.entry);\n            }\n\n            stack = this._stack = mapIteratorFrame(subNode, stack);\n          }\n\n          continue;\n        }\n      }\n\n      stack = this._stack = this._stack.__prev;\n    }\n\n    return iteratorDone();\n  };\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n\n      if (!didAlter.value) {\n        return map;\n      }\n\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n    var newNode;\n    var nodes = idx1 === idx2 ? [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] : (newNode = new ValueNode(ownerID, keyHash, entry), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n    return new BitmapIndexedNode(ownerID, 1 << idx1 | 1 << idx2, nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n\n      if (!isIterable(value)) {\n        iter = iter.map(function (v) {\n          return fromJS(v);\n        });\n      }\n\n      iters.push(iter);\n    }\n\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ? existing.mergeDeep(value) : is(existing, value) ? existing : value;\n  }\n\n  function deepMergerWith(merger) {\n    return function (existing, value, key) {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function (x) {\n      return x.size !== 0;\n    });\n\n    if (iters.length === 0) {\n      return collection;\n    }\n\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n\n    return collection.withMutations(function (collection) {\n      var mergeIntoMap = merger ? function (value, key) {\n        collection.update(key, NOT_SET, function (existing) {\n          return existing === NOT_SET ? value : merger(existing, value, key);\n        });\n      } : function (value, key) {\n        collection.set(key, value);\n      };\n\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n\n    invariant(isNotSet || existing && existing.set, 'invalid keyPath');\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(nextExisting, keyPathIter, notSetValue, updater);\n    return nextUpdated === nextExisting ? existing : nextUpdated === NOT_SET ? existing.remove(key) : (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - (x >> 1 & 0x55555555);\n    x = (x & 0x33333333) + (x >> 2 & 0x33333333);\n    x = x + (x >> 4) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n\n    var newArray = new Array(newLen);\n    var after = 0;\n\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n\n    var newArray = new Array(newLen);\n    var after = 0;\n\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n\n      newArray[ii] = array[ii + after];\n    }\n\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n  createClass(List, IndexedCollection); // @pragma Construction\n\n  function List(value) {\n    var empty = emptyList();\n\n    if (value === null || value === undefined) {\n      return empty;\n    }\n\n    if (isList(value)) {\n      return value;\n    }\n\n    var iter = IndexedIterable(value);\n    var size = iter.size;\n\n    if (size === 0) {\n      return empty;\n    }\n\n    assertNotInfinite(size);\n\n    if (size > 0 && size < SIZE) {\n      return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n    }\n\n    return empty.withMutations(function (list) {\n      list.setSize(size);\n      iter.forEach(function (v, i) {\n        return list.set(i, v);\n      });\n    });\n  }\n\n  List.of = function ()\n  /*...values*/\n  {\n    return this(arguments);\n  };\n\n  List.prototype.toString = function () {\n    return this.__toString('List [', ']');\n  }; // @pragma Access\n\n\n  List.prototype.get = function (index, notSetValue) {\n    index = wrapIndex(this, index);\n\n    if (index >= 0 && index < this.size) {\n      index += this._origin;\n      var node = listNodeFor(this, index);\n      return node && node.array[index & MASK];\n    }\n\n    return notSetValue;\n  }; // @pragma Modification\n\n\n  List.prototype.set = function (index, value) {\n    return updateList(this, index, value);\n  };\n\n  List.prototype.remove = function (index) {\n    return !this.has(index) ? this : index === 0 ? this.shift() : index === this.size - 1 ? this.pop() : this.splice(index, 1);\n  };\n\n  List.prototype.insert = function (index, value) {\n    return this.splice(index, 0, value);\n  };\n\n  List.prototype.clear = function () {\n    if (this.size === 0) {\n      return this;\n    }\n\n    if (this.__ownerID) {\n      this.size = this._origin = this._capacity = 0;\n      this._level = SHIFT;\n      this._root = this._tail = null;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return emptyList();\n  };\n\n  List.prototype.push = function ()\n  /*...values*/\n  {\n    var values = arguments;\n    var oldSize = this.size;\n    return this.withMutations(function (list) {\n      setListBounds(list, 0, oldSize + values.length);\n\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(oldSize + ii, values[ii]);\n      }\n    });\n  };\n\n  List.prototype.pop = function () {\n    return setListBounds(this, 0, -1);\n  };\n\n  List.prototype.unshift = function ()\n  /*...values*/\n  {\n    var values = arguments;\n    return this.withMutations(function (list) {\n      setListBounds(list, -values.length);\n\n      for (var ii = 0; ii < values.length; ii++) {\n        list.set(ii, values[ii]);\n      }\n    });\n  };\n\n  List.prototype.shift = function () {\n    return setListBounds(this, 1);\n  }; // @pragma Composition\n\n\n  List.prototype.merge = function ()\n  /*...iters*/\n  {\n    return mergeIntoListWith(this, undefined, arguments);\n  };\n\n  List.prototype.mergeWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return mergeIntoListWith(this, merger, iters);\n  };\n\n  List.prototype.mergeDeep = function ()\n  /*...iters*/\n  {\n    return mergeIntoListWith(this, deepMerger, arguments);\n  };\n\n  List.prototype.mergeDeepWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return mergeIntoListWith(this, deepMergerWith(merger), iters);\n  };\n\n  List.prototype.setSize = function (size) {\n    return setListBounds(this, 0, size);\n  }; // @pragma Iteration\n\n\n  List.prototype.slice = function (begin, end) {\n    var size = this.size;\n\n    if (wholeSlice(begin, end, size)) {\n      return this;\n    }\n\n    return setListBounds(this, resolveBegin(begin, size), resolveEnd(end, size));\n  };\n\n  List.prototype.__iterator = function (type, reverse) {\n    var index = 0;\n    var values = iterateList(this, reverse);\n    return new Iterator(function () {\n      var value = values();\n      return value === DONE ? iteratorDone() : iteratorValue(type, index++, value);\n    });\n  };\n\n  List.prototype.__iterate = function (fn, reverse) {\n    var index = 0;\n    var values = iterateList(this, reverse);\n    var value;\n\n    while ((value = values()) !== DONE) {\n      if (fn(value, index++, this) === false) {\n        break;\n      }\n    }\n\n    return index;\n  };\n\n  List.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      return this;\n    }\n\n    return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n  };\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn = ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n  function VNode(array, ownerID) {\n    this.array = array;\n    this.ownerID = ownerID;\n  } // TODO: seems like these methods are very similar\n\n\n  VNode.prototype.removeBefore = function (ownerID, level, index) {\n    if (index === level ? 1 << level : 0 || this.array.length === 0) {\n      return this;\n    }\n\n    var originIndex = index >>> level & MASK;\n\n    if (originIndex >= this.array.length) {\n      return new VNode([], ownerID);\n    }\n\n    var removingFirst = originIndex === 0;\n    var newChild;\n\n    if (level > 0) {\n      var oldChild = this.array[originIndex];\n      newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n\n      if (newChild === oldChild && removingFirst) {\n        return this;\n      }\n    }\n\n    if (removingFirst && !newChild) {\n      return this;\n    }\n\n    var editable = editableVNode(this, ownerID);\n\n    if (!removingFirst) {\n      for (var ii = 0; ii < originIndex; ii++) {\n        editable.array[ii] = undefined;\n      }\n    }\n\n    if (newChild) {\n      editable.array[originIndex] = newChild;\n    }\n\n    return editable;\n  };\n\n  VNode.prototype.removeAfter = function (ownerID, level, index) {\n    if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n      return this;\n    }\n\n    var sizeIndex = index - 1 >>> level & MASK;\n\n    if (sizeIndex >= this.array.length) {\n      return this;\n    }\n\n    var newChild;\n\n    if (level > 0) {\n      var oldChild = this.array[sizeIndex];\n      newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n\n      if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n        return this;\n      }\n    }\n\n    var editable = editableVNode(this, ownerID);\n    editable.array.splice(sizeIndex + 1);\n\n    if (newChild) {\n      editable.array[sizeIndex] = newChild;\n    }\n\n    return editable;\n  };\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ? iterateLeaf(node, offset) : iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n\n      if (to > SIZE) {\n        to = SIZE;\n      }\n\n      return function () {\n        if (from === to) {\n          return DONE;\n        }\n\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : left - offset >> level;\n      var to = (right - offset >> level) + 1;\n\n      if (to > SIZE) {\n        to = SIZE;\n      }\n\n      return function () {\n        do {\n          if (values) {\n            var value = values();\n\n            if (value !== DONE) {\n              return value;\n            }\n\n            values = null;\n          }\n\n          if (from === to) {\n            return DONE;\n          }\n\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(array && array[idx], level - SHIFT, offset + (idx << level));\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index !== index) {\n      return list;\n    }\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function (list) {\n        index < 0 ? setListBounds(list, index).set(0, value) : setListBounds(list, 0, index + 1).set(index, value);\n      });\n    }\n\n    index += list._origin;\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = index >>> level & MASK;\n    var nodeHas = node && idx < node.array.length;\n\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n    newNode = editableVNode(node, ownerID);\n\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n\n    if (rawIndex < 1 << list._level + SHIFT) {\n      var node = list._root;\n      var level = list._level;\n\n      while (node && level > 0) {\n        node = node.array[rawIndex >>> level & MASK];\n        level -= SHIFT;\n      }\n\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n\n    if (end !== undefined) {\n      end = end | 0;\n    }\n\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    } // If it's going to end after it starts, it's empty.\n\n\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root; // New origin might need creating a higher root.\n\n    var offsetShift = 0;\n\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity); // New size might need creating a higher root.\n\n    while (newTailOffset >= 1 << newLevel + SHIFT) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    } // Locate or create the new tail.\n\n\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ? listNodeFor(list, newCapacity - 1) : newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail; // Merge Tail into tree.\n\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = oldTailOffset >>> level & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n\n      node.array[oldTailOffset >>> SHIFT & MASK] = oldTail;\n    } // If the size has been reduced, there's a chance the tail needs to be trimmed.\n\n\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    } // If the new origin is within the tail, then we do not need a root.\n\n\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin); // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0; // Identify the new top root node of the subtree of the old root.\n\n      while (newRoot) {\n        var beginIndex = newOrigin >>> newLevel & MASK;\n\n        if (beginIndex !== newTailOffset >>> newLevel & MASK) {\n          break;\n        }\n\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      } // Trim the new sides of the new root.\n\n\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n\n      if (!isIterable(value)) {\n        iter = iter.map(function (v) {\n          return fromJS(v);\n        });\n      }\n\n      iters.push(iter);\n    }\n\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : size - 1 >>> SHIFT << SHIFT;\n  }\n\n  createClass(OrderedMap, Map); // @pragma Construction\n\n  function OrderedMap(value) {\n    return value === null || value === undefined ? emptyOrderedMap() : isOrderedMap(value) ? value : emptyOrderedMap().withMutations(function (map) {\n      var iter = KeyedIterable(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v, k) {\n        return map.set(k, v);\n      });\n    });\n  }\n\n  OrderedMap.of = function ()\n  /*...values*/\n  {\n    return this(arguments);\n  };\n\n  OrderedMap.prototype.toString = function () {\n    return this.__toString('OrderedMap {', '}');\n  }; // @pragma Access\n\n\n  OrderedMap.prototype.get = function (k, notSetValue) {\n    var index = this._map.get(k);\n\n    return index !== undefined ? this._list.get(index)[1] : notSetValue;\n  }; // @pragma Modification\n\n\n  OrderedMap.prototype.clear = function () {\n    if (this.size === 0) {\n      return this;\n    }\n\n    if (this.__ownerID) {\n      this.size = 0;\n\n      this._map.clear();\n\n      this._list.clear();\n\n      return this;\n    }\n\n    return emptyOrderedMap();\n  };\n\n  OrderedMap.prototype.set = function (k, v) {\n    return updateOrderedMap(this, k, v);\n  };\n\n  OrderedMap.prototype.remove = function (k) {\n    return updateOrderedMap(this, k, NOT_SET);\n  };\n\n  OrderedMap.prototype.wasAltered = function () {\n    return this._map.wasAltered() || this._list.wasAltered();\n  };\n\n  OrderedMap.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return this._list.__iterate(function (entry) {\n      return entry && fn(entry[1], entry[0], this$0);\n    }, reverse);\n  };\n\n  OrderedMap.prototype.__iterator = function (type, reverse) {\n    return this._list.fromEntrySeq().__iterator(type, reverse);\n  };\n\n  OrderedMap.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n\n    var newMap = this._map.__ensureOwner(ownerID);\n\n    var newList = this._list.__ensureOwner(ownerID);\n\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      this._list = newList;\n      return this;\n    }\n\n    return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n  };\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n\n    if (v === NOT_SET) {\n      // removed\n      if (!has) {\n        return omap;\n      }\n\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function (entry, idx) {\n          return entry !== undefined && i !== idx;\n        });\n        newMap = newList.toKeyedSeq().map(function (entry) {\n          return entry[0];\n        }).flip().toMap();\n\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n\n  function ToKeyedSequence(indexed, useKeys) {\n    this._iter = indexed;\n    this._useKeys = useKeys;\n    this.size = indexed.size;\n  }\n\n  ToKeyedSequence.prototype.get = function (key, notSetValue) {\n    return this._iter.get(key, notSetValue);\n  };\n\n  ToKeyedSequence.prototype.has = function (key) {\n    return this._iter.has(key);\n  };\n\n  ToKeyedSequence.prototype.valueSeq = function () {\n    return this._iter.valueSeq();\n  };\n\n  ToKeyedSequence.prototype.reverse = function () {\n    var this$0 = this;\n    var reversedSequence = reverseFactory(this, true);\n\n    if (!this._useKeys) {\n      reversedSequence.valueSeq = function () {\n        return this$0._iter.toSeq().reverse();\n      };\n    }\n\n    return reversedSequence;\n  };\n\n  ToKeyedSequence.prototype.map = function (mapper, context) {\n    var this$0 = this;\n    var mappedSequence = mapFactory(this, mapper, context);\n\n    if (!this._useKeys) {\n      mappedSequence.valueSeq = function () {\n        return this$0._iter.toSeq().map(mapper, context);\n      };\n    }\n\n    return mappedSequence;\n  };\n\n  ToKeyedSequence.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    var ii;\n    return this._iter.__iterate(this._useKeys ? function (v, k) {\n      return fn(v, k, this$0);\n    } : (ii = reverse ? resolveSize(this) : 0, function (v) {\n      return fn(v, reverse ? --ii : ii++, this$0);\n    }), reverse);\n  };\n\n  ToKeyedSequence.prototype.__iterator = function (type, reverse) {\n    if (this._useKeys) {\n      return this._iter.__iterator(type, reverse);\n    }\n\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n\n    var ii = reverse ? resolveSize(this) : 0;\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n    });\n  };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n  createClass(ToIndexedSequence, IndexedSeq);\n\n  function ToIndexedSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n\n  ToIndexedSequence.prototype.includes = function (value) {\n    return this._iter.includes(value);\n  };\n\n  ToIndexedSequence.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    var iterations = 0;\n    return this._iter.__iterate(function (v) {\n      return fn(v, iterations++, this$0);\n    }, reverse);\n  };\n\n  ToIndexedSequence.prototype.__iterator = function (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n\n    var iterations = 0;\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, iterations++, step.value, step);\n    });\n  };\n\n  createClass(ToSetSequence, SetSeq);\n\n  function ToSetSequence(iter) {\n    this._iter = iter;\n    this.size = iter.size;\n  }\n\n  ToSetSequence.prototype.has = function (key) {\n    return this._iter.includes(key);\n  };\n\n  ToSetSequence.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return this._iter.__iterate(function (v) {\n      return fn(v, v, this$0);\n    }, reverse);\n  };\n\n  ToSetSequence.prototype.__iterator = function (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n\n    return new Iterator(function () {\n      var step = iterator.next();\n      return step.done ? step : iteratorValue(type, step.value, step.value, step);\n    });\n  };\n\n  createClass(FromEntriesSequence, KeyedSeq);\n\n  function FromEntriesSequence(entries) {\n    this._iter = entries;\n    this.size = entries.size;\n  }\n\n  FromEntriesSequence.prototype.entrySeq = function () {\n    return this._iter.toSeq();\n  };\n\n  FromEntriesSequence.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return this._iter.__iterate(function (entry) {\n      // Check if entry exists first so array access doesn't throw for holes\n      // in the parent iteration.\n      if (entry) {\n        validateEntry(entry);\n        var indexedIterable = isIterable(entry);\n        return fn(indexedIterable ? entry.get(1) : entry[1], indexedIterable ? entry.get(0) : entry[0], this$0);\n      }\n    }, reverse);\n  };\n\n  FromEntriesSequence.prototype.__iterator = function (type, reverse) {\n    var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n\n    return new Iterator(function () {\n      while (true) {\n        var step = iterator.next();\n\n        if (step.done) {\n          return step;\n        }\n\n        var entry = step.value; // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return iteratorValue(type, indexedIterable ? entry.get(0) : entry[0], indexedIterable ? entry.get(1) : entry[1], step);\n        }\n      }\n    });\n  };\n\n  ToIndexedSequence.prototype.cacheResult = ToKeyedSequence.prototype.cacheResult = ToSetSequence.prototype.cacheResult = FromEntriesSequence.prototype.cacheResult = cacheResultThrough;\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n\n    flipSequence.flip = function () {\n      return iterable;\n    };\n\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n\n      reversedSequence.flip = function () {\n        return iterable.reverse();\n      };\n\n      return reversedSequence;\n    };\n\n    flipSequence.has = function (key) {\n      return iterable.includes(key);\n    };\n\n    flipSequence.includes = function (key) {\n      return iterable.has(key);\n    };\n\n    flipSequence.cacheResult = cacheResultThrough;\n\n    flipSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      return iterable.__iterate(function (v, k) {\n        return fn(k, v, this$0) !== false;\n      }, reverse);\n    };\n\n    flipSequence.__iteratorUncached = function (type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n\n        return new Iterator(function () {\n          var step = iterator.next();\n\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n\n          return step;\n        });\n      }\n\n      return iterable.__iterator(type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES, reverse);\n    };\n\n    return flipSequence;\n  }\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n\n    mappedSequence.has = function (key) {\n      return iterable.has(key);\n    };\n\n    mappedSequence.get = function (key, notSetValue) {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ? notSetValue : mapper.call(context, v, key, iterable);\n    };\n\n    mappedSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      return iterable.__iterate(function (v, k, c) {\n        return fn(mapper.call(context, v, k, c), k, this$0) !== false;\n      }, reverse);\n    };\n\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n\n      return new Iterator(function () {\n        var step = iterator.next();\n\n        if (step.done) {\n          return step;\n        }\n\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(type, key, mapper.call(context, entry[1], key, iterable), step);\n      });\n    };\n\n    return mappedSequence;\n  }\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n\n    reversedSequence.reverse = function () {\n      return iterable;\n    };\n\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n\n        flipSequence.reverse = function () {\n          return iterable.flip();\n        };\n\n        return flipSequence;\n      };\n    }\n\n    reversedSequence.get = function (key, notSetValue) {\n      return iterable.get(useKeys ? key : -1 - key, notSetValue);\n    };\n\n    reversedSequence.has = function (key) {\n      return iterable.has(useKeys ? key : -1 - key);\n    };\n\n    reversedSequence.includes = function (value) {\n      return iterable.includes(value);\n    };\n\n    reversedSequence.cacheResult = cacheResultThrough;\n\n    reversedSequence.__iterate = function (fn, reverse) {\n      var this$0 = this;\n      return iterable.__iterate(function (v, k) {\n        return fn(v, k, this$0);\n      }, !reverse);\n    };\n\n    reversedSequence.__iterator = function (type, reverse) {\n      return iterable.__iterator(type, !reverse);\n    };\n\n    return reversedSequence;\n  }\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n\n    if (useKeys) {\n      filterSequence.has = function (key) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n\n      filterSequence.get = function (key, notSetValue) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ? v : notSetValue;\n      };\n    }\n\n    filterSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      var iterations = 0;\n\n      iterable.__iterate(function (v, k, c) {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n\n      return iterations;\n    };\n\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n\n      var iterations = 0;\n      return new Iterator(function () {\n        while (true) {\n          var step = iterator.next();\n\n          if (step.done) {\n            return step;\n          }\n\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    };\n\n    return filterSequence;\n  }\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n\n    iterable.__iterate(function (v, k) {\n      groups.update(grouper.call(context, v, k, iterable), 0, function (a) {\n        return a + 1;\n      });\n    });\n\n    return groups.asImmutable();\n  }\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n\n    iterable.__iterate(function (v, k) {\n      groups.update(grouper.call(context, v, k, iterable), function (a) {\n        return a = a || [], a.push(isKeyedIter ? [k, v] : v), a;\n      });\n    });\n\n    var coerce = iterableClass(iterable);\n    return groups.map(function (arr) {\n      return reify(iterable, coerce(arr));\n    });\n  }\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size; // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n\n    if (end !== undefined) {\n      end = end | 0;\n    }\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize); // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    } // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n\n\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n\n    var sliceSeq = makeSequence(iterable); // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ? iterable.get(index + resolvedBegin, notSetValue) : notSetValue;\n      };\n    }\n\n    sliceSeq.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n\n      if (sliceSize === 0) {\n        return 0;\n      }\n\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n\n      iterable.__iterate(function (v, k) {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false && iterations !== sliceSize;\n        }\n      });\n\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function (type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      } // Don't bother instantiating parent iterator if taking 0.\n\n\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function () {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n\n        var step = iterator.next();\n\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    };\n\n    return sliceSeq;\n  }\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n\n    takeSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n\n      var iterations = 0;\n\n      iterable.__iterate(function (v, k, c) {\n        return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0);\n      });\n\n      return iterations;\n    };\n\n    takeSequence.__iteratorUncached = function (type, reverse) {\n      var this$0 = this;\n\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n\n      var iterating = true;\n      return new Iterator(function () {\n        if (!iterating) {\n          return iteratorDone();\n        }\n\n        var step = iterator.next();\n\n        if (step.done) {\n          return step;\n        }\n\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n\n        return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n      });\n    };\n\n    return takeSequence;\n  }\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n\n    skipSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n\n      var isSkipping = true;\n      var iterations = 0;\n\n      iterable.__iterate(function (v, k, c) {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n\n      return iterations;\n    };\n\n    skipSequence.__iteratorUncached = function (type, reverse) {\n      var this$0 = this;\n\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function () {\n        var step, k, v;\n\n        do {\n          step = iterator.next();\n\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n\n        return type === ITERATE_ENTRIES ? step : iteratorValue(type, k, v, step);\n      });\n    };\n\n    return skipSequence;\n  }\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function (v) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ? keyedSeqFromValue(v) : indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n\n      return v;\n    }).filter(function (v) {\n      return v.size !== 0;\n    });\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n\n      if (singleton === iterable || isKeyedIterable && isKeyed(singleton) || isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(function (sum, seq) {\n      if (sum !== undefined) {\n        var size = seq.size;\n\n        if (size !== undefined) {\n          return sum + size;\n        }\n      }\n    }, 0);\n    return concatSeq;\n  }\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n\n    flatSequence.__iterateUncached = function (fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n\n      function flatDeep(iter, currentDepth) {\n        var this$0 = this;\n\n        iter.__iterate(function (v, k) {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n\n          return !stopped;\n        }, reverse);\n      }\n\n      flatDeep(iterable, 0);\n      return iterations;\n    };\n\n    flatSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function () {\n        while (iterator) {\n          var step = iterator.next();\n\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n\n          var v = step.value;\n\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n\n        return iteratorDone();\n      });\n    };\n\n    return flatSequence;\n  }\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(function (v, k) {\n      return coerce(mapper.call(context, v, k, iterable));\n    }).flatten(true);\n  }\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 - 1;\n\n    interposedSequence.__iterateUncached = function (fn, reverse) {\n      var this$0 = this;\n      var iterations = 0;\n\n      iterable.__iterate(function (v, k) {\n        return (!iterations || fn(separator, iterations++, this$0) !== false) && fn(v, iterations++, this$0) !== false;\n      }, reverse);\n\n      return iterations;\n    };\n\n    interposedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n\n      var iterations = 0;\n      var step;\n      return new Iterator(function () {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n\n          if (step.done) {\n            return step;\n          }\n        }\n\n        return iterations % 2 ? iteratorValue(type, iterations++, separator) : iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n\n    return interposedSequence;\n  }\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(function (v, k) {\n      return [k, v, index++, mapper ? mapper(v, k, iterable) : v];\n    }).toArray();\n    entries.sort(function (a, b) {\n      return comparator(a[3], b[3]) || a[2] - b[2];\n    }).forEach(isKeyedIterable ? function (v, i) {\n      entries[i].length = 2;\n    } : function (v, i) {\n      entries[i] = v[1];\n    });\n    return isKeyedIterable ? KeyedSeq(entries) : isIndexed(iterable) ? IndexedSeq(entries) : SetSeq(entries);\n  }\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n\n    if (mapper) {\n      var entry = iterable.toSeq().map(function (v, k) {\n        return [v, mapper(v, k, iterable)];\n      }).reduce(function (a, b) {\n        return maxCompare(comparator, a[1], b[1]) ? b : a;\n      });\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function (a, b) {\n        return maxCompare(comparator, a, b) ? b : a;\n      });\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a); // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n\n    return comp === 0 && b !== a && (b === undefined || b === null || b !== b) || comp > 0;\n  }\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function (i) {\n      return i.size;\n    }).min(); // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n\n    zipSequence.__iterate = function (fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n\n      var step;\n      var iterations = 0;\n\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n\n      return iterations;\n    };\n\n    zipSequence.__iteratorUncached = function (type, reverse) {\n      var iterators = iters.map(function (i) {\n        return i = Iterable(i), getIterator(reverse ? i.reverse() : i);\n      });\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function () {\n        var steps;\n\n        if (!isDone) {\n          steps = iterators.map(function (i) {\n            return i.next();\n          });\n          isDone = steps.some(function (s) {\n            return s.done;\n          });\n        }\n\n        if (isDone) {\n          return iteratorDone();\n        }\n\n        return iteratorValue(type, iterations++, zipper.apply(null, steps.map(function (s) {\n          return s.value;\n        })));\n      });\n    };\n\n    return zipSequence;\n  } // #pragma Helper Functions\n\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable : isIndexed(iterable) ? IndexedIterable : SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create((isKeyed(iterable) ? KeyedSeq : isIndexed(iterable) ? IndexedSeq : SetSeq).prototype);\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n\n      iter = getIterator(Iterable(keyPath));\n    }\n\n    return iter;\n  }\n\n  createClass(Record, KeyedCollection);\n\n  function Record(defaultValues, name) {\n    var hasInitialized;\n\n    var RecordType = function Record(values) {\n      if (values instanceof RecordType) {\n        return values;\n      }\n\n      if (!(this instanceof RecordType)) {\n        return new RecordType(values);\n      }\n\n      if (!hasInitialized) {\n        hasInitialized = true;\n        var keys = Object.keys(defaultValues);\n        setProps(RecordTypePrototype, keys);\n        RecordTypePrototype.size = keys.length;\n        RecordTypePrototype._name = name;\n        RecordTypePrototype._keys = keys;\n        RecordTypePrototype._defaultValues = defaultValues;\n      }\n\n      this._map = Map(values);\n    };\n\n    var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n    RecordTypePrototype.constructor = RecordType;\n    return RecordType;\n  }\n\n  Record.prototype.toString = function () {\n    return this.__toString(recordName(this) + ' {', '}');\n  }; // @pragma Access\n\n\n  Record.prototype.has = function (k) {\n    return this._defaultValues.hasOwnProperty(k);\n  };\n\n  Record.prototype.get = function (k, notSetValue) {\n    if (!this.has(k)) {\n      return notSetValue;\n    }\n\n    var defaultVal = this._defaultValues[k];\n    return this._map ? this._map.get(k, defaultVal) : defaultVal;\n  }; // @pragma Modification\n\n\n  Record.prototype.clear = function () {\n    if (this.__ownerID) {\n      this._map && this._map.clear();\n      return this;\n    }\n\n    var RecordType = this.constructor;\n    return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n  };\n\n  Record.prototype.set = function (k, v) {\n    if (!this.has(k)) {\n      throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n    }\n\n    var newMap = this._map && this._map.set(k, v);\n\n    if (this.__ownerID || newMap === this._map) {\n      return this;\n    }\n\n    return makeRecord(this, newMap);\n  };\n\n  Record.prototype.remove = function (k) {\n    if (!this.has(k)) {\n      return this;\n    }\n\n    var newMap = this._map && this._map.remove(k);\n\n    if (this.__ownerID || newMap === this._map) {\n      return this;\n    }\n\n    return makeRecord(this, newMap);\n  };\n\n  Record.prototype.wasAltered = function () {\n    return this._map.wasAltered();\n  };\n\n  Record.prototype.__iterator = function (type, reverse) {\n    var this$0 = this;\n    return KeyedIterable(this._defaultValues).map(function (_, k) {\n      return this$0.get(k);\n    }).__iterator(type, reverse);\n  };\n\n  Record.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return KeyedIterable(this._defaultValues).map(function (_, k) {\n      return this$0.get(k);\n    }).__iterate(fn, reverse);\n  };\n\n  Record.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n\n    var newMap = this._map && this._map.__ensureOwner(ownerID);\n\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      return this;\n    }\n\n    return makeRecord(this, newMap, ownerID);\n  };\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn = RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {// Object.defineProperty failed. Probably IE8.\n    }\n  }\n\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function get() {\n        return this.get(name);\n      },\n      set: function set(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n\n  createClass(Set, SetCollection); // @pragma Construction\n\n  function Set(value) {\n    return value === null || value === undefined ? emptySet() : isSet(value) && !isOrdered(value) ? value : emptySet().withMutations(function (set) {\n      var iter = SetIterable(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v) {\n        return set.add(v);\n      });\n    });\n  }\n\n  Set.of = function ()\n  /*...values*/\n  {\n    return this(arguments);\n  };\n\n  Set.fromKeys = function (value) {\n    return this(KeyedIterable(value).keySeq());\n  };\n\n  Set.prototype.toString = function () {\n    return this.__toString('Set {', '}');\n  }; // @pragma Access\n\n\n  Set.prototype.has = function (value) {\n    return this._map.has(value);\n  }; // @pragma Modification\n\n\n  Set.prototype.add = function (value) {\n    return updateSet(this, this._map.set(value, true));\n  };\n\n  Set.prototype.remove = function (value) {\n    return updateSet(this, this._map.remove(value));\n  };\n\n  Set.prototype.clear = function () {\n    return updateSet(this, this._map.clear());\n  }; // @pragma Composition\n\n\n  Set.prototype.union = function () {\n    var iters = SLICE$0.call(arguments, 0);\n    iters = iters.filter(function (x) {\n      return x.size !== 0;\n    });\n\n    if (iters.length === 0) {\n      return this;\n    }\n\n    if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n      return this.constructor(iters[0]);\n    }\n\n    return this.withMutations(function (set) {\n      for (var ii = 0; ii < iters.length; ii++) {\n        SetIterable(iters[ii]).forEach(function (value) {\n          return set.add(value);\n        });\n      }\n    });\n  };\n\n  Set.prototype.intersect = function () {\n    var iters = SLICE$0.call(arguments, 0);\n\n    if (iters.length === 0) {\n      return this;\n    }\n\n    iters = iters.map(function (iter) {\n      return SetIterable(iter);\n    });\n    var originalSet = this;\n    return this.withMutations(function (set) {\n      originalSet.forEach(function (value) {\n        if (!iters.every(function (iter) {\n          return iter.includes(value);\n        })) {\n          set.remove(value);\n        }\n      });\n    });\n  };\n\n  Set.prototype.subtract = function () {\n    var iters = SLICE$0.call(arguments, 0);\n\n    if (iters.length === 0) {\n      return this;\n    }\n\n    iters = iters.map(function (iter) {\n      return SetIterable(iter);\n    });\n    var originalSet = this;\n    return this.withMutations(function (set) {\n      originalSet.forEach(function (value) {\n        if (iters.some(function (iter) {\n          return iter.includes(value);\n        })) {\n          set.remove(value);\n        }\n      });\n    });\n  };\n\n  Set.prototype.merge = function () {\n    return this.union.apply(this, arguments);\n  };\n\n  Set.prototype.mergeWith = function (merger) {\n    var iters = SLICE$0.call(arguments, 1);\n    return this.union.apply(this, iters);\n  };\n\n  Set.prototype.sort = function (comparator) {\n    // Late binding\n    return OrderedSet(sortFactory(this, comparator));\n  };\n\n  Set.prototype.sortBy = function (mapper, comparator) {\n    // Late binding\n    return OrderedSet(sortFactory(this, comparator, mapper));\n  };\n\n  Set.prototype.wasAltered = function () {\n    return this._map.wasAltered();\n  };\n\n  Set.prototype.__iterate = function (fn, reverse) {\n    var this$0 = this;\n    return this._map.__iterate(function (_, k) {\n      return fn(k, k, this$0);\n    }, reverse);\n  };\n\n  Set.prototype.__iterator = function (type, reverse) {\n    return this._map.map(function (_, k) {\n      return k;\n    }).__iterator(type, reverse);\n  };\n\n  Set.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n\n    var newMap = this._map.__ensureOwner(ownerID);\n\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this._map = newMap;\n      return this;\n    }\n\n    return this.__make(newMap, ownerID);\n  };\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n\n    return newMap === set._map ? set : newMap.size === 0 ? set.__empty() : set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set); // @pragma Construction\n\n  function OrderedSet(value) {\n    return value === null || value === undefined ? emptyOrderedSet() : isOrderedSet(value) ? value : emptyOrderedSet().withMutations(function (set) {\n      var iter = SetIterable(value);\n      assertNotInfinite(iter.size);\n      iter.forEach(function (v) {\n        return set.add(v);\n      });\n    });\n  }\n\n  OrderedSet.of = function ()\n  /*...values*/\n  {\n    return this(arguments);\n  };\n\n  OrderedSet.fromKeys = function (value) {\n    return this(KeyedIterable(value).keySeq());\n  };\n\n  OrderedSet.prototype.toString = function () {\n    return this.__toString('OrderedSet {', '}');\n  };\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Stack, IndexedCollection); // @pragma Construction\n\n  function Stack(value) {\n    return value === null || value === undefined ? emptyStack() : isStack(value) ? value : emptyStack().unshiftAll(value);\n  }\n\n  Stack.of = function ()\n  /*...values*/\n  {\n    return this(arguments);\n  };\n\n  Stack.prototype.toString = function () {\n    return this.__toString('Stack [', ']');\n  }; // @pragma Access\n\n\n  Stack.prototype.get = function (index, notSetValue) {\n    var head = this._head;\n    index = wrapIndex(this, index);\n\n    while (head && index--) {\n      head = head.next;\n    }\n\n    return head ? head.value : notSetValue;\n  };\n\n  Stack.prototype.peek = function () {\n    return this._head && this._head.value;\n  }; // @pragma Modification\n\n\n  Stack.prototype.push = function ()\n  /*...values*/\n  {\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    var newSize = this.size + arguments.length;\n    var head = this._head;\n\n    for (var ii = arguments.length - 1; ii >= 0; ii--) {\n      head = {\n        value: arguments[ii],\n        next: head\n      };\n    }\n\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return makeStack(newSize, head);\n  };\n\n  Stack.prototype.pushAll = function (iter) {\n    iter = IndexedIterable(iter);\n\n    if (iter.size === 0) {\n      return this;\n    }\n\n    assertNotInfinite(iter.size);\n    var newSize = this.size;\n    var head = this._head;\n    iter.reverse().forEach(function (value) {\n      newSize++;\n      head = {\n        value: value,\n        next: head\n      };\n    });\n\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return makeStack(newSize, head);\n  };\n\n  Stack.prototype.pop = function () {\n    return this.slice(1);\n  };\n\n  Stack.prototype.unshift = function ()\n  /*...values*/\n  {\n    return this.push.apply(this, arguments);\n  };\n\n  Stack.prototype.unshiftAll = function (iter) {\n    return this.pushAll(iter);\n  };\n\n  Stack.prototype.shift = function () {\n    return this.pop.apply(this, arguments);\n  };\n\n  Stack.prototype.clear = function () {\n    if (this.size === 0) {\n      return this;\n    }\n\n    if (this.__ownerID) {\n      this.size = 0;\n      this._head = undefined;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return emptyStack();\n  };\n\n  Stack.prototype.slice = function (begin, end) {\n    if (wholeSlice(begin, end, this.size)) {\n      return this;\n    }\n\n    var resolvedBegin = resolveBegin(begin, this.size);\n    var resolvedEnd = resolveEnd(end, this.size);\n\n    if (resolvedEnd !== this.size) {\n      // super.slice(begin, end);\n      return IndexedCollection.prototype.slice.call(this, begin, end);\n    }\n\n    var newSize = this.size - resolvedBegin;\n    var head = this._head;\n\n    while (resolvedBegin--) {\n      head = head.next;\n    }\n\n    if (this.__ownerID) {\n      this.size = newSize;\n      this._head = head;\n      this.__hash = undefined;\n      this.__altered = true;\n      return this;\n    }\n\n    return makeStack(newSize, head);\n  }; // @pragma Mutability\n\n\n  Stack.prototype.__ensureOwner = function (ownerID) {\n    if (ownerID === this.__ownerID) {\n      return this;\n    }\n\n    if (!ownerID) {\n      this.__ownerID = ownerID;\n      this.__altered = false;\n      return this;\n    }\n\n    return makeStack(this.size, this._head, ownerID, this.__hash);\n  }; // @pragma Iteration\n\n\n  Stack.prototype.__iterate = function (fn, reverse) {\n    if (reverse) {\n      return this.reverse().__iterate(fn);\n    }\n\n    var iterations = 0;\n    var node = this._head;\n\n    while (node) {\n      if (fn(node.value, iterations++, this) === false) {\n        break;\n      }\n\n      node = node.next;\n    }\n\n    return iterations;\n  };\n\n  Stack.prototype.__iterator = function (type, reverse) {\n    if (reverse) {\n      return this.reverse().__iterator(type);\n    }\n\n    var iterations = 0;\n    var node = this._head;\n    return new Iterator(function () {\n      if (node) {\n        var value = node.value;\n        node = node.next;\n        return iteratorValue(type, iterations++, value);\n      }\n\n      return iteratorDone();\n    });\n  };\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n  /**\n   * Contributes additional methods to a constructor\n   */\n\n\n  function mixin(ctor, methods) {\n    var keyCopier = function keyCopier(key) {\n      ctor.prototype[key] = methods[key];\n    };\n\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols && Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n  mixin(Iterable, {\n    // ### Conversion to other types\n    toArray: function toArray() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n\n      this.valueSeq().__iterate(function (v, i) {\n        array[i] = v;\n      });\n\n      return array;\n    },\n    toIndexedSeq: function toIndexedSeq() {\n      return new ToIndexedSequence(this);\n    },\n    toJS: function toJS() {\n      return this.toSeq().map(function (value) {\n        return value && typeof value.toJS === 'function' ? value.toJS() : value;\n      }).__toJS();\n    },\n    toJSON: function toJSON() {\n      return this.toSeq().map(function (value) {\n        return value && typeof value.toJSON === 'function' ? value.toJSON() : value;\n      }).__toJS();\n    },\n    toKeyedSeq: function toKeyedSeq() {\n      return new ToKeyedSequence(this, true);\n    },\n    toMap: function toMap() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n    toObject: function toObject() {\n      assertNotInfinite(this.size);\n      var object = {};\n\n      this.__iterate(function (v, k) {\n        object[k] = v;\n      });\n\n      return object;\n    },\n    toOrderedMap: function toOrderedMap() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n    toOrderedSet: function toOrderedSet() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n    toSet: function toSet() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n    toSetSeq: function toSetSeq() {\n      return new ToSetSequence(this);\n    },\n    toSeq: function toSeq() {\n      return isIndexed(this) ? this.toIndexedSeq() : isKeyed(this) ? this.toKeyedSeq() : this.toSetSeq();\n    },\n    toStack: function toStack() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n    toList: function toList() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n    // ### Common JavaScript methods and properties\n    toString: function toString() {\n      return '[Iterable]';\n    },\n    __toString: function __toString(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n    // ### ES6 Collection methods (ES6 Array and Map)\n    concat: function concat() {\n      var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n    includes: function includes(searchValue) {\n      return this.some(function (value) {\n        return is(value, searchValue);\n      });\n    },\n    entries: function entries() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n    every: function every(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n\n      this.__iterate(function (v, k, c) {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n\n      return returnValue;\n    },\n    filter: function filter(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n    find: function find(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n    findEntry: function findEntry(predicate, context) {\n      var found;\n\n      this.__iterate(function (v, k, c) {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n\n      return found;\n    },\n    findLastEntry: function findLastEntry(predicate, context) {\n      return this.toSeq().reverse().findEntry(predicate, context);\n    },\n    forEach: function forEach(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n    join: function join(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n\n      this.__iterate(function (v) {\n        isFirst ? isFirst = false : joined += separator;\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n\n      return joined;\n    },\n    keys: function keys() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n    map: function map(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n    reduce: function reduce(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n\n      this.__iterate(function (v, k, c) {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n\n      return reduction;\n    },\n    reduceRight: function reduceRight(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n    reverse: function reverse() {\n      return reify(this, reverseFactory(this, true));\n    },\n    slice: function slice(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n    some: function some(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n    sort: function sort(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n    values: function values() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n    // ### More sequential methods\n    butLast: function butLast() {\n      return this.slice(0, -1);\n    },\n    isEmpty: function isEmpty() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function () {\n        return true;\n      });\n    },\n    count: function count(predicate, context) {\n      return ensureSize(predicate ? this.toSeq().filter(predicate, context) : this);\n    },\n    countBy: function countBy(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n    equals: function equals(other) {\n      return deepEqual(this, other);\n    },\n    entrySeq: function entrySeq() {\n      var iterable = this;\n\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n\n      entriesSequence.fromEntrySeq = function () {\n        return iterable.toSeq();\n      };\n\n      return entriesSequence;\n    },\n    filterNot: function filterNot(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n    findLast: function findLast(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n    first: function first() {\n      return this.find(returnTrue);\n    },\n    flatMap: function flatMap(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n    flatten: function flatten(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n    fromEntrySeq: function fromEntrySeq() {\n      return new FromEntriesSequence(this);\n    },\n    get: function get(searchKey, notSetValue) {\n      return this.find(function (_, key) {\n        return is(key, searchKey);\n      }, undefined, notSetValue);\n    },\n    getIn: function getIn(searchKeyPath, notSetValue) {\n      var nested = this; // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n\n      var iter = forceIterator(searchKeyPath);\n      var step;\n\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n\n      return nested;\n    },\n    groupBy: function groupBy(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n    has: function has(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n    hasIn: function hasIn(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n    isSubset: function isSubset(iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function (value) {\n        return iter.includes(value);\n      });\n    },\n    isSuperset: function isSuperset(iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n    keySeq: function keySeq() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n    last: function last() {\n      return this.toSeq().reverse().first();\n    },\n    max: function max(comparator) {\n      return maxFactory(this, comparator);\n    },\n    maxBy: function maxBy(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n    min: function min(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n    minBy: function minBy(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n    rest: function rest() {\n      return this.slice(1);\n    },\n    skip: function skip(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n    skipLast: function skipLast(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n    skipWhile: function skipWhile(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n    skipUntil: function skipUntil(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n    sortBy: function sortBy(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n    take: function take(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n    takeLast: function takeLast(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n    takeWhile: function takeWhile(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n    takeUntil: function takeUntil(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n    valueSeq: function valueSeq() {\n      return this.toIndexedSeq();\n    },\n    // ### Hashable Object\n    hashCode: function hashCode() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    } // ### Internal\n    // abstract __iterate(fn, reverse)\n    // abstract __iterator(type, reverse)\n\n  }); // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n\n  IterablePrototype.inspect = IterablePrototype.toSource = function () {\n    return this.toString();\n  };\n\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes; // Temporary warning about using length\n\n  (function () {\n    try {\n      Object.defineProperty(IterablePrototype, 'length', {\n        get: function get() {\n          if (!Iterable.noLengthWarning) {\n            var stack;\n\n            try {\n              throw new Error();\n            } catch (error) {\n              stack = error.stack;\n            }\n\n            if (stack.indexOf('_wrapObject') === -1) {\n              console && console.warn && console.warn('iterable.length has been deprecated, ' + 'use iterable.size or iterable.count(). ' + 'This warning will become a silent error in a future version. ' + stack);\n              return this.size;\n            }\n          }\n        }\n      });\n    } catch (e) {}\n  })();\n\n  mixin(KeyedIterable, {\n    // ### More sequential methods\n    flip: function flip() {\n      return reify(this, flipFactory(this));\n    },\n    findKey: function findKey(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n    findLastKey: function findLastKey(predicate, context) {\n      return this.toSeq().reverse().findKey(predicate, context);\n    },\n    keyOf: function keyOf(searchValue) {\n      return this.findKey(function (value) {\n        return is(value, searchValue);\n      });\n    },\n    lastKeyOf: function lastKeyOf(searchValue) {\n      return this.findLastKey(function (value) {\n        return is(value, searchValue);\n      });\n    },\n    mapEntries: function mapEntries(mapper, context) {\n      var this$0 = this;\n      var iterations = 0;\n      return reify(this, this.toSeq().map(function (v, k) {\n        return mapper.call(context, [k, v], iterations++, this$0);\n      }).fromEntrySeq());\n    },\n    mapKeys: function mapKeys(mapper, context) {\n      var this$0 = this;\n      return reify(this, this.toSeq().flip().map(function (k, v) {\n        return mapper.call(context, k, v, this$0);\n      }).flip());\n    }\n  });\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n\n  KeyedIterablePrototype.__toStringMapper = function (v, k) {\n    return JSON.stringify(k) + ': ' + quoteString(v);\n  };\n\n  mixin(IndexedIterable, {\n    // ### Conversion to other types\n    toKeyedSeq: function toKeyedSeq() {\n      return new ToKeyedSequence(this, false);\n    },\n    // ### ES6 Collection methods (ES6 Array and Map)\n    filter: function filter(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n    findIndex: function findIndex(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n    indexOf: function indexOf(searchValue) {\n      var key = this.toKeyedSeq().keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n    lastIndexOf: function lastIndexOf(searchValue) {\n      var key = this.toKeyedSeq().reverse().keyOf(searchValue);\n      return key === undefined ? -1 : key; // var index =\n      // return this.toSeq().reverse().indexOf(searchValue);\n    },\n    reverse: function reverse() {\n      return reify(this, reverseFactory(this, false));\n    },\n    slice: function slice(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n    splice: function splice(index, removeNum\n    /*, ...values*/\n    ) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n\n      if (numArgs === 0 || numArgs === 2 && !removeNum) {\n        return this;\n      } // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n\n\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(this, numArgs === 1 ? spliced : spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum)));\n    },\n    // ### More collection methods\n    findLastIndex: function findLastIndex(predicate, context) {\n      var key = this.toKeyedSeq().findLastKey(predicate, context);\n      return key === undefined ? -1 : key;\n    },\n    first: function first() {\n      return this.get(0);\n    },\n    flatten: function flatten(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n    get: function get(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return index < 0 || this.size === Infinity || this.size !== undefined && index > this.size ? notSetValue : this.find(function (_, key) {\n        return key === index;\n      }, undefined, notSetValue);\n    },\n    has: function has(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ? this.size === Infinity || index < this.size : this.indexOf(index) !== -1);\n    },\n    interpose: function interpose(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n    interleave: function interleave()\n    /*...iterables*/\n    {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n\n      return reify(this, interleaved);\n    },\n    last: function last() {\n      return this.get(-1);\n    },\n    skipWhile: function skipWhile(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n    zip: function zip()\n    /*, ...iterables */\n    {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n    zipWith: function zipWith(zipper\n    /*, ...iterables */\n    ) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n  });\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n  mixin(SetIterable, {\n    // ### ES6 Collection methods (ES6 Array and Map)\n    get: function get(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n    includes: function includes(value) {\n      return this.has(value);\n    },\n    // ### More sequential methods\n    keySeq: function keySeq() {\n      return this.valueSeq();\n    }\n  });\n  SetIterable.prototype.has = IterablePrototype.includes; // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype); // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function () {\n      return !predicate.apply(this, arguments);\n    };\n  }\n\n  function neg(predicate) {\n    return function () {\n      return -predicate.apply(this, arguments);\n    };\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : value;\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n\n    var size = iterable.__iterate(keyed ? ordered ? function (v, k) {\n      h = 31 * h + hashMerge(hash(v), hash(k)) | 0;\n    } : function (v, k) {\n      h = h + hashMerge(hash(v), hash(k)) | 0;\n    } : ordered ? function (v) {\n      h = 31 * h + hash(v) | 0;\n    } : function (v) {\n      h = h + hash(v) | 0;\n    });\n\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n    Iterable: Iterable,\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n    is: is,\n    fromJS: fromJS\n  };\n  return Immutable;\n});","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/immutable/dist/immutable.js"],"names":["global","factory","exports","module","define","amd","Immutable","SLICE$0","Array","prototype","slice","createClass","ctor","superClass","Object","create","constructor","Iterable","value","isIterable","Seq","KeyedIterable","isKeyed","KeyedSeq","IndexedIterable","isIndexed","IndexedSeq","SetIterable","isAssociative","SetSeq","maybeIterable","IS_ITERABLE_SENTINEL","maybeKeyed","IS_KEYED_SENTINEL","maybeIndexed","IS_INDEXED_SENTINEL","maybeAssociative","isOrdered","maybeOrdered","IS_ORDERED_SENTINEL","Keyed","Indexed","Set","DELETE","SHIFT","SIZE","MASK","NOT_SET","CHANGE_LENGTH","DID_ALTER","MakeRef","ref","SetRef","OwnerID","arrCopy","arr","offset","len","Math","max","length","newArr","ii","ensureSize","iter","size","undefined","__iterate","returnTrue","wrapIndex","index","uint32Index","NaN","wholeSlice","begin","end","resolveBegin","resolveIndex","resolveEnd","defaultIndex","min","ITERATE_KEYS","ITERATE_VALUES","ITERATE_ENTRIES","REAL_ITERATOR_SYMBOL","Symbol","iterator","FAUX_ITERATOR_SYMBOL","ITERATOR_SYMBOL","Iterator","next","toString","KEYS","VALUES","ENTRIES","inspect","toSource","iteratorValue","type","k","v","iteratorResult","done","iteratorDone","hasIterator","getIteratorFn","isIterator","maybeIterator","getIterator","iterable","iteratorFn","call","isArrayLike","emptySequence","toSeq","seqFromValue","of","arguments","__toString","cacheResult","_cache","__iterateUncached","entrySeq","toArray","fn","reverse","seqIterate","__iterator","seqIterator","toKeyedSeq","fromEntrySeq","keyedSeqFromValue","indexedSeqFromValue","toIndexedSeq","toSetSeq","isSeq","IS_SEQ_SENTINEL","ArraySeq","array","_array","get","notSetValue","has","maxIndex","ObjectSeq","object","keys","_object","_keys","key","hasOwnProperty","IterableSeq","_iterable","iterations","step","__iteratorUncached","IteratorSeq","_iterator","_iteratorCache","cache","val","maybeSeq","EMPTY_SEQ","seq","isArray","TypeError","maybeIndexedSeqFromValue","useKeys","entry","fromJS","json","converter","fromJSWith","fromJSDefault","parentJSON","map","isPlainObj","toList","toMap","is","valueA","valueB","valueOf","equals","deepEqual","a","b","__hash","notAssociative","entries","every","flipped","_","allEqual","bSize","Repeat","times","_value","Infinity","EMPTY_REPEAT","includes","searchValue","indexOf","lastIndexOf","this$0","other","invariant","condition","error","Error","Range","start","abs","_start","_end","_step","ceil","EMPTY_RANGE","possibleIndex","floor","offsetValue","Collection","KeyedCollection","IndexedCollection","SetCollection","imul","c","d","smi","i32","hash","o","h","STRING_HASH_CACHE_MIN_STRLEN","cachedHashString","hashString","hashCode","hashJSObj","string","stringHashCache","STRING_HASH_CACHE_SIZE","STRING_HASH_CACHE_MAX_SIZE","charCodeAt","obj","usingWeakMap","weakMap","UID_HASH_KEY","canDefineProperty","propertyIsEnumerable","getIENodeHash","objHashUID","set","isExtensible","defineProperty","apply","nodeType","e","node","uniqueID","documentElement","WeakMap","assertNotInfinite","Map","emptyMap","isMap","withMutations","forEach","_root","updateMap","setIn","keyPath","updateIn","remove","deleteIn","update","updater","updatedValue","updateInDeepMap","forceIterator","clear","__ownerID","__altered","merge","mergeIntoMapWith","mergeWith","merger","iters","mergeIn","m","mergeDeep","deepMerger","mergeDeepWith","deepMergerWith","mergeDeepIn","sort","comparator","OrderedMap","sortFactory","sortBy","mapper","mutable","asMutable","wasAltered","__ensureOwner","asImmutable","MapIterator","iterate","ownerID","makeMap","maybeMap","IS_MAP_SENTINEL","MapPrototype","removeIn","ArrayMapNode","shift","keyHash","didChangeSize","didAlter","removed","idx","exists","MAX_ARRAY_MAP_SIZE","createNodes","isEditable","newEntries","pop","push","BitmapIndexedNode","bitmap","nodes","bit","popCount","keyHashFrag","newNode","updateNode","MAX_BITMAP_INDEXED_SIZE","expandNodes","isLeafNode","newBitmap","newNodes","spliceOut","spliceIn","HashArrayMapNode","count","newCount","MIN_HASH_ARRAY_MAP_SIZE","packNodes","HashCollisionNode","mergeIntoNode","ValueNode","keyMatch","_type","_reverse","_stack","mapIteratorFrame","stack","mapIteratorValue","subNode","__prev","prev","root","EMPTY_MAP","newRoot","newSize","idx1","idx2","excluding","packedII","packedNodes","including","expandedNodes","iterables","mergeIntoCollectionWith","existing","nextValue","collection","filter","x","mergeIntoMap","keyPathIter","isNotSet","existingValue","newValue","nextExisting","nextUpdated","canEdit","newArray","newLen","after","List","empty","emptyList","isList","makeList","VNode","list","setSize","i","_origin","listNodeFor","updateList","splice","insert","_capacity","_level","_tail","values","oldSize","setListBounds","unshift","mergeIntoListWith","iterateList","DONE","maybeList","IS_LIST_SENTINEL","ListPrototype","removeBefore","level","originIndex","removingFirst","newChild","oldChild","editable","editableVNode","removeAfter","sizeIndex","left","right","tailPos","getTailOffset","tail","iterateNodeOrLeaf","iterateLeaf","iterateNode","from","to","origin","capacity","EMPTY_LIST","newTail","updateVNode","nodeHas","lowerNode","newLowerNode","rawIndex","owner","oldOrigin","oldCapacity","newOrigin","newCapacity","newLevel","offsetShift","oldTailOffset","newTailOffset","oldTail","beginIndex","maxSize","emptyOrderedMap","isOrderedMap","_map","_list","updateOrderedMap","newMap","newList","makeOrderedMap","maybeOrderedMap","omap","EMPTY_ORDERED_MAP","flip","ToKeyedSequence","indexed","_iter","_useKeys","valueSeq","reversedSequence","reverseFactory","context","mappedSequence","mapFactory","resolveSize","ToIndexedSequence","ToSetSequence","FromEntriesSequence","validateEntry","indexedIterable","cacheResultThrough","flipFactory","flipSequence","makeSequence","filterFactory","predicate","filterSequence","countByFactory","grouper","groups","groupByFactory","isKeyedIter","coerce","iterableClass","reify","sliceFactory","originalSize","resolvedBegin","resolvedEnd","resolvedSize","sliceSize","sliceSeq","skipped","isSkipping","takeWhileFactory","takeSequence","iterating","skipWhileFactory","skipSequence","skipping","concatFactory","isKeyedIterable","concat","singleton","concatSeq","flatten","reduce","sum","flattenFactory","depth","flatSequence","stopped","flatDeep","currentDepth","flatMapFactory","interposeFactory","separator","interposedSequence","defaultComparator","maxFactory","maxCompare","comp","zipWithFactory","keyIter","zipper","zipSequence","iterators","isDone","steps","some","s","Record","defaultValues","name","hasInitialized","RecordType","setProps","RecordTypePrototype","_name","_defaultValues","RecordPrototype","recordName","defaultVal","_empty","makeRecord","likeRecord","record","getPrototypeOf","names","setProp","bind","emptySet","isSet","add","fromKeys","keySeq","updateSet","union","intersect","originalSet","subtract","OrderedSet","__make","maybeSet","IS_SET_SENTINEL","SetPrototype","__empty","makeSet","EMPTY_SET","emptyOrderedSet","isOrderedSet","maybeOrderedSet","OrderedSetPrototype","makeOrderedSet","EMPTY_ORDERED_SET","Stack","emptyStack","isStack","unshiftAll","head","_head","peek","makeStack","pushAll","maybeStack","IS_STACK_SENTINEL","StackPrototype","EMPTY_STACK","mixin","methods","keyCopier","getOwnPropertySymbols","toJS","__toJS","toJSON","toObject","toOrderedMap","toOrderedSet","toSet","toStack","__toStringMapper","join","returnValue","find","findEntry","found","findLastEntry","sideEffect","joined","isFirst","reducer","initialReduction","reduction","useFirst","reduceRight","reversed","not","butLast","isEmpty","countBy","entriesSequence","entryMapper","filterNot","findLast","first","flatMap","searchKey","getIn","searchKeyPath","nested","groupBy","hasIn","isSubset","isSuperset","keyMapper","last","maxBy","neg","defaultNegComparator","minBy","rest","skip","amount","skipLast","skipWhile","skipUntil","take","takeLast","takeWhile","takeUntil","hashIterable","IterablePrototype","quoteString","chain","contains","noLengthWarning","console","warn","findKey","findLastKey","keyOf","lastKeyOf","mapEntries","mapKeys","KeyedIterablePrototype","JSON","stringify","findIndex","removeNum","numArgs","spliced","findLastIndex","interpose","interleave","zipped","interleaved","zip","defaultZipper","zipWith","ordered","keyed","hashMerge","murmurHashOfSize"],"mappings":"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","sourcesContent":["/**\n *  Copyright (c) 2014-2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.Immutable = factory();\n}(this, function () { 'use strict';var SLICE$0 = Array.prototype.slice;\n\n  function createClass(ctor, superClass) {\n    if (superClass) {\n      ctor.prototype = Object.create(superClass.prototype);\n    }\n    ctor.prototype.constructor = ctor;\n  }\n\n  function Iterable(value) {\n      return isIterable(value) ? value : Seq(value);\n    }\n\n\n  createClass(KeyedIterable, Iterable);\n    function KeyedIterable(value) {\n      return isKeyed(value) ? value : KeyedSeq(value);\n    }\n\n\n  createClass(IndexedIterable, Iterable);\n    function IndexedIterable(value) {\n      return isIndexed(value) ? value : IndexedSeq(value);\n    }\n\n\n  createClass(SetIterable, Iterable);\n    function SetIterable(value) {\n      return isIterable(value) && !isAssociative(value) ? value : SetSeq(value);\n    }\n\n\n\n  function isIterable(maybeIterable) {\n    return !!(maybeIterable && maybeIterable[IS_ITERABLE_SENTINEL]);\n  }\n\n  function isKeyed(maybeKeyed) {\n    return !!(maybeKeyed && maybeKeyed[IS_KEYED_SENTINEL]);\n  }\n\n  function isIndexed(maybeIndexed) {\n    return !!(maybeIndexed && maybeIndexed[IS_INDEXED_SENTINEL]);\n  }\n\n  function isAssociative(maybeAssociative) {\n    return isKeyed(maybeAssociative) || isIndexed(maybeAssociative);\n  }\n\n  function isOrdered(maybeOrdered) {\n    return !!(maybeOrdered && maybeOrdered[IS_ORDERED_SENTINEL]);\n  }\n\n  Iterable.isIterable = isIterable;\n  Iterable.isKeyed = isKeyed;\n  Iterable.isIndexed = isIndexed;\n  Iterable.isAssociative = isAssociative;\n  Iterable.isOrdered = isOrdered;\n\n  Iterable.Keyed = KeyedIterable;\n  Iterable.Indexed = IndexedIterable;\n  Iterable.Set = SetIterable;\n\n\n  var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  // Used for setting prototype methods that IE8 chokes on.\n  var DELETE = 'delete';\n\n  // Constants describing the size of trie nodes.\n  var SHIFT = 5; // Resulted in best performance after ______?\n  var SIZE = 1 << SHIFT;\n  var MASK = SIZE - 1;\n\n  // A consistent shared value representing \"not set\" which equals nothing other\n  // than itself, and nothing that could be provided externally.\n  var NOT_SET = {};\n\n  // Boolean references, Rough equivalent of `bool &`.\n  var CHANGE_LENGTH = { value: false };\n  var DID_ALTER = { value: false };\n\n  function MakeRef(ref) {\n    ref.value = false;\n    return ref;\n  }\n\n  function SetRef(ref) {\n    ref && (ref.value = true);\n  }\n\n  // A function which returns a value representing an \"owner\" for transient writes\n  // to tries. The return value will only ever equal itself, and will not equal\n  // the return of any subsequent call of this function.\n  function OwnerID() {}\n\n  // http://jsperf.com/copy-array-inline\n  function arrCopy(arr, offset) {\n    offset = offset || 0;\n    var len = Math.max(0, arr.length - offset);\n    var newArr = new Array(len);\n    for (var ii = 0; ii < len; ii++) {\n      newArr[ii] = arr[ii + offset];\n    }\n    return newArr;\n  }\n\n  function ensureSize(iter) {\n    if (iter.size === undefined) {\n      iter.size = iter.__iterate(returnTrue);\n    }\n    return iter.size;\n  }\n\n  function wrapIndex(iter, index) {\n    // This implements \"is array index\" which the ECMAString spec defines as:\n    //\n    //     A String property name P is an array index if and only if\n    //     ToString(ToUint32(P)) is equal to P and ToUint32(P) is not equal\n    //     to 2^32âˆ’1.\n    //\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-array-exotic-objects\n    if (typeof index !== 'number') {\n      var uint32Index = index >>> 0; // N >>> 0 is shorthand for ToUint32\n      if ('' + uint32Index !== index || uint32Index === 4294967295) {\n        return NaN;\n      }\n      index = uint32Index;\n    }\n    return index < 0 ? ensureSize(iter) + index : index;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function wholeSlice(begin, end, size) {\n    return (begin === 0 || (size !== undefined && begin <= -size)) &&\n      (end === undefined || (size !== undefined && end >= size));\n  }\n\n  function resolveBegin(begin, size) {\n    return resolveIndex(begin, size, 0);\n  }\n\n  function resolveEnd(end, size) {\n    return resolveIndex(end, size, size);\n  }\n\n  function resolveIndex(index, size, defaultIndex) {\n    return index === undefined ?\n      defaultIndex :\n      index < 0 ?\n        Math.max(0, size + index) :\n        size === undefined ?\n          index :\n          Math.min(size, index);\n  }\n\n  /* global Symbol */\n\n  var ITERATE_KEYS = 0;\n  var ITERATE_VALUES = 1;\n  var ITERATE_ENTRIES = 2;\n\n  var REAL_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator';\n\n  var ITERATOR_SYMBOL = REAL_ITERATOR_SYMBOL || FAUX_ITERATOR_SYMBOL;\n\n\n  function Iterator(next) {\n      this.next = next;\n    }\n\n    Iterator.prototype.toString = function() {\n      return '[Iterator]';\n    };\n\n\n  Iterator.KEYS = ITERATE_KEYS;\n  Iterator.VALUES = ITERATE_VALUES;\n  Iterator.ENTRIES = ITERATE_ENTRIES;\n\n  Iterator.prototype.inspect =\n  Iterator.prototype.toSource = function () { return this.toString(); }\n  Iterator.prototype[ITERATOR_SYMBOL] = function () {\n    return this;\n  };\n\n\n  function iteratorValue(type, k, v, iteratorResult) {\n    var value = type === 0 ? k : type === 1 ? v : [k, v];\n    iteratorResult ? (iteratorResult.value = value) : (iteratorResult = {\n      value: value, done: false\n    });\n    return iteratorResult;\n  }\n\n  function iteratorDone() {\n    return { value: undefined, done: true };\n  }\n\n  function hasIterator(maybeIterable) {\n    return !!getIteratorFn(maybeIterable);\n  }\n\n  function isIterator(maybeIterator) {\n    return maybeIterator && typeof maybeIterator.next === 'function';\n  }\n\n  function getIterator(iterable) {\n    var iteratorFn = getIteratorFn(iterable);\n    return iteratorFn && iteratorFn.call(iterable);\n  }\n\n  function getIteratorFn(iterable) {\n    var iteratorFn = iterable && (\n      (REAL_ITERATOR_SYMBOL && iterable[REAL_ITERATOR_SYMBOL]) ||\n      iterable[FAUX_ITERATOR_SYMBOL]\n    );\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  function isArrayLike(value) {\n    return value && typeof value.length === 'number';\n  }\n\n  createClass(Seq, Iterable);\n    function Seq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        isIterable(value) ? value.toSeq() : seqFromValue(value);\n    }\n\n    Seq.of = function(/*...values*/) {\n      return Seq(arguments);\n    };\n\n    Seq.prototype.toSeq = function() {\n      return this;\n    };\n\n    Seq.prototype.toString = function() {\n      return this.__toString('Seq {', '}');\n    };\n\n    Seq.prototype.cacheResult = function() {\n      if (!this._cache && this.__iterateUncached) {\n        this._cache = this.entrySeq().toArray();\n        this.size = this._cache.length;\n      }\n      return this;\n    };\n\n    // abstract __iterateUncached(fn, reverse)\n\n    Seq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, true);\n    };\n\n    // abstract __iteratorUncached(type, reverse)\n\n    Seq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, true);\n    };\n\n\n\n  createClass(KeyedSeq, Seq);\n    function KeyedSeq(value) {\n      return value === null || value === undefined ?\n        emptySequence().toKeyedSeq() :\n        isIterable(value) ?\n          (isKeyed(value) ? value.toSeq() : value.fromEntrySeq()) :\n          keyedSeqFromValue(value);\n    }\n\n    KeyedSeq.prototype.toKeyedSeq = function() {\n      return this;\n    };\n\n\n\n  createClass(IndexedSeq, Seq);\n    function IndexedSeq(value) {\n      return value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value.toIndexedSeq();\n    }\n\n    IndexedSeq.of = function(/*...values*/) {\n      return IndexedSeq(arguments);\n    };\n\n    IndexedSeq.prototype.toIndexedSeq = function() {\n      return this;\n    };\n\n    IndexedSeq.prototype.toString = function() {\n      return this.__toString('Seq [', ']');\n    };\n\n    IndexedSeq.prototype.__iterate = function(fn, reverse) {\n      return seqIterate(this, fn, reverse, false);\n    };\n\n    IndexedSeq.prototype.__iterator = function(type, reverse) {\n      return seqIterator(this, type, reverse, false);\n    };\n\n\n\n  createClass(SetSeq, Seq);\n    function SetSeq(value) {\n      return (\n        value === null || value === undefined ? emptySequence() :\n        !isIterable(value) ? indexedSeqFromValue(value) :\n        isKeyed(value) ? value.entrySeq() : value\n      ).toSetSeq();\n    }\n\n    SetSeq.of = function(/*...values*/) {\n      return SetSeq(arguments);\n    };\n\n    SetSeq.prototype.toSetSeq = function() {\n      return this;\n    };\n\n\n\n  Seq.isSeq = isSeq;\n  Seq.Keyed = KeyedSeq;\n  Seq.Set = SetSeq;\n  Seq.Indexed = IndexedSeq;\n\n  var IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@';\n\n  Seq.prototype[IS_SEQ_SENTINEL] = true;\n\n\n\n  createClass(ArraySeq, IndexedSeq);\n    function ArraySeq(array) {\n      this._array = array;\n      this.size = array.length;\n    }\n\n    ArraySeq.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._array[wrapIndex(this, index)] : notSetValue;\n    };\n\n    ArraySeq.prototype.__iterate = function(fn, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(array[reverse ? maxIndex - ii : ii], ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ArraySeq.prototype.__iterator = function(type, reverse) {\n      var array = this._array;\n      var maxIndex = array.length - 1;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, ii, array[reverse ? maxIndex - ii++ : ii++])}\n      );\n    };\n\n\n\n  createClass(ObjectSeq, KeyedSeq);\n    function ObjectSeq(object) {\n      var keys = Object.keys(object);\n      this._object = object;\n      this._keys = keys;\n      this.size = keys.length;\n    }\n\n    ObjectSeq.prototype.get = function(key, notSetValue) {\n      if (notSetValue !== undefined && !this.has(key)) {\n        return notSetValue;\n      }\n      return this._object[key];\n    };\n\n    ObjectSeq.prototype.has = function(key) {\n      return this._object.hasOwnProperty(key);\n    };\n\n    ObjectSeq.prototype.__iterate = function(fn, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        if (fn(object[key], key, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    ObjectSeq.prototype.__iterator = function(type, reverse) {\n      var object = this._object;\n      var keys = this._keys;\n      var maxIndex = keys.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var key = keys[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, key, object[key]);\n      });\n    };\n\n  ObjectSeq.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(IterableSeq, IndexedSeq);\n    function IterableSeq(iterable) {\n      this._iterable = iterable;\n      this.size = iterable.length || iterable.size;\n    }\n\n    IterableSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      var iterations = 0;\n      if (isIterator(iterator)) {\n        var step;\n        while (!(step = iterator.next()).done) {\n          if (fn(step.value, iterations++, this) === false) {\n            break;\n          }\n        }\n      }\n      return iterations;\n    };\n\n    IterableSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterable = this._iterable;\n      var iterator = getIterator(iterable);\n      if (!isIterator(iterator)) {\n        return new Iterator(iteratorDone);\n      }\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step : iteratorValue(type, iterations++, step.value);\n      });\n    };\n\n\n\n  createClass(IteratorSeq, IndexedSeq);\n    function IteratorSeq(iterator) {\n      this._iterator = iterator;\n      this._iteratorCache = [];\n    }\n\n    IteratorSeq.prototype.__iterateUncached = function(fn, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      while (iterations < cache.length) {\n        if (fn(cache[iterations], iterations++, this) === false) {\n          return iterations;\n        }\n      }\n      var step;\n      while (!(step = iterator.next()).done) {\n        var val = step.value;\n        cache[iterations] = val;\n        if (fn(val, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n\n    IteratorSeq.prototype.__iteratorUncached = function(type, reverse) {\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = this._iterator;\n      var cache = this._iteratorCache;\n      var iterations = 0;\n      return new Iterator(function()  {\n        if (iterations >= cache.length) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          cache[iterations] = step.value;\n        }\n        return iteratorValue(type, iterations, cache[iterations++]);\n      });\n    };\n\n\n\n\n  // # pragma Helper functions\n\n  function isSeq(maybeSeq) {\n    return !!(maybeSeq && maybeSeq[IS_SEQ_SENTINEL]);\n  }\n\n  var EMPTY_SEQ;\n\n  function emptySequence() {\n    return EMPTY_SEQ || (EMPTY_SEQ = new ArraySeq([]));\n  }\n\n  function keyedSeqFromValue(value) {\n    var seq =\n      Array.isArray(value) ? new ArraySeq(value).fromEntrySeq() :\n      isIterator(value) ? new IteratorSeq(value).fromEntrySeq() :\n      hasIterator(value) ? new IterableSeq(value).fromEntrySeq() :\n      typeof value === 'object' ? new ObjectSeq(value) :\n      undefined;\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of [k, v] entries, '+\n        'or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function indexedSeqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value);\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function seqFromValue(value) {\n    var seq = maybeIndexedSeqFromValue(value) ||\n      (typeof value === 'object' && new ObjectSeq(value));\n    if (!seq) {\n      throw new TypeError(\n        'Expected Array or iterable object of values, or keyed object: ' + value\n      );\n    }\n    return seq;\n  }\n\n  function maybeIndexedSeqFromValue(value) {\n    return (\n      isArrayLike(value) ? new ArraySeq(value) :\n      isIterator(value) ? new IteratorSeq(value) :\n      hasIterator(value) ? new IterableSeq(value) :\n      undefined\n    );\n  }\n\n  function seqIterate(seq, fn, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        if (fn(entry[1], useKeys ? entry[0] : ii, seq) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    }\n    return seq.__iterateUncached(fn, reverse);\n  }\n\n  function seqIterator(seq, type, reverse, useKeys) {\n    var cache = seq._cache;\n    if (cache) {\n      var maxIndex = cache.length - 1;\n      var ii = 0;\n      return new Iterator(function()  {\n        var entry = cache[reverse ? maxIndex - ii : ii];\n        return ii++ > maxIndex ?\n          iteratorDone() :\n          iteratorValue(type, useKeys ? entry[0] : ii - 1, entry[1]);\n      });\n    }\n    return seq.__iteratorUncached(type, reverse);\n  }\n\n  function fromJS(json, converter) {\n    return converter ?\n      fromJSWith(converter, json, '', {'': json}) :\n      fromJSDefault(json);\n  }\n\n  function fromJSWith(converter, json, key, parentJSON) {\n    if (Array.isArray(json)) {\n      return converter.call(parentJSON, key, IndexedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    if (isPlainObj(json)) {\n      return converter.call(parentJSON, key, KeyedSeq(json).map(function(v, k)  {return fromJSWith(converter, v, k, json)}));\n    }\n    return json;\n  }\n\n  function fromJSDefault(json) {\n    if (Array.isArray(json)) {\n      return IndexedSeq(json).map(fromJSDefault).toList();\n    }\n    if (isPlainObj(json)) {\n      return KeyedSeq(json).map(fromJSDefault).toMap();\n    }\n    return json;\n  }\n\n  function isPlainObj(value) {\n    return value && (value.constructor === Object || value.constructor === undefined);\n  }\n\n  /**\n   * An extension of the \"same-value\" algorithm as [described for use by ES6 Map\n   * and Set](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map#Key_equality)\n   *\n   * NaN is considered the same as NaN, however -0 and 0 are considered the same\n   * value, which is different from the algorithm described by\n   * [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is).\n   *\n   * This is extended further to allow Objects to describe the values they\n   * represent, by way of `valueOf` or `equals` (and `hashCode`).\n   *\n   * Note: because of this extension, the key equality of Immutable.Map and the\n   * value equality of Immutable.Set will differ from ES6 Map and Set.\n   *\n   * ### Defining custom values\n   *\n   * The easiest way to describe the value an object represents is by implementing\n   * `valueOf`. For example, `Date` represents a value by returning a unix\n   * timestamp for `valueOf`:\n   *\n   *     var date1 = new Date(1234567890000); // Fri Feb 13 2009 ...\n   *     var date2 = new Date(1234567890000);\n   *     date1.valueOf(); // 1234567890000\n   *     assert( date1 !== date2 );\n   *     assert( Immutable.is( date1, date2 ) );\n   *\n   * Note: overriding `valueOf` may have other implications if you use this object\n   * where JavaScript expects a primitive, such as implicit string coercion.\n   *\n   * For more complex types, especially collections, implementing `valueOf` may\n   * not be performant. An alternative is to implement `equals` and `hashCode`.\n   *\n   * `equals` takes another object, presumably of similar type, and returns true\n   * if the it is equal. Equality is symmetrical, so the same result should be\n   * returned if this and the argument are flipped.\n   *\n   *     assert( a.equals(b) === b.equals(a) );\n   *\n   * `hashCode` returns a 32bit integer number representing the object which will\n   * be used to determine how to store the value object in a Map or Set. You must\n   * provide both or neither methods, one must not exist without the other.\n   *\n   * Also, an important relationship between these methods must be upheld: if two\n   * values are equal, they *must* return the same hashCode. If the values are not\n   * equal, they might have the same hashCode; this is called a hash collision,\n   * and while undesirable for performance reasons, it is acceptable.\n   *\n   *     if (a.equals(b)) {\n   *       assert( a.hashCode() === b.hashCode() );\n   *     }\n   *\n   * All Immutable collections implement `equals` and `hashCode`.\n   *\n   */\n  function is(valueA, valueB) {\n    if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n      return true;\n    }\n    if (!valueA || !valueB) {\n      return false;\n    }\n    if (typeof valueA.valueOf === 'function' &&\n        typeof valueB.valueOf === 'function') {\n      valueA = valueA.valueOf();\n      valueB = valueB.valueOf();\n      if (valueA === valueB || (valueA !== valueA && valueB !== valueB)) {\n        return true;\n      }\n      if (!valueA || !valueB) {\n        return false;\n      }\n    }\n    if (typeof valueA.equals === 'function' &&\n        typeof valueB.equals === 'function' &&\n        valueA.equals(valueB)) {\n      return true;\n    }\n    return false;\n  }\n\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n\n    if (\n      !isIterable(b) ||\n      a.size !== undefined && b.size !== undefined && a.size !== b.size ||\n      a.__hash !== undefined && b.__hash !== undefined && a.__hash !== b.__hash ||\n      isKeyed(a) !== isKeyed(b) ||\n      isIndexed(a) !== isIndexed(b) ||\n      isOrdered(a) !== isOrdered(b)\n    ) {\n      return false;\n    }\n\n    if (a.size === 0 && b.size === 0) {\n      return true;\n    }\n\n    var notAssociative = !isAssociative(a);\n\n    if (isOrdered(a)) {\n      var entries = a.entries();\n      return b.every(function(v, k)  {\n        var entry = entries.next().value;\n        return entry && is(entry[1], v) && (notAssociative || is(entry[0], k));\n      }) && entries.next().done;\n    }\n\n    var flipped = false;\n\n    if (a.size === undefined) {\n      if (b.size === undefined) {\n        if (typeof a.cacheResult === 'function') {\n          a.cacheResult();\n        }\n      } else {\n        flipped = true;\n        var _ = a;\n        a = b;\n        b = _;\n      }\n    }\n\n    var allEqual = true;\n    var bSize = b.__iterate(function(v, k)  {\n      if (notAssociative ? !a.has(v) :\n          flipped ? !is(v, a.get(k, NOT_SET)) : !is(a.get(k, NOT_SET), v)) {\n        allEqual = false;\n        return false;\n      }\n    });\n\n    return allEqual && a.size === bSize;\n  }\n\n  createClass(Repeat, IndexedSeq);\n\n    function Repeat(value, times) {\n      if (!(this instanceof Repeat)) {\n        return new Repeat(value, times);\n      }\n      this._value = value;\n      this.size = times === undefined ? Infinity : Math.max(0, times);\n      if (this.size === 0) {\n        if (EMPTY_REPEAT) {\n          return EMPTY_REPEAT;\n        }\n        EMPTY_REPEAT = this;\n      }\n    }\n\n    Repeat.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Repeat []';\n      }\n      return 'Repeat [ ' + this._value + ' ' + this.size + ' times ]';\n    };\n\n    Repeat.prototype.get = function(index, notSetValue) {\n      return this.has(index) ? this._value : notSetValue;\n    };\n\n    Repeat.prototype.includes = function(searchValue) {\n      return is(this._value, searchValue);\n    };\n\n    Repeat.prototype.slice = function(begin, end) {\n      var size = this.size;\n      return wholeSlice(begin, end, size) ? this :\n        new Repeat(this._value, resolveEnd(end, size) - resolveBegin(begin, size));\n    };\n\n    Repeat.prototype.reverse = function() {\n      return this;\n    };\n\n    Repeat.prototype.indexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return 0;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.lastIndexOf = function(searchValue) {\n      if (is(this._value, searchValue)) {\n        return this.size;\n      }\n      return -1;\n    };\n\n    Repeat.prototype.__iterate = function(fn, reverse) {\n      for (var ii = 0; ii < this.size; ii++) {\n        if (fn(this._value, ii, this) === false) {\n          return ii + 1;\n        }\n      }\n      return ii;\n    };\n\n    Repeat.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      var ii = 0;\n      return new Iterator(function() \n        {return ii < this$0.size ? iteratorValue(type, ii++, this$0._value) : iteratorDone()}\n      );\n    };\n\n    Repeat.prototype.equals = function(other) {\n      return other instanceof Repeat ?\n        is(this._value, other._value) :\n        deepEqual(other);\n    };\n\n\n  var EMPTY_REPEAT;\n\n  function invariant(condition, error) {\n    if (!condition) throw new Error(error);\n  }\n\n  createClass(Range, IndexedSeq);\n\n    function Range(start, end, step) {\n      if (!(this instanceof Range)) {\n        return new Range(start, end, step);\n      }\n      invariant(step !== 0, 'Cannot step a Range by 0');\n      start = start || 0;\n      if (end === undefined) {\n        end = Infinity;\n      }\n      step = step === undefined ? 1 : Math.abs(step);\n      if (end < start) {\n        step = -step;\n      }\n      this._start = start;\n      this._end = end;\n      this._step = step;\n      this.size = Math.max(0, Math.ceil((end - start) / step - 1) + 1);\n      if (this.size === 0) {\n        if (EMPTY_RANGE) {\n          return EMPTY_RANGE;\n        }\n        EMPTY_RANGE = this;\n      }\n    }\n\n    Range.prototype.toString = function() {\n      if (this.size === 0) {\n        return 'Range []';\n      }\n      return 'Range [ ' +\n        this._start + '...' + this._end +\n        (this._step > 1 ? ' by ' + this._step : '') +\n      ' ]';\n    };\n\n    Range.prototype.get = function(index, notSetValue) {\n      return this.has(index) ?\n        this._start + wrapIndex(this, index) * this._step :\n        notSetValue;\n    };\n\n    Range.prototype.includes = function(searchValue) {\n      var possibleIndex = (searchValue - this._start) / this._step;\n      return possibleIndex >= 0 &&\n        possibleIndex < this.size &&\n        possibleIndex === Math.floor(possibleIndex);\n    };\n\n    Range.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      begin = resolveBegin(begin, this.size);\n      end = resolveEnd(end, this.size);\n      if (end <= begin) {\n        return new Range(0, 0);\n      }\n      return new Range(this.get(begin, this._end), this.get(end, this._end), this._step);\n    };\n\n    Range.prototype.indexOf = function(searchValue) {\n      var offsetValue = searchValue - this._start;\n      if (offsetValue % this._step === 0) {\n        var index = offsetValue / this._step;\n        if (index >= 0 && index < this.size) {\n          return index\n        }\n      }\n      return -1;\n    };\n\n    Range.prototype.lastIndexOf = function(searchValue) {\n      return this.indexOf(searchValue);\n    };\n\n    Range.prototype.__iterate = function(fn, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      for (var ii = 0; ii <= maxIndex; ii++) {\n        if (fn(value, ii, this) === false) {\n          return ii + 1;\n        }\n        value += reverse ? -step : step;\n      }\n      return ii;\n    };\n\n    Range.prototype.__iterator = function(type, reverse) {\n      var maxIndex = this.size - 1;\n      var step = this._step;\n      var value = reverse ? this._start + maxIndex * step : this._start;\n      var ii = 0;\n      return new Iterator(function()  {\n        var v = value;\n        value += reverse ? -step : step;\n        return ii > maxIndex ? iteratorDone() : iteratorValue(type, ii++, v);\n      });\n    };\n\n    Range.prototype.equals = function(other) {\n      return other instanceof Range ?\n        this._start === other._start &&\n        this._end === other._end &&\n        this._step === other._step :\n        deepEqual(this, other);\n    };\n\n\n  var EMPTY_RANGE;\n\n  createClass(Collection, Iterable);\n    function Collection() {\n      throw TypeError('Abstract');\n    }\n\n\n  createClass(KeyedCollection, Collection);function KeyedCollection() {}\n\n  createClass(IndexedCollection, Collection);function IndexedCollection() {}\n\n  createClass(SetCollection, Collection);function SetCollection() {}\n\n\n  Collection.Keyed = KeyedCollection;\n  Collection.Indexed = IndexedCollection;\n  Collection.Set = SetCollection;\n\n  var imul =\n    typeof Math.imul === 'function' && Math.imul(0xffffffff, 2) === -2 ?\n    Math.imul :\n    function imul(a, b) {\n      a = a | 0; // int\n      b = b | 0; // int\n      var c = a & 0xffff;\n      var d = b & 0xffff;\n      // Shift by 0 fixes the sign on the high part.\n      return (c * d) + ((((a >>> 16) * d + c * (b >>> 16)) << 16) >>> 0) | 0; // int\n    };\n\n  // v8 has an optimization for storing 31-bit signed numbers.\n  // Values which have either 00 or 11 as the high order bits qualify.\n  // This function drops the highest order bit in a signed number, maintaining\n  // the sign bit.\n  function smi(i32) {\n    return ((i32 >>> 1) & 0x40000000) | (i32 & 0xBFFFFFFF);\n  }\n\n  function hash(o) {\n    if (o === false || o === null || o === undefined) {\n      return 0;\n    }\n    if (typeof o.valueOf === 'function') {\n      o = o.valueOf();\n      if (o === false || o === null || o === undefined) {\n        return 0;\n      }\n    }\n    if (o === true) {\n      return 1;\n    }\n    var type = typeof o;\n    if (type === 'number') {\n      var h = o | 0;\n      if (h !== o) {\n        h ^= o * 0xFFFFFFFF;\n      }\n      while (o > 0xFFFFFFFF) {\n        o /= 0xFFFFFFFF;\n        h ^= o;\n      }\n      return smi(h);\n    }\n    if (type === 'string') {\n      return o.length > STRING_HASH_CACHE_MIN_STRLEN ? cachedHashString(o) : hashString(o);\n    }\n    if (typeof o.hashCode === 'function') {\n      return o.hashCode();\n    }\n    if (type === 'object') {\n      return hashJSObj(o);\n    }\n    if (typeof o.toString === 'function') {\n      return hashString(o.toString());\n    }\n    throw new Error('Value type ' + type + ' cannot be hashed.');\n  }\n\n  function cachedHashString(string) {\n    var hash = stringHashCache[string];\n    if (hash === undefined) {\n      hash = hashString(string);\n      if (STRING_HASH_CACHE_SIZE === STRING_HASH_CACHE_MAX_SIZE) {\n        STRING_HASH_CACHE_SIZE = 0;\n        stringHashCache = {};\n      }\n      STRING_HASH_CACHE_SIZE++;\n      stringHashCache[string] = hash;\n    }\n    return hash;\n  }\n\n  // http://jsperf.com/hashing-strings\n  function hashString(string) {\n    // This is the hash from JVM\n    // The hash code for a string is computed as\n    // s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n    // where s[i] is the ith character of the string and n is the length of\n    // the string. We \"mod\" the result to make it between 0 (inclusive) and 2^31\n    // (exclusive) by dropping high bits.\n    var hash = 0;\n    for (var ii = 0; ii < string.length; ii++) {\n      hash = 31 * hash + string.charCodeAt(ii) | 0;\n    }\n    return smi(hash);\n  }\n\n  function hashJSObj(obj) {\n    var hash;\n    if (usingWeakMap) {\n      hash = weakMap.get(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = obj[UID_HASH_KEY];\n    if (hash !== undefined) {\n      return hash;\n    }\n\n    if (!canDefineProperty) {\n      hash = obj.propertyIsEnumerable && obj.propertyIsEnumerable[UID_HASH_KEY];\n      if (hash !== undefined) {\n        return hash;\n      }\n\n      hash = getIENodeHash(obj);\n      if (hash !== undefined) {\n        return hash;\n      }\n    }\n\n    hash = ++objHashUID;\n    if (objHashUID & 0x40000000) {\n      objHashUID = 0;\n    }\n\n    if (usingWeakMap) {\n      weakMap.set(obj, hash);\n    } else if (isExtensible !== undefined && isExtensible(obj) === false) {\n      throw new Error('Non-extensible objects are not allowed as keys.');\n    } else if (canDefineProperty) {\n      Object.defineProperty(obj, UID_HASH_KEY, {\n        'enumerable': false,\n        'configurable': false,\n        'writable': false,\n        'value': hash\n      });\n    } else if (obj.propertyIsEnumerable !== undefined &&\n               obj.propertyIsEnumerable === obj.constructor.prototype.propertyIsEnumerable) {\n      // Since we can't define a non-enumerable property on the object\n      // we'll hijack one of the less-used non-enumerable properties to\n      // save our hash on it. Since this is a function it will not show up in\n      // `JSON.stringify` which is what we want.\n      obj.propertyIsEnumerable = function() {\n        return this.constructor.prototype.propertyIsEnumerable.apply(this, arguments);\n      };\n      obj.propertyIsEnumerable[UID_HASH_KEY] = hash;\n    } else if (obj.nodeType !== undefined) {\n      // At this point we couldn't get the IE `uniqueID` to use as a hash\n      // and we couldn't use a non-enumerable property to exploit the\n      // dontEnum bug so we simply add the `UID_HASH_KEY` on the node\n      // itself.\n      obj[UID_HASH_KEY] = hash;\n    } else {\n      throw new Error('Unable to set a non-enumerable property on object.');\n    }\n\n    return hash;\n  }\n\n  // Get references to ES5 object methods.\n  var isExtensible = Object.isExtensible;\n\n  // True if Object.defineProperty works as expected. IE8 fails this test.\n  var canDefineProperty = (function() {\n    try {\n      Object.defineProperty({}, '@', {});\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }());\n\n  // IE has a `uniqueID` property on DOM nodes. We can construct the hash from it\n  // and avoid memory leaks from the IE cloneNode bug.\n  function getIENodeHash(node) {\n    if (node && node.nodeType > 0) {\n      switch (node.nodeType) {\n        case 1: // Element\n          return node.uniqueID;\n        case 9: // Document\n          return node.documentElement && node.documentElement.uniqueID;\n      }\n    }\n  }\n\n  // If possible, use a WeakMap.\n  var usingWeakMap = typeof WeakMap === 'function';\n  var weakMap;\n  if (usingWeakMap) {\n    weakMap = new WeakMap();\n  }\n\n  var objHashUID = 0;\n\n  var UID_HASH_KEY = '__immutablehash__';\n  if (typeof Symbol === 'function') {\n    UID_HASH_KEY = Symbol(UID_HASH_KEY);\n  }\n\n  var STRING_HASH_CACHE_MIN_STRLEN = 16;\n  var STRING_HASH_CACHE_MAX_SIZE = 255;\n  var STRING_HASH_CACHE_SIZE = 0;\n  var stringHashCache = {};\n\n  function assertNotInfinite(size) {\n    invariant(\n      size !== Infinity,\n      'Cannot perform this action with an infinite size.'\n    );\n  }\n\n  createClass(Map, KeyedCollection);\n\n    // @pragma Construction\n\n    function Map(value) {\n      return value === null || value === undefined ? emptyMap() :\n        isMap(value) && !isOrdered(value) ? value :\n        emptyMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    Map.prototype.toString = function() {\n      return this.__toString('Map {', '}');\n    };\n\n    // @pragma Access\n\n    Map.prototype.get = function(k, notSetValue) {\n      return this._root ?\n        this._root.get(0, undefined, k, notSetValue) :\n        notSetValue;\n    };\n\n    // @pragma Modification\n\n    Map.prototype.set = function(k, v) {\n      return updateMap(this, k, v);\n    };\n\n    Map.prototype.setIn = function(keyPath, v) {\n      return this.updateIn(keyPath, NOT_SET, function()  {return v});\n    };\n\n    Map.prototype.remove = function(k) {\n      return updateMap(this, k, NOT_SET);\n    };\n\n    Map.prototype.deleteIn = function(keyPath) {\n      return this.updateIn(keyPath, function()  {return NOT_SET});\n    };\n\n    Map.prototype.update = function(k, notSetValue, updater) {\n      return arguments.length === 1 ?\n        k(this) :\n        this.updateIn([k], notSetValue, updater);\n    };\n\n    Map.prototype.updateIn = function(keyPath, notSetValue, updater) {\n      if (!updater) {\n        updater = notSetValue;\n        notSetValue = undefined;\n      }\n      var updatedValue = updateInDeepMap(\n        this,\n        forceIterator(keyPath),\n        notSetValue,\n        updater\n      );\n      return updatedValue === NOT_SET ? undefined : updatedValue;\n    };\n\n    Map.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._root = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyMap();\n    };\n\n    // @pragma Composition\n\n    Map.prototype.merge = function(/*...iters*/) {\n      return mergeIntoMapWith(this, undefined, arguments);\n    };\n\n    Map.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, merger, iters);\n    };\n\n    Map.prototype.mergeIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.merge === 'function' ?\n          m.merge.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoMapWith(this, deepMerger, arguments);\n    };\n\n    Map.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoMapWith(this, deepMergerWith(merger), iters);\n    };\n\n    Map.prototype.mergeDeepIn = function(keyPath) {var iters = SLICE$0.call(arguments, 1);\n      return this.updateIn(\n        keyPath,\n        emptyMap(),\n        function(m ) {return typeof m.mergeDeep === 'function' ?\n          m.mergeDeep.apply(m, iters) :\n          iters[iters.length - 1]}\n      );\n    };\n\n    Map.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator));\n    };\n\n    Map.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedMap(sortFactory(this, comparator, mapper));\n    };\n\n    // @pragma Mutability\n\n    Map.prototype.withMutations = function(fn) {\n      var mutable = this.asMutable();\n      fn(mutable);\n      return mutable.wasAltered() ? mutable.__ensureOwner(this.__ownerID) : this;\n    };\n\n    Map.prototype.asMutable = function() {\n      return this.__ownerID ? this : this.__ensureOwner(new OwnerID());\n    };\n\n    Map.prototype.asImmutable = function() {\n      return this.__ensureOwner();\n    };\n\n    Map.prototype.wasAltered = function() {\n      return this.__altered;\n    };\n\n    Map.prototype.__iterator = function(type, reverse) {\n      return new MapIterator(this, type, reverse);\n    };\n\n    Map.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      this._root && this._root.iterate(function(entry ) {\n        iterations++;\n        return fn(entry[1], entry[0], this$0);\n      }, reverse);\n      return iterations;\n    };\n\n    Map.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeMap(this.size, this._root, ownerID, this.__hash);\n    };\n\n\n  function isMap(maybeMap) {\n    return !!(maybeMap && maybeMap[IS_MAP_SENTINEL]);\n  }\n\n  Map.isMap = isMap;\n\n  var IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@';\n\n  var MapPrototype = Map.prototype;\n  MapPrototype[IS_MAP_SENTINEL] = true;\n  MapPrototype[DELETE] = MapPrototype.remove;\n  MapPrototype.removeIn = MapPrototype.deleteIn;\n\n\n  // #pragma Trie Nodes\n\n\n\n    function ArrayMapNode(ownerID, entries) {\n      this.ownerID = ownerID;\n      this.entries = entries;\n    }\n\n    ArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    ArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && entries.length === 1) {\n        return; // undefined\n      }\n\n      if (!exists && !removed && entries.length >= MAX_ARRAY_MAP_SIZE) {\n        return createNodes(ownerID, entries, key, value);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new ArrayMapNode(ownerID, newEntries);\n    };\n\n\n\n\n    function BitmapIndexedNode(ownerID, bitmap, nodes) {\n      this.ownerID = ownerID;\n      this.bitmap = bitmap;\n      this.nodes = nodes;\n    }\n\n    BitmapIndexedNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var bit = (1 << ((shift === 0 ? keyHash : keyHash >>> shift) & MASK));\n      var bitmap = this.bitmap;\n      return (bitmap & bit) === 0 ? notSetValue :\n        this.nodes[popCount(bitmap & (bit - 1))].get(shift + SHIFT, keyHash, key, notSetValue);\n    };\n\n    BitmapIndexedNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var keyHashFrag = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var bit = 1 << keyHashFrag;\n      var bitmap = this.bitmap;\n      var exists = (bitmap & bit) !== 0;\n\n      if (!exists && value === NOT_SET) {\n        return this;\n      }\n\n      var idx = popCount(bitmap & (bit - 1));\n      var nodes = this.nodes;\n      var node = exists ? nodes[idx] : undefined;\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n\n      if (newNode === node) {\n        return this;\n      }\n\n      if (!exists && newNode && nodes.length >= MAX_BITMAP_INDEXED_SIZE) {\n        return expandNodes(ownerID, nodes, bitmap, keyHashFrag, newNode);\n      }\n\n      if (exists && !newNode && nodes.length === 2 && isLeafNode(nodes[idx ^ 1])) {\n        return nodes[idx ^ 1];\n      }\n\n      if (exists && newNode && nodes.length === 1 && isLeafNode(newNode)) {\n        return newNode;\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newBitmap = exists ? newNode ? bitmap : bitmap ^ bit : bitmap | bit;\n      var newNodes = exists ? newNode ?\n        setIn(nodes, idx, newNode, isEditable) :\n        spliceOut(nodes, idx, isEditable) :\n        spliceIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.bitmap = newBitmap;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new BitmapIndexedNode(ownerID, newBitmap, newNodes);\n    };\n\n\n\n\n    function HashArrayMapNode(ownerID, count, nodes) {\n      this.ownerID = ownerID;\n      this.count = count;\n      this.nodes = nodes;\n    }\n\n    HashArrayMapNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var node = this.nodes[idx];\n      return node ? node.get(shift + SHIFT, keyHash, key, notSetValue) : notSetValue;\n    };\n\n    HashArrayMapNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n      var idx = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n      var removed = value === NOT_SET;\n      var nodes = this.nodes;\n      var node = nodes[idx];\n\n      if (removed && !node) {\n        return this;\n      }\n\n      var newNode = updateNode(node, ownerID, shift + SHIFT, keyHash, key, value, didChangeSize, didAlter);\n      if (newNode === node) {\n        return this;\n      }\n\n      var newCount = this.count;\n      if (!node) {\n        newCount++;\n      } else if (!newNode) {\n        newCount--;\n        if (newCount < MIN_HASH_ARRAY_MAP_SIZE) {\n          return packNodes(ownerID, nodes, newCount, idx);\n        }\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newNodes = setIn(nodes, idx, newNode, isEditable);\n\n      if (isEditable) {\n        this.count = newCount;\n        this.nodes = newNodes;\n        return this;\n      }\n\n      return new HashArrayMapNode(ownerID, newCount, newNodes);\n    };\n\n\n\n\n    function HashCollisionNode(ownerID, keyHash, entries) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entries = entries;\n    }\n\n    HashCollisionNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      var entries = this.entries;\n      for (var ii = 0, len = entries.length; ii < len; ii++) {\n        if (is(key, entries[ii][0])) {\n          return entries[ii][1];\n        }\n      }\n      return notSetValue;\n    };\n\n    HashCollisionNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      if (keyHash === undefined) {\n        keyHash = hash(key);\n      }\n\n      var removed = value === NOT_SET;\n\n      if (keyHash !== this.keyHash) {\n        if (removed) {\n          return this;\n        }\n        SetRef(didAlter);\n        SetRef(didChangeSize);\n        return mergeIntoNode(this, ownerID, shift, keyHash, [key, value]);\n      }\n\n      var entries = this.entries;\n      var idx = 0;\n      for (var len = entries.length; idx < len; idx++) {\n        if (is(key, entries[idx][0])) {\n          break;\n        }\n      }\n      var exists = idx < len;\n\n      if (exists ? entries[idx][1] === value : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n      (removed || !exists) && SetRef(didChangeSize);\n\n      if (removed && len === 2) {\n        return new ValueNode(ownerID, this.keyHash, entries[idx ^ 1]);\n      }\n\n      var isEditable = ownerID && ownerID === this.ownerID;\n      var newEntries = isEditable ? entries : arrCopy(entries);\n\n      if (exists) {\n        if (removed) {\n          idx === len - 1 ? newEntries.pop() : (newEntries[idx] = newEntries.pop());\n        } else {\n          newEntries[idx] = [key, value];\n        }\n      } else {\n        newEntries.push([key, value]);\n      }\n\n      if (isEditable) {\n        this.entries = newEntries;\n        return this;\n      }\n\n      return new HashCollisionNode(ownerID, this.keyHash, newEntries);\n    };\n\n\n\n\n    function ValueNode(ownerID, keyHash, entry) {\n      this.ownerID = ownerID;\n      this.keyHash = keyHash;\n      this.entry = entry;\n    }\n\n    ValueNode.prototype.get = function(shift, keyHash, key, notSetValue) {\n      return is(key, this.entry[0]) ? this.entry[1] : notSetValue;\n    };\n\n    ValueNode.prototype.update = function(ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n      var removed = value === NOT_SET;\n      var keyMatch = is(key, this.entry[0]);\n      if (keyMatch ? value === this.entry[1] : removed) {\n        return this;\n      }\n\n      SetRef(didAlter);\n\n      if (removed) {\n        SetRef(didChangeSize);\n        return; // undefined\n      }\n\n      if (keyMatch) {\n        if (ownerID && ownerID === this.ownerID) {\n          this.entry[1] = value;\n          return this;\n        }\n        return new ValueNode(ownerID, this.keyHash, [key, value]);\n      }\n\n      SetRef(didChangeSize);\n      return mergeIntoNode(this, ownerID, shift, hash(key), [key, value]);\n    };\n\n\n\n  // #pragma Iterators\n\n  ArrayMapNode.prototype.iterate =\n  HashCollisionNode.prototype.iterate = function (fn, reverse) {\n    var entries = this.entries;\n    for (var ii = 0, maxIndex = entries.length - 1; ii <= maxIndex; ii++) {\n      if (fn(entries[reverse ? maxIndex - ii : ii]) === false) {\n        return false;\n      }\n    }\n  }\n\n  BitmapIndexedNode.prototype.iterate =\n  HashArrayMapNode.prototype.iterate = function (fn, reverse) {\n    var nodes = this.nodes;\n    for (var ii = 0, maxIndex = nodes.length - 1; ii <= maxIndex; ii++) {\n      var node = nodes[reverse ? maxIndex - ii : ii];\n      if (node && node.iterate(fn, reverse) === false) {\n        return false;\n      }\n    }\n  }\n\n  ValueNode.prototype.iterate = function (fn, reverse) {\n    return fn(this.entry);\n  }\n\n  createClass(MapIterator, Iterator);\n\n    function MapIterator(map, type, reverse) {\n      this._type = type;\n      this._reverse = reverse;\n      this._stack = map._root && mapIteratorFrame(map._root);\n    }\n\n    MapIterator.prototype.next = function() {\n      var type = this._type;\n      var stack = this._stack;\n      while (stack) {\n        var node = stack.node;\n        var index = stack.index++;\n        var maxIndex;\n        if (node.entry) {\n          if (index === 0) {\n            return mapIteratorValue(type, node.entry);\n          }\n        } else if (node.entries) {\n          maxIndex = node.entries.length - 1;\n          if (index <= maxIndex) {\n            return mapIteratorValue(type, node.entries[this._reverse ? maxIndex - index : index]);\n          }\n        } else {\n          maxIndex = node.nodes.length - 1;\n          if (index <= maxIndex) {\n            var subNode = node.nodes[this._reverse ? maxIndex - index : index];\n            if (subNode) {\n              if (subNode.entry) {\n                return mapIteratorValue(type, subNode.entry);\n              }\n              stack = this._stack = mapIteratorFrame(subNode, stack);\n            }\n            continue;\n          }\n        }\n        stack = this._stack = this._stack.__prev;\n      }\n      return iteratorDone();\n    };\n\n\n  function mapIteratorValue(type, entry) {\n    return iteratorValue(type, entry[0], entry[1]);\n  }\n\n  function mapIteratorFrame(node, prev) {\n    return {\n      node: node,\n      index: 0,\n      __prev: prev\n    };\n  }\n\n  function makeMap(size, root, ownerID, hash) {\n    var map = Object.create(MapPrototype);\n    map.size = size;\n    map._root = root;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_MAP;\n  function emptyMap() {\n    return EMPTY_MAP || (EMPTY_MAP = makeMap(0));\n  }\n\n  function updateMap(map, k, v) {\n    var newRoot;\n    var newSize;\n    if (!map._root) {\n      if (v === NOT_SET) {\n        return map;\n      }\n      newSize = 1;\n      newRoot = new ArrayMapNode(map.__ownerID, [[k, v]]);\n    } else {\n      var didChangeSize = MakeRef(CHANGE_LENGTH);\n      var didAlter = MakeRef(DID_ALTER);\n      newRoot = updateNode(map._root, map.__ownerID, 0, undefined, k, v, didChangeSize, didAlter);\n      if (!didAlter.value) {\n        return map;\n      }\n      newSize = map.size + (didChangeSize.value ? v === NOT_SET ? -1 : 1 : 0);\n    }\n    if (map.__ownerID) {\n      map.size = newSize;\n      map._root = newRoot;\n      map.__hash = undefined;\n      map.__altered = true;\n      return map;\n    }\n    return newRoot ? makeMap(newSize, newRoot) : emptyMap();\n  }\n\n  function updateNode(node, ownerID, shift, keyHash, key, value, didChangeSize, didAlter) {\n    if (!node) {\n      if (value === NOT_SET) {\n        return node;\n      }\n      SetRef(didAlter);\n      SetRef(didChangeSize);\n      return new ValueNode(ownerID, keyHash, [key, value]);\n    }\n    return node.update(ownerID, shift, keyHash, key, value, didChangeSize, didAlter);\n  }\n\n  function isLeafNode(node) {\n    return node.constructor === ValueNode || node.constructor === HashCollisionNode;\n  }\n\n  function mergeIntoNode(node, ownerID, shift, keyHash, entry) {\n    if (node.keyHash === keyHash) {\n      return new HashCollisionNode(ownerID, keyHash, [node.entry, entry]);\n    }\n\n    var idx1 = (shift === 0 ? node.keyHash : node.keyHash >>> shift) & MASK;\n    var idx2 = (shift === 0 ? keyHash : keyHash >>> shift) & MASK;\n\n    var newNode;\n    var nodes = idx1 === idx2 ?\n      [mergeIntoNode(node, ownerID, shift + SHIFT, keyHash, entry)] :\n      ((newNode = new ValueNode(ownerID, keyHash, entry)), idx1 < idx2 ? [node, newNode] : [newNode, node]);\n\n    return new BitmapIndexedNode(ownerID, (1 << idx1) | (1 << idx2), nodes);\n  }\n\n  function createNodes(ownerID, entries, key, value) {\n    if (!ownerID) {\n      ownerID = new OwnerID();\n    }\n    var node = new ValueNode(ownerID, hash(key), [key, value]);\n    for (var ii = 0; ii < entries.length; ii++) {\n      var entry = entries[ii];\n      node = node.update(ownerID, 0, undefined, entry[0], entry[1]);\n    }\n    return node;\n  }\n\n  function packNodes(ownerID, nodes, count, excluding) {\n    var bitmap = 0;\n    var packedII = 0;\n    var packedNodes = new Array(count);\n    for (var ii = 0, bit = 1, len = nodes.length; ii < len; ii++, bit <<= 1) {\n      var node = nodes[ii];\n      if (node !== undefined && ii !== excluding) {\n        bitmap |= bit;\n        packedNodes[packedII++] = node;\n      }\n    }\n    return new BitmapIndexedNode(ownerID, bitmap, packedNodes);\n  }\n\n  function expandNodes(ownerID, nodes, bitmap, including, node) {\n    var count = 0;\n    var expandedNodes = new Array(SIZE);\n    for (var ii = 0; bitmap !== 0; ii++, bitmap >>>= 1) {\n      expandedNodes[ii] = bitmap & 1 ? nodes[count++] : undefined;\n    }\n    expandedNodes[including] = node;\n    return new HashArrayMapNode(ownerID, count + 1, expandedNodes);\n  }\n\n  function mergeIntoMapWith(map, merger, iterables) {\n    var iters = [];\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = KeyedIterable(value);\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    return mergeIntoCollectionWith(map, merger, iters);\n  }\n\n  function deepMerger(existing, value, key) {\n    return existing && existing.mergeDeep && isIterable(value) ?\n      existing.mergeDeep(value) :\n      is(existing, value) ? existing : value;\n  }\n\n  function deepMergerWith(merger) {\n    return function(existing, value, key)  {\n      if (existing && existing.mergeDeepWith && isIterable(value)) {\n        return existing.mergeDeepWith(merger, value);\n      }\n      var nextValue = merger(existing, value, key);\n      return is(existing, nextValue) ? existing : nextValue;\n    };\n  }\n\n  function mergeIntoCollectionWith(collection, merger, iters) {\n    iters = iters.filter(function(x ) {return x.size !== 0});\n    if (iters.length === 0) {\n      return collection;\n    }\n    if (collection.size === 0 && !collection.__ownerID && iters.length === 1) {\n      return collection.constructor(iters[0]);\n    }\n    return collection.withMutations(function(collection ) {\n      var mergeIntoMap = merger ?\n        function(value, key)  {\n          collection.update(key, NOT_SET, function(existing )\n            {return existing === NOT_SET ? value : merger(existing, value, key)}\n          );\n        } :\n        function(value, key)  {\n          collection.set(key, value);\n        }\n      for (var ii = 0; ii < iters.length; ii++) {\n        iters[ii].forEach(mergeIntoMap);\n      }\n    });\n  }\n\n  function updateInDeepMap(existing, keyPathIter, notSetValue, updater) {\n    var isNotSet = existing === NOT_SET;\n    var step = keyPathIter.next();\n    if (step.done) {\n      var existingValue = isNotSet ? notSetValue : existing;\n      var newValue = updater(existingValue);\n      return newValue === existingValue ? existing : newValue;\n    }\n    invariant(\n      isNotSet || (existing && existing.set),\n      'invalid keyPath'\n    );\n    var key = step.value;\n    var nextExisting = isNotSet ? NOT_SET : existing.get(key, NOT_SET);\n    var nextUpdated = updateInDeepMap(\n      nextExisting,\n      keyPathIter,\n      notSetValue,\n      updater\n    );\n    return nextUpdated === nextExisting ? existing :\n      nextUpdated === NOT_SET ? existing.remove(key) :\n      (isNotSet ? emptyMap() : existing).set(key, nextUpdated);\n  }\n\n  function popCount(x) {\n    x = x - ((x >> 1) & 0x55555555);\n    x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n    x = (x + (x >> 4)) & 0x0f0f0f0f;\n    x = x + (x >> 8);\n    x = x + (x >> 16);\n    return x & 0x7f;\n  }\n\n  function setIn(array, idx, val, canEdit) {\n    var newArray = canEdit ? array : arrCopy(array);\n    newArray[idx] = val;\n    return newArray;\n  }\n\n  function spliceIn(array, idx, val, canEdit) {\n    var newLen = array.length + 1;\n    if (canEdit && idx + 1 === newLen) {\n      array[idx] = val;\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        newArray[ii] = val;\n        after = -1;\n      } else {\n        newArray[ii] = array[ii + after];\n      }\n    }\n    return newArray;\n  }\n\n  function spliceOut(array, idx, canEdit) {\n    var newLen = array.length - 1;\n    if (canEdit && idx === newLen) {\n      array.pop();\n      return array;\n    }\n    var newArray = new Array(newLen);\n    var after = 0;\n    for (var ii = 0; ii < newLen; ii++) {\n      if (ii === idx) {\n        after = 1;\n      }\n      newArray[ii] = array[ii + after];\n    }\n    return newArray;\n  }\n\n  var MAX_ARRAY_MAP_SIZE = SIZE / 4;\n  var MAX_BITMAP_INDEXED_SIZE = SIZE / 2;\n  var MIN_HASH_ARRAY_MAP_SIZE = SIZE / 4;\n\n  createClass(List, IndexedCollection);\n\n    // @pragma Construction\n\n    function List(value) {\n      var empty = emptyList();\n      if (value === null || value === undefined) {\n        return empty;\n      }\n      if (isList(value)) {\n        return value;\n      }\n      var iter = IndexedIterable(value);\n      var size = iter.size;\n      if (size === 0) {\n        return empty;\n      }\n      assertNotInfinite(size);\n      if (size > 0 && size < SIZE) {\n        return makeList(0, size, SHIFT, null, new VNode(iter.toArray()));\n      }\n      return empty.withMutations(function(list ) {\n        list.setSize(size);\n        iter.forEach(function(v, i)  {return list.set(i, v)});\n      });\n    }\n\n    List.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    List.prototype.toString = function() {\n      return this.__toString('List [', ']');\n    };\n\n    // @pragma Access\n\n    List.prototype.get = function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      if (index >= 0 && index < this.size) {\n        index += this._origin;\n        var node = listNodeFor(this, index);\n        return node && node.array[index & MASK];\n      }\n      return notSetValue;\n    };\n\n    // @pragma Modification\n\n    List.prototype.set = function(index, value) {\n      return updateList(this, index, value);\n    };\n\n    List.prototype.remove = function(index) {\n      return !this.has(index) ? this :\n        index === 0 ? this.shift() :\n        index === this.size - 1 ? this.pop() :\n        this.splice(index, 1);\n    };\n\n    List.prototype.insert = function(index, value) {\n      return this.splice(index, 0, value);\n    };\n\n    List.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = this._origin = this._capacity = 0;\n        this._level = SHIFT;\n        this._root = this._tail = null;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyList();\n    };\n\n    List.prototype.push = function(/*...values*/) {\n      var values = arguments;\n      var oldSize = this.size;\n      return this.withMutations(function(list ) {\n        setListBounds(list, 0, oldSize + values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(oldSize + ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.pop = function() {\n      return setListBounds(this, 0, -1);\n    };\n\n    List.prototype.unshift = function(/*...values*/) {\n      var values = arguments;\n      return this.withMutations(function(list ) {\n        setListBounds(list, -values.length);\n        for (var ii = 0; ii < values.length; ii++) {\n          list.set(ii, values[ii]);\n        }\n      });\n    };\n\n    List.prototype.shift = function() {\n      return setListBounds(this, 1);\n    };\n\n    // @pragma Composition\n\n    List.prototype.merge = function(/*...iters*/) {\n      return mergeIntoListWith(this, undefined, arguments);\n    };\n\n    List.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, merger, iters);\n    };\n\n    List.prototype.mergeDeep = function(/*...iters*/) {\n      return mergeIntoListWith(this, deepMerger, arguments);\n    };\n\n    List.prototype.mergeDeepWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return mergeIntoListWith(this, deepMergerWith(merger), iters);\n    };\n\n    List.prototype.setSize = function(size) {\n      return setListBounds(this, 0, size);\n    };\n\n    // @pragma Iteration\n\n    List.prototype.slice = function(begin, end) {\n      var size = this.size;\n      if (wholeSlice(begin, end, size)) {\n        return this;\n      }\n      return setListBounds(\n        this,\n        resolveBegin(begin, size),\n        resolveEnd(end, size)\n      );\n    };\n\n    List.prototype.__iterator = function(type, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      return new Iterator(function()  {\n        var value = values();\n        return value === DONE ?\n          iteratorDone() :\n          iteratorValue(type, index++, value);\n      });\n    };\n\n    List.prototype.__iterate = function(fn, reverse) {\n      var index = 0;\n      var values = iterateList(this, reverse);\n      var value;\n      while ((value = values()) !== DONE) {\n        if (fn(value, index++, this) === false) {\n          break;\n        }\n      }\n      return index;\n    };\n\n    List.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        return this;\n      }\n      return makeList(this._origin, this._capacity, this._level, this._root, this._tail, ownerID, this.__hash);\n    };\n\n\n  function isList(maybeList) {\n    return !!(maybeList && maybeList[IS_LIST_SENTINEL]);\n  }\n\n  List.isList = isList;\n\n  var IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@';\n\n  var ListPrototype = List.prototype;\n  ListPrototype[IS_LIST_SENTINEL] = true;\n  ListPrototype[DELETE] = ListPrototype.remove;\n  ListPrototype.setIn = MapPrototype.setIn;\n  ListPrototype.deleteIn =\n  ListPrototype.removeIn = MapPrototype.removeIn;\n  ListPrototype.update = MapPrototype.update;\n  ListPrototype.updateIn = MapPrototype.updateIn;\n  ListPrototype.mergeIn = MapPrototype.mergeIn;\n  ListPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  ListPrototype.withMutations = MapPrototype.withMutations;\n  ListPrototype.asMutable = MapPrototype.asMutable;\n  ListPrototype.asImmutable = MapPrototype.asImmutable;\n  ListPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n\n    function VNode(array, ownerID) {\n      this.array = array;\n      this.ownerID = ownerID;\n    }\n\n    // TODO: seems like these methods are very similar\n\n    VNode.prototype.removeBefore = function(ownerID, level, index) {\n      if (index === level ? 1 << level : 0 || this.array.length === 0) {\n        return this;\n      }\n      var originIndex = (index >>> level) & MASK;\n      if (originIndex >= this.array.length) {\n        return new VNode([], ownerID);\n      }\n      var removingFirst = originIndex === 0;\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[originIndex];\n        newChild = oldChild && oldChild.removeBefore(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && removingFirst) {\n          return this;\n        }\n      }\n      if (removingFirst && !newChild) {\n        return this;\n      }\n      var editable = editableVNode(this, ownerID);\n      if (!removingFirst) {\n        for (var ii = 0; ii < originIndex; ii++) {\n          editable.array[ii] = undefined;\n        }\n      }\n      if (newChild) {\n        editable.array[originIndex] = newChild;\n      }\n      return editable;\n    };\n\n    VNode.prototype.removeAfter = function(ownerID, level, index) {\n      if (index === (level ? 1 << level : 0) || this.array.length === 0) {\n        return this;\n      }\n      var sizeIndex = ((index - 1) >>> level) & MASK;\n      if (sizeIndex >= this.array.length) {\n        return this;\n      }\n\n      var newChild;\n      if (level > 0) {\n        var oldChild = this.array[sizeIndex];\n        newChild = oldChild && oldChild.removeAfter(ownerID, level - SHIFT, index);\n        if (newChild === oldChild && sizeIndex === this.array.length - 1) {\n          return this;\n        }\n      }\n\n      var editable = editableVNode(this, ownerID);\n      editable.array.splice(sizeIndex + 1);\n      if (newChild) {\n        editable.array[sizeIndex] = newChild;\n      }\n      return editable;\n    };\n\n\n\n  var DONE = {};\n\n  function iterateList(list, reverse) {\n    var left = list._origin;\n    var right = list._capacity;\n    var tailPos = getTailOffset(right);\n    var tail = list._tail;\n\n    return iterateNodeOrLeaf(list._root, list._level, 0);\n\n    function iterateNodeOrLeaf(node, level, offset) {\n      return level === 0 ?\n        iterateLeaf(node, offset) :\n        iterateNode(node, level, offset);\n    }\n\n    function iterateLeaf(node, offset) {\n      var array = offset === tailPos ? tail && tail.array : node && node.array;\n      var from = offset > left ? 0 : left - offset;\n      var to = right - offset;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        if (from === to) {\n          return DONE;\n        }\n        var idx = reverse ? --to : from++;\n        return array && array[idx];\n      };\n    }\n\n    function iterateNode(node, level, offset) {\n      var values;\n      var array = node && node.array;\n      var from = offset > left ? 0 : (left - offset) >> level;\n      var to = ((right - offset) >> level) + 1;\n      if (to > SIZE) {\n        to = SIZE;\n      }\n      return function()  {\n        do {\n          if (values) {\n            var value = values();\n            if (value !== DONE) {\n              return value;\n            }\n            values = null;\n          }\n          if (from === to) {\n            return DONE;\n          }\n          var idx = reverse ? --to : from++;\n          values = iterateNodeOrLeaf(\n            array && array[idx], level - SHIFT, offset + (idx << level)\n          );\n        } while (true);\n      };\n    }\n  }\n\n  function makeList(origin, capacity, level, root, tail, ownerID, hash) {\n    var list = Object.create(ListPrototype);\n    list.size = capacity - origin;\n    list._origin = origin;\n    list._capacity = capacity;\n    list._level = level;\n    list._root = root;\n    list._tail = tail;\n    list.__ownerID = ownerID;\n    list.__hash = hash;\n    list.__altered = false;\n    return list;\n  }\n\n  var EMPTY_LIST;\n  function emptyList() {\n    return EMPTY_LIST || (EMPTY_LIST = makeList(0, 0, SHIFT));\n  }\n\n  function updateList(list, index, value) {\n    index = wrapIndex(list, index);\n\n    if (index !== index) {\n      return list;\n    }\n\n    if (index >= list.size || index < 0) {\n      return list.withMutations(function(list ) {\n        index < 0 ?\n          setListBounds(list, index).set(0, value) :\n          setListBounds(list, 0, index + 1).set(index, value)\n      });\n    }\n\n    index += list._origin;\n\n    var newTail = list._tail;\n    var newRoot = list._root;\n    var didAlter = MakeRef(DID_ALTER);\n    if (index >= getTailOffset(list._capacity)) {\n      newTail = updateVNode(newTail, list.__ownerID, 0, index, value, didAlter);\n    } else {\n      newRoot = updateVNode(newRoot, list.__ownerID, list._level, index, value, didAlter);\n    }\n\n    if (!didAlter.value) {\n      return list;\n    }\n\n    if (list.__ownerID) {\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(list._origin, list._capacity, list._level, newRoot, newTail);\n  }\n\n  function updateVNode(node, ownerID, level, index, value, didAlter) {\n    var idx = (index >>> level) & MASK;\n    var nodeHas = node && idx < node.array.length;\n    if (!nodeHas && value === undefined) {\n      return node;\n    }\n\n    var newNode;\n\n    if (level > 0) {\n      var lowerNode = node && node.array[idx];\n      var newLowerNode = updateVNode(lowerNode, ownerID, level - SHIFT, index, value, didAlter);\n      if (newLowerNode === lowerNode) {\n        return node;\n      }\n      newNode = editableVNode(node, ownerID);\n      newNode.array[idx] = newLowerNode;\n      return newNode;\n    }\n\n    if (nodeHas && node.array[idx] === value) {\n      return node;\n    }\n\n    SetRef(didAlter);\n\n    newNode = editableVNode(node, ownerID);\n    if (value === undefined && idx === newNode.array.length - 1) {\n      newNode.array.pop();\n    } else {\n      newNode.array[idx] = value;\n    }\n    return newNode;\n  }\n\n  function editableVNode(node, ownerID) {\n    if (ownerID && node && ownerID === node.ownerID) {\n      return node;\n    }\n    return new VNode(node ? node.array.slice() : [], ownerID);\n  }\n\n  function listNodeFor(list, rawIndex) {\n    if (rawIndex >= getTailOffset(list._capacity)) {\n      return list._tail;\n    }\n    if (rawIndex < 1 << (list._level + SHIFT)) {\n      var node = list._root;\n      var level = list._level;\n      while (node && level > 0) {\n        node = node.array[(rawIndex >>> level) & MASK];\n        level -= SHIFT;\n      }\n      return node;\n    }\n  }\n\n  function setListBounds(list, begin, end) {\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n    var owner = list.__ownerID || new OwnerID();\n    var oldOrigin = list._origin;\n    var oldCapacity = list._capacity;\n    var newOrigin = oldOrigin + begin;\n    var newCapacity = end === undefined ? oldCapacity : end < 0 ? oldCapacity + end : oldOrigin + end;\n    if (newOrigin === oldOrigin && newCapacity === oldCapacity) {\n      return list;\n    }\n\n    // If it's going to end after it starts, it's empty.\n    if (newOrigin >= newCapacity) {\n      return list.clear();\n    }\n\n    var newLevel = list._level;\n    var newRoot = list._root;\n\n    // New origin might need creating a higher root.\n    var offsetShift = 0;\n    while (newOrigin + offsetShift < 0) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [undefined, newRoot] : [], owner);\n      newLevel += SHIFT;\n      offsetShift += 1 << newLevel;\n    }\n    if (offsetShift) {\n      newOrigin += offsetShift;\n      oldOrigin += offsetShift;\n      newCapacity += offsetShift;\n      oldCapacity += offsetShift;\n    }\n\n    var oldTailOffset = getTailOffset(oldCapacity);\n    var newTailOffset = getTailOffset(newCapacity);\n\n    // New size might need creating a higher root.\n    while (newTailOffset >= 1 << (newLevel + SHIFT)) {\n      newRoot = new VNode(newRoot && newRoot.array.length ? [newRoot] : [], owner);\n      newLevel += SHIFT;\n    }\n\n    // Locate or create the new tail.\n    var oldTail = list._tail;\n    var newTail = newTailOffset < oldTailOffset ?\n      listNodeFor(list, newCapacity - 1) :\n      newTailOffset > oldTailOffset ? new VNode([], owner) : oldTail;\n\n    // Merge Tail into tree.\n    if (oldTail && newTailOffset > oldTailOffset && newOrigin < oldCapacity && oldTail.array.length) {\n      newRoot = editableVNode(newRoot, owner);\n      var node = newRoot;\n      for (var level = newLevel; level > SHIFT; level -= SHIFT) {\n        var idx = (oldTailOffset >>> level) & MASK;\n        node = node.array[idx] = editableVNode(node.array[idx], owner);\n      }\n      node.array[(oldTailOffset >>> SHIFT) & MASK] = oldTail;\n    }\n\n    // If the size has been reduced, there's a chance the tail needs to be trimmed.\n    if (newCapacity < oldCapacity) {\n      newTail = newTail && newTail.removeAfter(owner, 0, newCapacity);\n    }\n\n    // If the new origin is within the tail, then we do not need a root.\n    if (newOrigin >= newTailOffset) {\n      newOrigin -= newTailOffset;\n      newCapacity -= newTailOffset;\n      newLevel = SHIFT;\n      newRoot = null;\n      newTail = newTail && newTail.removeBefore(owner, 0, newOrigin);\n\n    // Otherwise, if the root has been trimmed, garbage collect.\n    } else if (newOrigin > oldOrigin || newTailOffset < oldTailOffset) {\n      offsetShift = 0;\n\n      // Identify the new top root node of the subtree of the old root.\n      while (newRoot) {\n        var beginIndex = (newOrigin >>> newLevel) & MASK;\n        if (beginIndex !== (newTailOffset >>> newLevel) & MASK) {\n          break;\n        }\n        if (beginIndex) {\n          offsetShift += (1 << newLevel) * beginIndex;\n        }\n        newLevel -= SHIFT;\n        newRoot = newRoot.array[beginIndex];\n      }\n\n      // Trim the new sides of the new root.\n      if (newRoot && newOrigin > oldOrigin) {\n        newRoot = newRoot.removeBefore(owner, newLevel, newOrigin - offsetShift);\n      }\n      if (newRoot && newTailOffset < oldTailOffset) {\n        newRoot = newRoot.removeAfter(owner, newLevel, newTailOffset - offsetShift);\n      }\n      if (offsetShift) {\n        newOrigin -= offsetShift;\n        newCapacity -= offsetShift;\n      }\n    }\n\n    if (list.__ownerID) {\n      list.size = newCapacity - newOrigin;\n      list._origin = newOrigin;\n      list._capacity = newCapacity;\n      list._level = newLevel;\n      list._root = newRoot;\n      list._tail = newTail;\n      list.__hash = undefined;\n      list.__altered = true;\n      return list;\n    }\n    return makeList(newOrigin, newCapacity, newLevel, newRoot, newTail);\n  }\n\n  function mergeIntoListWith(list, merger, iterables) {\n    var iters = [];\n    var maxSize = 0;\n    for (var ii = 0; ii < iterables.length; ii++) {\n      var value = iterables[ii];\n      var iter = IndexedIterable(value);\n      if (iter.size > maxSize) {\n        maxSize = iter.size;\n      }\n      if (!isIterable(value)) {\n        iter = iter.map(function(v ) {return fromJS(v)});\n      }\n      iters.push(iter);\n    }\n    if (maxSize > list.size) {\n      list = list.setSize(maxSize);\n    }\n    return mergeIntoCollectionWith(list, merger, iters);\n  }\n\n  function getTailOffset(size) {\n    return size < SIZE ? 0 : (((size - 1) >>> SHIFT) << SHIFT);\n  }\n\n  createClass(OrderedMap, Map);\n\n    // @pragma Construction\n\n    function OrderedMap(value) {\n      return value === null || value === undefined ? emptyOrderedMap() :\n        isOrderedMap(value) ? value :\n        emptyOrderedMap().withMutations(function(map ) {\n          var iter = KeyedIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v, k)  {return map.set(k, v)});\n        });\n    }\n\n    OrderedMap.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedMap.prototype.toString = function() {\n      return this.__toString('OrderedMap {', '}');\n    };\n\n    // @pragma Access\n\n    OrderedMap.prototype.get = function(k, notSetValue) {\n      var index = this._map.get(k);\n      return index !== undefined ? this._list.get(index)[1] : notSetValue;\n    };\n\n    // @pragma Modification\n\n    OrderedMap.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._map.clear();\n        this._list.clear();\n        return this;\n      }\n      return emptyOrderedMap();\n    };\n\n    OrderedMap.prototype.set = function(k, v) {\n      return updateOrderedMap(this, k, v);\n    };\n\n    OrderedMap.prototype.remove = function(k) {\n      return updateOrderedMap(this, k, NOT_SET);\n    };\n\n    OrderedMap.prototype.wasAltered = function() {\n      return this._map.wasAltered() || this._list.wasAltered();\n    };\n\n    OrderedMap.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._list.__iterate(\n        function(entry ) {return entry && fn(entry[1], entry[0], this$0)},\n        reverse\n      );\n    };\n\n    OrderedMap.prototype.__iterator = function(type, reverse) {\n      return this._list.fromEntrySeq().__iterator(type, reverse);\n    };\n\n    OrderedMap.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      var newList = this._list.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        this._list = newList;\n        return this;\n      }\n      return makeOrderedMap(newMap, newList, ownerID, this.__hash);\n    };\n\n\n  function isOrderedMap(maybeOrderedMap) {\n    return isMap(maybeOrderedMap) && isOrdered(maybeOrderedMap);\n  }\n\n  OrderedMap.isOrderedMap = isOrderedMap;\n\n  OrderedMap.prototype[IS_ORDERED_SENTINEL] = true;\n  OrderedMap.prototype[DELETE] = OrderedMap.prototype.remove;\n\n\n\n  function makeOrderedMap(map, list, ownerID, hash) {\n    var omap = Object.create(OrderedMap.prototype);\n    omap.size = map ? map.size : 0;\n    omap._map = map;\n    omap._list = list;\n    omap.__ownerID = ownerID;\n    omap.__hash = hash;\n    return omap;\n  }\n\n  var EMPTY_ORDERED_MAP;\n  function emptyOrderedMap() {\n    return EMPTY_ORDERED_MAP || (EMPTY_ORDERED_MAP = makeOrderedMap(emptyMap(), emptyList()));\n  }\n\n  function updateOrderedMap(omap, k, v) {\n    var map = omap._map;\n    var list = omap._list;\n    var i = map.get(k);\n    var has = i !== undefined;\n    var newMap;\n    var newList;\n    if (v === NOT_SET) { // removed\n      if (!has) {\n        return omap;\n      }\n      if (list.size >= SIZE && list.size >= map.size * 2) {\n        newList = list.filter(function(entry, idx)  {return entry !== undefined && i !== idx});\n        newMap = newList.toKeyedSeq().map(function(entry ) {return entry[0]}).flip().toMap();\n        if (omap.__ownerID) {\n          newMap.__ownerID = newList.__ownerID = omap.__ownerID;\n        }\n      } else {\n        newMap = map.remove(k);\n        newList = i === list.size - 1 ? list.pop() : list.set(i, undefined);\n      }\n    } else {\n      if (has) {\n        if (v === list.get(i)[1]) {\n          return omap;\n        }\n        newMap = map;\n        newList = list.set(i, [k, v]);\n      } else {\n        newMap = map.set(k, list.size);\n        newList = list.set(list.size, [k, v]);\n      }\n    }\n    if (omap.__ownerID) {\n      omap.size = newMap.size;\n      omap._map = newMap;\n      omap._list = newList;\n      omap.__hash = undefined;\n      return omap;\n    }\n    return makeOrderedMap(newMap, newList);\n  }\n\n  createClass(ToKeyedSequence, KeyedSeq);\n    function ToKeyedSequence(indexed, useKeys) {\n      this._iter = indexed;\n      this._useKeys = useKeys;\n      this.size = indexed.size;\n    }\n\n    ToKeyedSequence.prototype.get = function(key, notSetValue) {\n      return this._iter.get(key, notSetValue);\n    };\n\n    ToKeyedSequence.prototype.has = function(key) {\n      return this._iter.has(key);\n    };\n\n    ToKeyedSequence.prototype.valueSeq = function() {\n      return this._iter.valueSeq();\n    };\n\n    ToKeyedSequence.prototype.reverse = function() {var this$0 = this;\n      var reversedSequence = reverseFactory(this, true);\n      if (!this._useKeys) {\n        reversedSequence.valueSeq = function()  {return this$0._iter.toSeq().reverse()};\n      }\n      return reversedSequence;\n    };\n\n    ToKeyedSequence.prototype.map = function(mapper, context) {var this$0 = this;\n      var mappedSequence = mapFactory(this, mapper, context);\n      if (!this._useKeys) {\n        mappedSequence.valueSeq = function()  {return this$0._iter.toSeq().map(mapper, context)};\n      }\n      return mappedSequence;\n    };\n\n    ToKeyedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var ii;\n      return this._iter.__iterate(\n        this._useKeys ?\n          function(v, k)  {return fn(v, k, this$0)} :\n          ((ii = reverse ? resolveSize(this) : 0),\n            function(v ) {return fn(v, reverse ? --ii : ii++, this$0)}),\n        reverse\n      );\n    };\n\n    ToKeyedSequence.prototype.__iterator = function(type, reverse) {\n      if (this._useKeys) {\n        return this._iter.__iterator(type, reverse);\n      }\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var ii = reverse ? resolveSize(this) : 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, reverse ? --ii : ii++, step.value, step);\n      });\n    };\n\n  ToKeyedSequence.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n  createClass(ToIndexedSequence, IndexedSeq);\n    function ToIndexedSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToIndexedSequence.prototype.includes = function(value) {\n      return this._iter.includes(value);\n    };\n\n    ToIndexedSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      return this._iter.__iterate(function(v ) {return fn(v, iterations++, this$0)}, reverse);\n    };\n\n    ToIndexedSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, iterations++, step.value, step)\n      });\n    };\n\n\n\n  createClass(ToSetSequence, SetSeq);\n    function ToSetSequence(iter) {\n      this._iter = iter;\n      this.size = iter.size;\n    }\n\n    ToSetSequence.prototype.has = function(key) {\n      return this._iter.includes(key);\n    };\n\n    ToSetSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(v ) {return fn(v, v, this$0)}, reverse);\n    };\n\n    ToSetSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        return step.done ? step :\n          iteratorValue(type, step.value, step.value, step);\n      });\n    };\n\n\n\n  createClass(FromEntriesSequence, KeyedSeq);\n    function FromEntriesSequence(entries) {\n      this._iter = entries;\n      this.size = entries.size;\n    }\n\n    FromEntriesSequence.prototype.entrySeq = function() {\n      return this._iter.toSeq();\n    };\n\n    FromEntriesSequence.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._iter.__iterate(function(entry ) {\n        // Check if entry exists first so array access doesn't throw for holes\n        // in the parent iteration.\n        if (entry) {\n          validateEntry(entry);\n          var indexedIterable = isIterable(entry);\n          return fn(\n            indexedIterable ? entry.get(1) : entry[1],\n            indexedIterable ? entry.get(0) : entry[0],\n            this$0\n          );\n        }\n      }, reverse);\n    };\n\n    FromEntriesSequence.prototype.__iterator = function(type, reverse) {\n      var iterator = this._iter.__iterator(ITERATE_VALUES, reverse);\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          // Check if entry exists first so array access doesn't throw for holes\n          // in the parent iteration.\n          if (entry) {\n            validateEntry(entry);\n            var indexedIterable = isIterable(entry);\n            return iteratorValue(\n              type,\n              indexedIterable ? entry.get(0) : entry[0],\n              indexedIterable ? entry.get(1) : entry[1],\n              step\n            );\n          }\n        }\n      });\n    };\n\n\n  ToIndexedSequence.prototype.cacheResult =\n  ToKeyedSequence.prototype.cacheResult =\n  ToSetSequence.prototype.cacheResult =\n  FromEntriesSequence.prototype.cacheResult =\n    cacheResultThrough;\n\n\n  function flipFactory(iterable) {\n    var flipSequence = makeSequence(iterable);\n    flipSequence._iter = iterable;\n    flipSequence.size = iterable.size;\n    flipSequence.flip = function()  {return iterable};\n    flipSequence.reverse = function () {\n      var reversedSequence = iterable.reverse.apply(this); // super.reverse()\n      reversedSequence.flip = function()  {return iterable.reverse()};\n      return reversedSequence;\n    };\n    flipSequence.has = function(key ) {return iterable.includes(key)};\n    flipSequence.includes = function(key ) {return iterable.has(key)};\n    flipSequence.cacheResult = cacheResultThrough;\n    flipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(k, v, this$0) !== false}, reverse);\n    }\n    flipSequence.__iteratorUncached = function(type, reverse) {\n      if (type === ITERATE_ENTRIES) {\n        var iterator = iterable.__iterator(type, reverse);\n        return new Iterator(function()  {\n          var step = iterator.next();\n          if (!step.done) {\n            var k = step.value[0];\n            step.value[0] = step.value[1];\n            step.value[1] = k;\n          }\n          return step;\n        });\n      }\n      return iterable.__iterator(\n        type === ITERATE_VALUES ? ITERATE_KEYS : ITERATE_VALUES,\n        reverse\n      );\n    }\n    return flipSequence;\n  }\n\n\n  function mapFactory(iterable, mapper, context) {\n    var mappedSequence = makeSequence(iterable);\n    mappedSequence.size = iterable.size;\n    mappedSequence.has = function(key ) {return iterable.has(key)};\n    mappedSequence.get = function(key, notSetValue)  {\n      var v = iterable.get(key, NOT_SET);\n      return v === NOT_SET ?\n        notSetValue :\n        mapper.call(context, v, key, iterable);\n    };\n    mappedSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(\n        function(v, k, c)  {return fn(mapper.call(context, v, k, c), k, this$0) !== false},\n        reverse\n      );\n    }\n    mappedSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      return new Iterator(function()  {\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var key = entry[0];\n        return iteratorValue(\n          type,\n          key,\n          mapper.call(context, entry[1], key, iterable),\n          step\n        );\n      });\n    }\n    return mappedSequence;\n  }\n\n\n  function reverseFactory(iterable, useKeys) {\n    var reversedSequence = makeSequence(iterable);\n    reversedSequence._iter = iterable;\n    reversedSequence.size = iterable.size;\n    reversedSequence.reverse = function()  {return iterable};\n    if (iterable.flip) {\n      reversedSequence.flip = function () {\n        var flipSequence = flipFactory(iterable);\n        flipSequence.reverse = function()  {return iterable.flip()};\n        return flipSequence;\n      };\n    }\n    reversedSequence.get = function(key, notSetValue) \n      {return iterable.get(useKeys ? key : -1 - key, notSetValue)};\n    reversedSequence.has = function(key )\n      {return iterable.has(useKeys ? key : -1 - key)};\n    reversedSequence.includes = function(value ) {return iterable.includes(value)};\n    reversedSequence.cacheResult = cacheResultThrough;\n    reversedSequence.__iterate = function (fn, reverse) {var this$0 = this;\n      return iterable.__iterate(function(v, k)  {return fn(v, k, this$0)}, !reverse);\n    };\n    reversedSequence.__iterator =\n      function(type, reverse)  {return iterable.__iterator(type, !reverse)};\n    return reversedSequence;\n  }\n\n\n  function filterFactory(iterable, predicate, context, useKeys) {\n    var filterSequence = makeSequence(iterable);\n    if (useKeys) {\n      filterSequence.has = function(key ) {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && !!predicate.call(context, v, key, iterable);\n      };\n      filterSequence.get = function(key, notSetValue)  {\n        var v = iterable.get(key, NOT_SET);\n        return v !== NOT_SET && predicate.call(context, v, key, iterable) ?\n          v : notSetValue;\n      };\n    }\n    filterSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      }, reverse);\n      return iterations;\n    };\n    filterSequence.__iteratorUncached = function (type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (true) {\n          var step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n          var entry = step.value;\n          var key = entry[0];\n          var value = entry[1];\n          if (predicate.call(context, value, key, iterable)) {\n            return iteratorValue(type, useKeys ? key : iterations++, value, step);\n          }\n        }\n      });\n    }\n    return filterSequence;\n  }\n\n\n  function countByFactory(iterable, grouper, context) {\n    var groups = Map().asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        0,\n        function(a ) {return a + 1}\n      );\n    });\n    return groups.asImmutable();\n  }\n\n\n  function groupByFactory(iterable, grouper, context) {\n    var isKeyedIter = isKeyed(iterable);\n    var groups = (isOrdered(iterable) ? OrderedMap() : Map()).asMutable();\n    iterable.__iterate(function(v, k)  {\n      groups.update(\n        grouper.call(context, v, k, iterable),\n        function(a ) {return (a = a || [], a.push(isKeyedIter ? [k, v] : v), a)}\n      );\n    });\n    var coerce = iterableClass(iterable);\n    return groups.map(function(arr ) {return reify(iterable, coerce(arr))});\n  }\n\n\n  function sliceFactory(iterable, begin, end, useKeys) {\n    var originalSize = iterable.size;\n\n    // Sanitize begin & end using this shorthand for ToInt32(argument)\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toint32\n    if (begin !== undefined) {\n      begin = begin | 0;\n    }\n    if (end !== undefined) {\n      end = end | 0;\n    }\n\n    if (wholeSlice(begin, end, originalSize)) {\n      return iterable;\n    }\n\n    var resolvedBegin = resolveBegin(begin, originalSize);\n    var resolvedEnd = resolveEnd(end, originalSize);\n\n    // begin or end will be NaN if they were provided as negative numbers and\n    // this iterable's size is unknown. In that case, cache first so there is\n    // a known size and these do not resolve to NaN.\n    if (resolvedBegin !== resolvedBegin || resolvedEnd !== resolvedEnd) {\n      return sliceFactory(iterable.toSeq().cacheResult(), begin, end, useKeys);\n    }\n\n    // Note: resolvedEnd is undefined when the original sequence's length is\n    // unknown and this slice did not supply an end and should contain all\n    // elements after resolvedBegin.\n    // In that case, resolvedSize will be NaN and sliceSize will remain undefined.\n    var resolvedSize = resolvedEnd - resolvedBegin;\n    var sliceSize;\n    if (resolvedSize === resolvedSize) {\n      sliceSize = resolvedSize < 0 ? 0 : resolvedSize;\n    }\n\n    var sliceSeq = makeSequence(iterable);\n\n    // If iterable.size is undefined, the size of the realized sliceSeq is\n    // unknown at this point unless the number of items to slice is 0\n    sliceSeq.size = sliceSize === 0 ? sliceSize : iterable.size && sliceSize || undefined;\n\n    if (!useKeys && isSeq(iterable) && sliceSize >= 0) {\n      sliceSeq.get = function (index, notSetValue) {\n        index = wrapIndex(this, index);\n        return index >= 0 && index < sliceSize ?\n          iterable.get(index + resolvedBegin, notSetValue) :\n          notSetValue;\n      }\n    }\n\n    sliceSeq.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (sliceSize === 0) {\n        return 0;\n      }\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var skipped = 0;\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k)  {\n        if (!(isSkipping && (isSkipping = skipped++ < resolvedBegin))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0) !== false &&\n                 iterations !== sliceSize;\n        }\n      });\n      return iterations;\n    };\n\n    sliceSeq.__iteratorUncached = function(type, reverse) {\n      if (sliceSize !== 0 && reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      // Don't bother instantiating parent iterator if taking 0.\n      var iterator = sliceSize !== 0 && iterable.__iterator(type, reverse);\n      var skipped = 0;\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (skipped++ < resolvedBegin) {\n          iterator.next();\n        }\n        if (++iterations > sliceSize) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (useKeys || type === ITERATE_VALUES) {\n          return step;\n        } else if (type === ITERATE_KEYS) {\n          return iteratorValue(type, iterations - 1, undefined, step);\n        } else {\n          return iteratorValue(type, iterations - 1, step.value[1], step);\n        }\n      });\n    }\n\n    return sliceSeq;\n  }\n\n\n  function takeWhileFactory(iterable, predicate, context) {\n    var takeSequence = makeSequence(iterable);\n    takeSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c) \n        {return predicate.call(context, v, k, c) && ++iterations && fn(v, k, this$0)}\n      );\n      return iterations;\n    };\n    takeSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var iterating = true;\n      return new Iterator(function()  {\n        if (!iterating) {\n          return iteratorDone();\n        }\n        var step = iterator.next();\n        if (step.done) {\n          return step;\n        }\n        var entry = step.value;\n        var k = entry[0];\n        var v = entry[1];\n        if (!predicate.call(context, v, k, this$0)) {\n          iterating = false;\n          return iteratorDone();\n        }\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return takeSequence;\n  }\n\n\n  function skipWhileFactory(iterable, predicate, context, useKeys) {\n    var skipSequence = makeSequence(iterable);\n    skipSequence.__iterateUncached = function (fn, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterate(fn, reverse);\n      }\n      var isSkipping = true;\n      var iterations = 0;\n      iterable.__iterate(function(v, k, c)  {\n        if (!(isSkipping && (isSkipping = predicate.call(context, v, k, c)))) {\n          iterations++;\n          return fn(v, useKeys ? k : iterations - 1, this$0);\n        }\n      });\n      return iterations;\n    };\n    skipSequence.__iteratorUncached = function(type, reverse) {var this$0 = this;\n      if (reverse) {\n        return this.cacheResult().__iterator(type, reverse);\n      }\n      var iterator = iterable.__iterator(ITERATE_ENTRIES, reverse);\n      var skipping = true;\n      var iterations = 0;\n      return new Iterator(function()  {\n        var step, k, v;\n        do {\n          step = iterator.next();\n          if (step.done) {\n            if (useKeys || type === ITERATE_VALUES) {\n              return step;\n            } else if (type === ITERATE_KEYS) {\n              return iteratorValue(type, iterations++, undefined, step);\n            } else {\n              return iteratorValue(type, iterations++, step.value[1], step);\n            }\n          }\n          var entry = step.value;\n          k = entry[0];\n          v = entry[1];\n          skipping && (skipping = predicate.call(context, v, k, this$0));\n        } while (skipping);\n        return type === ITERATE_ENTRIES ? step :\n          iteratorValue(type, k, v, step);\n      });\n    };\n    return skipSequence;\n  }\n\n\n  function concatFactory(iterable, values) {\n    var isKeyedIterable = isKeyed(iterable);\n    var iters = [iterable].concat(values).map(function(v ) {\n      if (!isIterable(v)) {\n        v = isKeyedIterable ?\n          keyedSeqFromValue(v) :\n          indexedSeqFromValue(Array.isArray(v) ? v : [v]);\n      } else if (isKeyedIterable) {\n        v = KeyedIterable(v);\n      }\n      return v;\n    }).filter(function(v ) {return v.size !== 0});\n\n    if (iters.length === 0) {\n      return iterable;\n    }\n\n    if (iters.length === 1) {\n      var singleton = iters[0];\n      if (singleton === iterable ||\n          isKeyedIterable && isKeyed(singleton) ||\n          isIndexed(iterable) && isIndexed(singleton)) {\n        return singleton;\n      }\n    }\n\n    var concatSeq = new ArraySeq(iters);\n    if (isKeyedIterable) {\n      concatSeq = concatSeq.toKeyedSeq();\n    } else if (!isIndexed(iterable)) {\n      concatSeq = concatSeq.toSetSeq();\n    }\n    concatSeq = concatSeq.flatten(true);\n    concatSeq.size = iters.reduce(\n      function(sum, seq)  {\n        if (sum !== undefined) {\n          var size = seq.size;\n          if (size !== undefined) {\n            return sum + size;\n          }\n        }\n      },\n      0\n    );\n    return concatSeq;\n  }\n\n\n  function flattenFactory(iterable, depth, useKeys) {\n    var flatSequence = makeSequence(iterable);\n    flatSequence.__iterateUncached = function(fn, reverse) {\n      var iterations = 0;\n      var stopped = false;\n      function flatDeep(iter, currentDepth) {var this$0 = this;\n        iter.__iterate(function(v, k)  {\n          if ((!depth || currentDepth < depth) && isIterable(v)) {\n            flatDeep(v, currentDepth + 1);\n          } else if (fn(v, useKeys ? k : iterations++, this$0) === false) {\n            stopped = true;\n          }\n          return !stopped;\n        }, reverse);\n      }\n      flatDeep(iterable, 0);\n      return iterations;\n    }\n    flatSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(type, reverse);\n      var stack = [];\n      var iterations = 0;\n      return new Iterator(function()  {\n        while (iterator) {\n          var step = iterator.next();\n          if (step.done !== false) {\n            iterator = stack.pop();\n            continue;\n          }\n          var v = step.value;\n          if (type === ITERATE_ENTRIES) {\n            v = v[1];\n          }\n          if ((!depth || stack.length < depth) && isIterable(v)) {\n            stack.push(iterator);\n            iterator = v.__iterator(type, reverse);\n          } else {\n            return useKeys ? step : iteratorValue(type, iterations++, v, step);\n          }\n        }\n        return iteratorDone();\n      });\n    }\n    return flatSequence;\n  }\n\n\n  function flatMapFactory(iterable, mapper, context) {\n    var coerce = iterableClass(iterable);\n    return iterable.toSeq().map(\n      function(v, k)  {return coerce(mapper.call(context, v, k, iterable))}\n    ).flatten(true);\n  }\n\n\n  function interposeFactory(iterable, separator) {\n    var interposedSequence = makeSequence(iterable);\n    interposedSequence.size = iterable.size && iterable.size * 2 -1;\n    interposedSequence.__iterateUncached = function(fn, reverse) {var this$0 = this;\n      var iterations = 0;\n      iterable.__iterate(function(v, k) \n        {return (!iterations || fn(separator, iterations++, this$0) !== false) &&\n        fn(v, iterations++, this$0) !== false},\n        reverse\n      );\n      return iterations;\n    };\n    interposedSequence.__iteratorUncached = function(type, reverse) {\n      var iterator = iterable.__iterator(ITERATE_VALUES, reverse);\n      var iterations = 0;\n      var step;\n      return new Iterator(function()  {\n        if (!step || iterations % 2) {\n          step = iterator.next();\n          if (step.done) {\n            return step;\n          }\n        }\n        return iterations % 2 ?\n          iteratorValue(type, iterations++, separator) :\n          iteratorValue(type, iterations++, step.value, step);\n      });\n    };\n    return interposedSequence;\n  }\n\n\n  function sortFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    var isKeyedIterable = isKeyed(iterable);\n    var index = 0;\n    var entries = iterable.toSeq().map(\n      function(v, k)  {return [k, v, index++, mapper ? mapper(v, k, iterable) : v]}\n    ).toArray();\n    entries.sort(function(a, b)  {return comparator(a[3], b[3]) || a[2] - b[2]}).forEach(\n      isKeyedIterable ?\n      function(v, i)  { entries[i].length = 2; } :\n      function(v, i)  { entries[i] = v[1]; }\n    );\n    return isKeyedIterable ? KeyedSeq(entries) :\n      isIndexed(iterable) ? IndexedSeq(entries) :\n      SetSeq(entries);\n  }\n\n\n  function maxFactory(iterable, comparator, mapper) {\n    if (!comparator) {\n      comparator = defaultComparator;\n    }\n    if (mapper) {\n      var entry = iterable.toSeq()\n        .map(function(v, k)  {return [v, mapper(v, k, iterable)]})\n        .reduce(function(a, b)  {return maxCompare(comparator, a[1], b[1]) ? b : a});\n      return entry && entry[0];\n    } else {\n      return iterable.reduce(function(a, b)  {return maxCompare(comparator, a, b) ? b : a});\n    }\n  }\n\n  function maxCompare(comparator, a, b) {\n    var comp = comparator(b, a);\n    // b is considered the new max if the comparator declares them equal, but\n    // they are not equal and b is in fact a nullish value.\n    return (comp === 0 && b !== a && (b === undefined || b === null || b !== b)) || comp > 0;\n  }\n\n\n  function zipWithFactory(keyIter, zipper, iters) {\n    var zipSequence = makeSequence(keyIter);\n    zipSequence.size = new ArraySeq(iters).map(function(i ) {return i.size}).min();\n    // Note: this a generic base implementation of __iterate in terms of\n    // __iterator which may be more generically useful in the future.\n    zipSequence.__iterate = function(fn, reverse) {\n      /* generic:\n      var iterator = this.__iterator(ITERATE_ENTRIES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        iterations++;\n        if (fn(step.value[1], step.value[0], this) === false) {\n          break;\n        }\n      }\n      return iterations;\n      */\n      // indexed:\n      var iterator = this.__iterator(ITERATE_VALUES, reverse);\n      var step;\n      var iterations = 0;\n      while (!(step = iterator.next()).done) {\n        if (fn(step.value, iterations++, this) === false) {\n          break;\n        }\n      }\n      return iterations;\n    };\n    zipSequence.__iteratorUncached = function(type, reverse) {\n      var iterators = iters.map(function(i )\n        {return (i = Iterable(i), getIterator(reverse ? i.reverse() : i))}\n      );\n      var iterations = 0;\n      var isDone = false;\n      return new Iterator(function()  {\n        var steps;\n        if (!isDone) {\n          steps = iterators.map(function(i ) {return i.next()});\n          isDone = steps.some(function(s ) {return s.done});\n        }\n        if (isDone) {\n          return iteratorDone();\n        }\n        return iteratorValue(\n          type,\n          iterations++,\n          zipper.apply(null, steps.map(function(s ) {return s.value}))\n        );\n      });\n    };\n    return zipSequence\n  }\n\n\n  // #pragma Helper Functions\n\n  function reify(iter, seq) {\n    return isSeq(iter) ? seq : iter.constructor(seq);\n  }\n\n  function validateEntry(entry) {\n    if (entry !== Object(entry)) {\n      throw new TypeError('Expected [K, V] tuple: ' + entry);\n    }\n  }\n\n  function resolveSize(iter) {\n    assertNotInfinite(iter.size);\n    return ensureSize(iter);\n  }\n\n  function iterableClass(iterable) {\n    return isKeyed(iterable) ? KeyedIterable :\n      isIndexed(iterable) ? IndexedIterable :\n      SetIterable;\n  }\n\n  function makeSequence(iterable) {\n    return Object.create(\n      (\n        isKeyed(iterable) ? KeyedSeq :\n        isIndexed(iterable) ? IndexedSeq :\n        SetSeq\n      ).prototype\n    );\n  }\n\n  function cacheResultThrough() {\n    if (this._iter.cacheResult) {\n      this._iter.cacheResult();\n      this.size = this._iter.size;\n      return this;\n    } else {\n      return Seq.prototype.cacheResult.call(this);\n    }\n  }\n\n  function defaultComparator(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n  }\n\n  function forceIterator(keyPath) {\n    var iter = getIterator(keyPath);\n    if (!iter) {\n      // Array might not be iterable in this environment, so we need a fallback\n      // to our wrapped type.\n      if (!isArrayLike(keyPath)) {\n        throw new TypeError('Expected iterable or array-like: ' + keyPath);\n      }\n      iter = getIterator(Iterable(keyPath));\n    }\n    return iter;\n  }\n\n  createClass(Record, KeyedCollection);\n\n    function Record(defaultValues, name) {\n      var hasInitialized;\n\n      var RecordType = function Record(values) {\n        if (values instanceof RecordType) {\n          return values;\n        }\n        if (!(this instanceof RecordType)) {\n          return new RecordType(values);\n        }\n        if (!hasInitialized) {\n          hasInitialized = true;\n          var keys = Object.keys(defaultValues);\n          setProps(RecordTypePrototype, keys);\n          RecordTypePrototype.size = keys.length;\n          RecordTypePrototype._name = name;\n          RecordTypePrototype._keys = keys;\n          RecordTypePrototype._defaultValues = defaultValues;\n        }\n        this._map = Map(values);\n      };\n\n      var RecordTypePrototype = RecordType.prototype = Object.create(RecordPrototype);\n      RecordTypePrototype.constructor = RecordType;\n\n      return RecordType;\n    }\n\n    Record.prototype.toString = function() {\n      return this.__toString(recordName(this) + ' {', '}');\n    };\n\n    // @pragma Access\n\n    Record.prototype.has = function(k) {\n      return this._defaultValues.hasOwnProperty(k);\n    };\n\n    Record.prototype.get = function(k, notSetValue) {\n      if (!this.has(k)) {\n        return notSetValue;\n      }\n      var defaultVal = this._defaultValues[k];\n      return this._map ? this._map.get(k, defaultVal) : defaultVal;\n    };\n\n    // @pragma Modification\n\n    Record.prototype.clear = function() {\n      if (this.__ownerID) {\n        this._map && this._map.clear();\n        return this;\n      }\n      var RecordType = this.constructor;\n      return RecordType._empty || (RecordType._empty = makeRecord(this, emptyMap()));\n    };\n\n    Record.prototype.set = function(k, v) {\n      if (!this.has(k)) {\n        throw new Error('Cannot set unknown key \"' + k + '\" on ' + recordName(this));\n      }\n      var newMap = this._map && this._map.set(k, v);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.remove = function(k) {\n      if (!this.has(k)) {\n        return this;\n      }\n      var newMap = this._map && this._map.remove(k);\n      if (this.__ownerID || newMap === this._map) {\n        return this;\n      }\n      return makeRecord(this, newMap);\n    };\n\n    Record.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Record.prototype.__iterator = function(type, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterator(type, reverse);\n    };\n\n    Record.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return KeyedIterable(this._defaultValues).map(function(_, k)  {return this$0.get(k)}).__iterate(fn, reverse);\n    };\n\n    Record.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map && this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return makeRecord(this, newMap, ownerID);\n    };\n\n\n  var RecordPrototype = Record.prototype;\n  RecordPrototype[DELETE] = RecordPrototype.remove;\n  RecordPrototype.deleteIn =\n  RecordPrototype.removeIn = MapPrototype.removeIn;\n  RecordPrototype.merge = MapPrototype.merge;\n  RecordPrototype.mergeWith = MapPrototype.mergeWith;\n  RecordPrototype.mergeIn = MapPrototype.mergeIn;\n  RecordPrototype.mergeDeep = MapPrototype.mergeDeep;\n  RecordPrototype.mergeDeepWith = MapPrototype.mergeDeepWith;\n  RecordPrototype.mergeDeepIn = MapPrototype.mergeDeepIn;\n  RecordPrototype.setIn = MapPrototype.setIn;\n  RecordPrototype.update = MapPrototype.update;\n  RecordPrototype.updateIn = MapPrototype.updateIn;\n  RecordPrototype.withMutations = MapPrototype.withMutations;\n  RecordPrototype.asMutable = MapPrototype.asMutable;\n  RecordPrototype.asImmutable = MapPrototype.asImmutable;\n\n\n  function makeRecord(likeRecord, map, ownerID) {\n    var record = Object.create(Object.getPrototypeOf(likeRecord));\n    record._map = map;\n    record.__ownerID = ownerID;\n    return record;\n  }\n\n  function recordName(record) {\n    return record._name || record.constructor.name || 'Record';\n  }\n\n  function setProps(prototype, names) {\n    try {\n      names.forEach(setProp.bind(undefined, prototype));\n    } catch (error) {\n      // Object.defineProperty failed. Probably IE8.\n    }\n  }\n\n  function setProp(prototype, name) {\n    Object.defineProperty(prototype, name, {\n      get: function() {\n        return this.get(name);\n      },\n      set: function(value) {\n        invariant(this.__ownerID, 'Cannot set on an immutable record.');\n        this.set(name, value);\n      }\n    });\n  }\n\n  createClass(Set, SetCollection);\n\n    // @pragma Construction\n\n    function Set(value) {\n      return value === null || value === undefined ? emptySet() :\n        isSet(value) && !isOrdered(value) ? value :\n        emptySet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    Set.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Set.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    Set.prototype.toString = function() {\n      return this.__toString('Set {', '}');\n    };\n\n    // @pragma Access\n\n    Set.prototype.has = function(value) {\n      return this._map.has(value);\n    };\n\n    // @pragma Modification\n\n    Set.prototype.add = function(value) {\n      return updateSet(this, this._map.set(value, true));\n    };\n\n    Set.prototype.remove = function(value) {\n      return updateSet(this, this._map.remove(value));\n    };\n\n    Set.prototype.clear = function() {\n      return updateSet(this, this._map.clear());\n    };\n\n    // @pragma Composition\n\n    Set.prototype.union = function() {var iters = SLICE$0.call(arguments, 0);\n      iters = iters.filter(function(x ) {return x.size !== 0});\n      if (iters.length === 0) {\n        return this;\n      }\n      if (this.size === 0 && !this.__ownerID && iters.length === 1) {\n        return this.constructor(iters[0]);\n      }\n      return this.withMutations(function(set ) {\n        for (var ii = 0; ii < iters.length; ii++) {\n          SetIterable(iters[ii]).forEach(function(value ) {return set.add(value)});\n        }\n      });\n    };\n\n    Set.prototype.intersect = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (!iters.every(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.subtract = function() {var iters = SLICE$0.call(arguments, 0);\n      if (iters.length === 0) {\n        return this;\n      }\n      iters = iters.map(function(iter ) {return SetIterable(iter)});\n      var originalSet = this;\n      return this.withMutations(function(set ) {\n        originalSet.forEach(function(value ) {\n          if (iters.some(function(iter ) {return iter.includes(value)})) {\n            set.remove(value);\n          }\n        });\n      });\n    };\n\n    Set.prototype.merge = function() {\n      return this.union.apply(this, arguments);\n    };\n\n    Set.prototype.mergeWith = function(merger) {var iters = SLICE$0.call(arguments, 1);\n      return this.union.apply(this, iters);\n    };\n\n    Set.prototype.sort = function(comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator));\n    };\n\n    Set.prototype.sortBy = function(mapper, comparator) {\n      // Late binding\n      return OrderedSet(sortFactory(this, comparator, mapper));\n    };\n\n    Set.prototype.wasAltered = function() {\n      return this._map.wasAltered();\n    };\n\n    Set.prototype.__iterate = function(fn, reverse) {var this$0 = this;\n      return this._map.__iterate(function(_, k)  {return fn(k, k, this$0)}, reverse);\n    };\n\n    Set.prototype.__iterator = function(type, reverse) {\n      return this._map.map(function(_, k)  {return k}).__iterator(type, reverse);\n    };\n\n    Set.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      var newMap = this._map.__ensureOwner(ownerID);\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this._map = newMap;\n        return this;\n      }\n      return this.__make(newMap, ownerID);\n    };\n\n\n  function isSet(maybeSet) {\n    return !!(maybeSet && maybeSet[IS_SET_SENTINEL]);\n  }\n\n  Set.isSet = isSet;\n\n  var IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@';\n\n  var SetPrototype = Set.prototype;\n  SetPrototype[IS_SET_SENTINEL] = true;\n  SetPrototype[DELETE] = SetPrototype.remove;\n  SetPrototype.mergeDeep = SetPrototype.merge;\n  SetPrototype.mergeDeepWith = SetPrototype.mergeWith;\n  SetPrototype.withMutations = MapPrototype.withMutations;\n  SetPrototype.asMutable = MapPrototype.asMutable;\n  SetPrototype.asImmutable = MapPrototype.asImmutable;\n\n  SetPrototype.__empty = emptySet;\n  SetPrototype.__make = makeSet;\n\n  function updateSet(set, newMap) {\n    if (set.__ownerID) {\n      set.size = newMap.size;\n      set._map = newMap;\n      return set;\n    }\n    return newMap === set._map ? set :\n      newMap.size === 0 ? set.__empty() :\n      set.__make(newMap);\n  }\n\n  function makeSet(map, ownerID) {\n    var set = Object.create(SetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_SET;\n  function emptySet() {\n    return EMPTY_SET || (EMPTY_SET = makeSet(emptyMap()));\n  }\n\n  createClass(OrderedSet, Set);\n\n    // @pragma Construction\n\n    function OrderedSet(value) {\n      return value === null || value === undefined ? emptyOrderedSet() :\n        isOrderedSet(value) ? value :\n        emptyOrderedSet().withMutations(function(set ) {\n          var iter = SetIterable(value);\n          assertNotInfinite(iter.size);\n          iter.forEach(function(v ) {return set.add(v)});\n        });\n    }\n\n    OrderedSet.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    OrderedSet.fromKeys = function(value) {\n      return this(KeyedIterable(value).keySeq());\n    };\n\n    OrderedSet.prototype.toString = function() {\n      return this.__toString('OrderedSet {', '}');\n    };\n\n\n  function isOrderedSet(maybeOrderedSet) {\n    return isSet(maybeOrderedSet) && isOrdered(maybeOrderedSet);\n  }\n\n  OrderedSet.isOrderedSet = isOrderedSet;\n\n  var OrderedSetPrototype = OrderedSet.prototype;\n  OrderedSetPrototype[IS_ORDERED_SENTINEL] = true;\n\n  OrderedSetPrototype.__empty = emptyOrderedSet;\n  OrderedSetPrototype.__make = makeOrderedSet;\n\n  function makeOrderedSet(map, ownerID) {\n    var set = Object.create(OrderedSetPrototype);\n    set.size = map ? map.size : 0;\n    set._map = map;\n    set.__ownerID = ownerID;\n    return set;\n  }\n\n  var EMPTY_ORDERED_SET;\n  function emptyOrderedSet() {\n    return EMPTY_ORDERED_SET || (EMPTY_ORDERED_SET = makeOrderedSet(emptyOrderedMap()));\n  }\n\n  createClass(Stack, IndexedCollection);\n\n    // @pragma Construction\n\n    function Stack(value) {\n      return value === null || value === undefined ? emptyStack() :\n        isStack(value) ? value :\n        emptyStack().unshiftAll(value);\n    }\n\n    Stack.of = function(/*...values*/) {\n      return this(arguments);\n    };\n\n    Stack.prototype.toString = function() {\n      return this.__toString('Stack [', ']');\n    };\n\n    // @pragma Access\n\n    Stack.prototype.get = function(index, notSetValue) {\n      var head = this._head;\n      index = wrapIndex(this, index);\n      while (head && index--) {\n        head = head.next;\n      }\n      return head ? head.value : notSetValue;\n    };\n\n    Stack.prototype.peek = function() {\n      return this._head && this._head.value;\n    };\n\n    // @pragma Modification\n\n    Stack.prototype.push = function(/*...values*/) {\n      if (arguments.length === 0) {\n        return this;\n      }\n      var newSize = this.size + arguments.length;\n      var head = this._head;\n      for (var ii = arguments.length - 1; ii >= 0; ii--) {\n        head = {\n          value: arguments[ii],\n          next: head\n        };\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pushAll = function(iter) {\n      iter = IndexedIterable(iter);\n      if (iter.size === 0) {\n        return this;\n      }\n      assertNotInfinite(iter.size);\n      var newSize = this.size;\n      var head = this._head;\n      iter.reverse().forEach(function(value ) {\n        newSize++;\n        head = {\n          value: value,\n          next: head\n        };\n      });\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    Stack.prototype.pop = function() {\n      return this.slice(1);\n    };\n\n    Stack.prototype.unshift = function(/*...values*/) {\n      return this.push.apply(this, arguments);\n    };\n\n    Stack.prototype.unshiftAll = function(iter) {\n      return this.pushAll(iter);\n    };\n\n    Stack.prototype.shift = function() {\n      return this.pop.apply(this, arguments);\n    };\n\n    Stack.prototype.clear = function() {\n      if (this.size === 0) {\n        return this;\n      }\n      if (this.__ownerID) {\n        this.size = 0;\n        this._head = undefined;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return emptyStack();\n    };\n\n    Stack.prototype.slice = function(begin, end) {\n      if (wholeSlice(begin, end, this.size)) {\n        return this;\n      }\n      var resolvedBegin = resolveBegin(begin, this.size);\n      var resolvedEnd = resolveEnd(end, this.size);\n      if (resolvedEnd !== this.size) {\n        // super.slice(begin, end);\n        return IndexedCollection.prototype.slice.call(this, begin, end);\n      }\n      var newSize = this.size - resolvedBegin;\n      var head = this._head;\n      while (resolvedBegin--) {\n        head = head.next;\n      }\n      if (this.__ownerID) {\n        this.size = newSize;\n        this._head = head;\n        this.__hash = undefined;\n        this.__altered = true;\n        return this;\n      }\n      return makeStack(newSize, head);\n    };\n\n    // @pragma Mutability\n\n    Stack.prototype.__ensureOwner = function(ownerID) {\n      if (ownerID === this.__ownerID) {\n        return this;\n      }\n      if (!ownerID) {\n        this.__ownerID = ownerID;\n        this.__altered = false;\n        return this;\n      }\n      return makeStack(this.size, this._head, ownerID, this.__hash);\n    };\n\n    // @pragma Iteration\n\n    Stack.prototype.__iterate = function(fn, reverse) {\n      if (reverse) {\n        return this.reverse().__iterate(fn);\n      }\n      var iterations = 0;\n      var node = this._head;\n      while (node) {\n        if (fn(node.value, iterations++, this) === false) {\n          break;\n        }\n        node = node.next;\n      }\n      return iterations;\n    };\n\n    Stack.prototype.__iterator = function(type, reverse) {\n      if (reverse) {\n        return this.reverse().__iterator(type);\n      }\n      var iterations = 0;\n      var node = this._head;\n      return new Iterator(function()  {\n        if (node) {\n          var value = node.value;\n          node = node.next;\n          return iteratorValue(type, iterations++, value);\n        }\n        return iteratorDone();\n      });\n    };\n\n\n  function isStack(maybeStack) {\n    return !!(maybeStack && maybeStack[IS_STACK_SENTINEL]);\n  }\n\n  Stack.isStack = isStack;\n\n  var IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@';\n\n  var StackPrototype = Stack.prototype;\n  StackPrototype[IS_STACK_SENTINEL] = true;\n  StackPrototype.withMutations = MapPrototype.withMutations;\n  StackPrototype.asMutable = MapPrototype.asMutable;\n  StackPrototype.asImmutable = MapPrototype.asImmutable;\n  StackPrototype.wasAltered = MapPrototype.wasAltered;\n\n\n  function makeStack(size, head, ownerID, hash) {\n    var map = Object.create(StackPrototype);\n    map.size = size;\n    map._head = head;\n    map.__ownerID = ownerID;\n    map.__hash = hash;\n    map.__altered = false;\n    return map;\n  }\n\n  var EMPTY_STACK;\n  function emptyStack() {\n    return EMPTY_STACK || (EMPTY_STACK = makeStack(0));\n  }\n\n  /**\n   * Contributes additional methods to a constructor\n   */\n  function mixin(ctor, methods) {\n    var keyCopier = function(key ) { ctor.prototype[key] = methods[key]; };\n    Object.keys(methods).forEach(keyCopier);\n    Object.getOwnPropertySymbols &&\n      Object.getOwnPropertySymbols(methods).forEach(keyCopier);\n    return ctor;\n  }\n\n  Iterable.Iterator = Iterator;\n\n  mixin(Iterable, {\n\n    // ### Conversion to other types\n\n    toArray: function() {\n      assertNotInfinite(this.size);\n      var array = new Array(this.size || 0);\n      this.valueSeq().__iterate(function(v, i)  { array[i] = v; });\n      return array;\n    },\n\n    toIndexedSeq: function() {\n      return new ToIndexedSequence(this);\n    },\n\n    toJS: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJS === 'function' ? value.toJS() : value}\n      ).__toJS();\n    },\n\n    toJSON: function() {\n      return this.toSeq().map(\n        function(value ) {return value && typeof value.toJSON === 'function' ? value.toJSON() : value}\n      ).__toJS();\n    },\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, true);\n    },\n\n    toMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Map(this.toKeyedSeq());\n    },\n\n    toObject: function() {\n      assertNotInfinite(this.size);\n      var object = {};\n      this.__iterate(function(v, k)  { object[k] = v; });\n      return object;\n    },\n\n    toOrderedMap: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedMap(this.toKeyedSeq());\n    },\n\n    toOrderedSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return OrderedSet(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSet: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Set(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toSetSeq: function() {\n      return new ToSetSequence(this);\n    },\n\n    toSeq: function() {\n      return isIndexed(this) ? this.toIndexedSeq() :\n        isKeyed(this) ? this.toKeyedSeq() :\n        this.toSetSeq();\n    },\n\n    toStack: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return Stack(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n    toList: function() {\n      // Use Late Binding here to solve the circular dependency.\n      return List(isKeyed(this) ? this.valueSeq() : this);\n    },\n\n\n    // ### Common JavaScript methods and properties\n\n    toString: function() {\n      return '[Iterable]';\n    },\n\n    __toString: function(head, tail) {\n      if (this.size === 0) {\n        return head + tail;\n      }\n      return head + ' ' + this.toSeq().map(this.__toStringMapper).join(', ') + ' ' + tail;\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    concat: function() {var values = SLICE$0.call(arguments, 0);\n      return reify(this, concatFactory(this, values));\n    },\n\n    includes: function(searchValue) {\n      return this.some(function(value ) {return is(value, searchValue)});\n    },\n\n    entries: function() {\n      return this.__iterator(ITERATE_ENTRIES);\n    },\n\n    every: function(predicate, context) {\n      assertNotInfinite(this.size);\n      var returnValue = true;\n      this.__iterate(function(v, k, c)  {\n        if (!predicate.call(context, v, k, c)) {\n          returnValue = false;\n          return false;\n        }\n      });\n      return returnValue;\n    },\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, true));\n    },\n\n    find: function(predicate, context, notSetValue) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[1] : notSetValue;\n    },\n\n    findEntry: function(predicate, context) {\n      var found;\n      this.__iterate(function(v, k, c)  {\n        if (predicate.call(context, v, k, c)) {\n          found = [k, v];\n          return false;\n        }\n      });\n      return found;\n    },\n\n    findLastEntry: function(predicate, context) {\n      return this.toSeq().reverse().findEntry(predicate, context);\n    },\n\n    forEach: function(sideEffect, context) {\n      assertNotInfinite(this.size);\n      return this.__iterate(context ? sideEffect.bind(context) : sideEffect);\n    },\n\n    join: function(separator) {\n      assertNotInfinite(this.size);\n      separator = separator !== undefined ? '' + separator : ',';\n      var joined = '';\n      var isFirst = true;\n      this.__iterate(function(v ) {\n        isFirst ? (isFirst = false) : (joined += separator);\n        joined += v !== null && v !== undefined ? v.toString() : '';\n      });\n      return joined;\n    },\n\n    keys: function() {\n      return this.__iterator(ITERATE_KEYS);\n    },\n\n    map: function(mapper, context) {\n      return reify(this, mapFactory(this, mapper, context));\n    },\n\n    reduce: function(reducer, initialReduction, context) {\n      assertNotInfinite(this.size);\n      var reduction;\n      var useFirst;\n      if (arguments.length < 2) {\n        useFirst = true;\n      } else {\n        reduction = initialReduction;\n      }\n      this.__iterate(function(v, k, c)  {\n        if (useFirst) {\n          useFirst = false;\n          reduction = v;\n        } else {\n          reduction = reducer.call(context, reduction, v, k, c);\n        }\n      });\n      return reduction;\n    },\n\n    reduceRight: function(reducer, initialReduction, context) {\n      var reversed = this.toKeyedSeq().reverse();\n      return reversed.reduce.apply(reversed, arguments);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, true));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, true));\n    },\n\n    some: function(predicate, context) {\n      return !this.every(not(predicate), context);\n    },\n\n    sort: function(comparator) {\n      return reify(this, sortFactory(this, comparator));\n    },\n\n    values: function() {\n      return this.__iterator(ITERATE_VALUES);\n    },\n\n\n    // ### More sequential methods\n\n    butLast: function() {\n      return this.slice(0, -1);\n    },\n\n    isEmpty: function() {\n      return this.size !== undefined ? this.size === 0 : !this.some(function()  {return true});\n    },\n\n    count: function(predicate, context) {\n      return ensureSize(\n        predicate ? this.toSeq().filter(predicate, context) : this\n      );\n    },\n\n    countBy: function(grouper, context) {\n      return countByFactory(this, grouper, context);\n    },\n\n    equals: function(other) {\n      return deepEqual(this, other);\n    },\n\n    entrySeq: function() {\n      var iterable = this;\n      if (iterable._cache) {\n        // We cache as an entries array, so we can just return the cache!\n        return new ArraySeq(iterable._cache);\n      }\n      var entriesSequence = iterable.toSeq().map(entryMapper).toIndexedSeq();\n      entriesSequence.fromEntrySeq = function()  {return iterable.toSeq()};\n      return entriesSequence;\n    },\n\n    filterNot: function(predicate, context) {\n      return this.filter(not(predicate), context);\n    },\n\n    findLast: function(predicate, context, notSetValue) {\n      return this.toKeyedSeq().reverse().find(predicate, context, notSetValue);\n    },\n\n    first: function() {\n      return this.find(returnTrue);\n    },\n\n    flatMap: function(mapper, context) {\n      return reify(this, flatMapFactory(this, mapper, context));\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, true));\n    },\n\n    fromEntrySeq: function() {\n      return new FromEntriesSequence(this);\n    },\n\n    get: function(searchKey, notSetValue) {\n      return this.find(function(_, key)  {return is(key, searchKey)}, undefined, notSetValue);\n    },\n\n    getIn: function(searchKeyPath, notSetValue) {\n      var nested = this;\n      // Note: in an ES6 environment, we would prefer:\n      // for (var key of searchKeyPath) {\n      var iter = forceIterator(searchKeyPath);\n      var step;\n      while (!(step = iter.next()).done) {\n        var key = step.value;\n        nested = nested && nested.get ? nested.get(key, NOT_SET) : NOT_SET;\n        if (nested === NOT_SET) {\n          return notSetValue;\n        }\n      }\n      return nested;\n    },\n\n    groupBy: function(grouper, context) {\n      return groupByFactory(this, grouper, context);\n    },\n\n    has: function(searchKey) {\n      return this.get(searchKey, NOT_SET) !== NOT_SET;\n    },\n\n    hasIn: function(searchKeyPath) {\n      return this.getIn(searchKeyPath, NOT_SET) !== NOT_SET;\n    },\n\n    isSubset: function(iter) {\n      iter = typeof iter.includes === 'function' ? iter : Iterable(iter);\n      return this.every(function(value ) {return iter.includes(value)});\n    },\n\n    isSuperset: function(iter) {\n      iter = typeof iter.isSubset === 'function' ? iter : Iterable(iter);\n      return iter.isSubset(this);\n    },\n\n    keySeq: function() {\n      return this.toSeq().map(keyMapper).toIndexedSeq();\n    },\n\n    last: function() {\n      return this.toSeq().reverse().first();\n    },\n\n    max: function(comparator) {\n      return maxFactory(this, comparator);\n    },\n\n    maxBy: function(mapper, comparator) {\n      return maxFactory(this, comparator, mapper);\n    },\n\n    min: function(comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator);\n    },\n\n    minBy: function(mapper, comparator) {\n      return maxFactory(this, comparator ? neg(comparator) : defaultNegComparator, mapper);\n    },\n\n    rest: function() {\n      return this.slice(1);\n    },\n\n    skip: function(amount) {\n      return this.slice(Math.max(0, amount));\n    },\n\n    skipLast: function(amount) {\n      return reify(this, this.toSeq().reverse().skip(amount).reverse());\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, true));\n    },\n\n    skipUntil: function(predicate, context) {\n      return this.skipWhile(not(predicate), context);\n    },\n\n    sortBy: function(mapper, comparator) {\n      return reify(this, sortFactory(this, comparator, mapper));\n    },\n\n    take: function(amount) {\n      return this.slice(0, Math.max(0, amount));\n    },\n\n    takeLast: function(amount) {\n      return reify(this, this.toSeq().reverse().take(amount).reverse());\n    },\n\n    takeWhile: function(predicate, context) {\n      return reify(this, takeWhileFactory(this, predicate, context));\n    },\n\n    takeUntil: function(predicate, context) {\n      return this.takeWhile(not(predicate), context);\n    },\n\n    valueSeq: function() {\n      return this.toIndexedSeq();\n    },\n\n\n    // ### Hashable Object\n\n    hashCode: function() {\n      return this.__hash || (this.__hash = hashIterable(this));\n    }\n\n\n    // ### Internal\n\n    // abstract __iterate(fn, reverse)\n\n    // abstract __iterator(type, reverse)\n  });\n\n  // var IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@';\n  // var IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@';\n  // var IS_INDEXED_SENTINEL = '@@__IMMUTABLE_INDEXED__@@';\n  // var IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@';\n\n  var IterablePrototype = Iterable.prototype;\n  IterablePrototype[IS_ITERABLE_SENTINEL] = true;\n  IterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.values;\n  IterablePrototype.__toJS = IterablePrototype.toArray;\n  IterablePrototype.__toStringMapper = quoteString;\n  IterablePrototype.inspect =\n  IterablePrototype.toSource = function() { return this.toString(); };\n  IterablePrototype.chain = IterablePrototype.flatMap;\n  IterablePrototype.contains = IterablePrototype.includes;\n\n  // Temporary warning about using length\n  (function () {\n    try {\n      Object.defineProperty(IterablePrototype, 'length', {\n        get: function () {\n          if (!Iterable.noLengthWarning) {\n            var stack;\n            try {\n              throw new Error();\n            } catch (error) {\n              stack = error.stack;\n            }\n            if (stack.indexOf('_wrapObject') === -1) {\n              console && console.warn && console.warn(\n                'iterable.length has been deprecated, '+\n                'use iterable.size or iterable.count(). '+\n                'This warning will become a silent error in a future version. ' +\n                stack\n              );\n              return this.size;\n            }\n          }\n        }\n      });\n    } catch (e) {}\n  })();\n\n\n\n  mixin(KeyedIterable, {\n\n    // ### More sequential methods\n\n    flip: function() {\n      return reify(this, flipFactory(this));\n    },\n\n    findKey: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry && entry[0];\n    },\n\n    findLastKey: function(predicate, context) {\n      return this.toSeq().reverse().findKey(predicate, context);\n    },\n\n    keyOf: function(searchValue) {\n      return this.findKey(function(value ) {return is(value, searchValue)});\n    },\n\n    lastKeyOf: function(searchValue) {\n      return this.findLastKey(function(value ) {return is(value, searchValue)});\n    },\n\n    mapEntries: function(mapper, context) {var this$0 = this;\n      var iterations = 0;\n      return reify(this,\n        this.toSeq().map(\n          function(v, k)  {return mapper.call(context, [k, v], iterations++, this$0)}\n        ).fromEntrySeq()\n      );\n    },\n\n    mapKeys: function(mapper, context) {var this$0 = this;\n      return reify(this,\n        this.toSeq().flip().map(\n          function(k, v)  {return mapper.call(context, k, v, this$0)}\n        ).flip()\n      );\n    }\n\n  });\n\n  var KeyedIterablePrototype = KeyedIterable.prototype;\n  KeyedIterablePrototype[IS_KEYED_SENTINEL] = true;\n  KeyedIterablePrototype[ITERATOR_SYMBOL] = IterablePrototype.entries;\n  KeyedIterablePrototype.__toJS = IterablePrototype.toObject;\n  KeyedIterablePrototype.__toStringMapper = function(v, k)  {return JSON.stringify(k) + ': ' + quoteString(v)};\n\n\n\n  mixin(IndexedIterable, {\n\n    // ### Conversion to other types\n\n    toKeyedSeq: function() {\n      return new ToKeyedSequence(this, false);\n    },\n\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    filter: function(predicate, context) {\n      return reify(this, filterFactory(this, predicate, context, false));\n    },\n\n    findIndex: function(predicate, context) {\n      var entry = this.findEntry(predicate, context);\n      return entry ? entry[0] : -1;\n    },\n\n    indexOf: function(searchValue) {\n      var key = this.toKeyedSeq().keyOf(searchValue);\n      return key === undefined ? -1 : key;\n    },\n\n    lastIndexOf: function(searchValue) {\n      var key = this.toKeyedSeq().reverse().keyOf(searchValue);\n      return key === undefined ? -1 : key;\n\n      // var index =\n      // return this.toSeq().reverse().indexOf(searchValue);\n    },\n\n    reverse: function() {\n      return reify(this, reverseFactory(this, false));\n    },\n\n    slice: function(begin, end) {\n      return reify(this, sliceFactory(this, begin, end, false));\n    },\n\n    splice: function(index, removeNum /*, ...values*/) {\n      var numArgs = arguments.length;\n      removeNum = Math.max(removeNum | 0, 0);\n      if (numArgs === 0 || (numArgs === 2 && !removeNum)) {\n        return this;\n      }\n      // If index is negative, it should resolve relative to the size of the\n      // collection. However size may be expensive to compute if not cached, so\n      // only call count() if the number is in fact negative.\n      index = resolveBegin(index, index < 0 ? this.count() : this.size);\n      var spliced = this.slice(0, index);\n      return reify(\n        this,\n        numArgs === 1 ?\n          spliced :\n          spliced.concat(arrCopy(arguments, 2), this.slice(index + removeNum))\n      );\n    },\n\n\n    // ### More collection methods\n\n    findLastIndex: function(predicate, context) {\n      var key = this.toKeyedSeq().findLastKey(predicate, context);\n      return key === undefined ? -1 : key;\n    },\n\n    first: function() {\n      return this.get(0);\n    },\n\n    flatten: function(depth) {\n      return reify(this, flattenFactory(this, depth, false));\n    },\n\n    get: function(index, notSetValue) {\n      index = wrapIndex(this, index);\n      return (index < 0 || (this.size === Infinity ||\n          (this.size !== undefined && index > this.size))) ?\n        notSetValue :\n        this.find(function(_, key)  {return key === index}, undefined, notSetValue);\n    },\n\n    has: function(index) {\n      index = wrapIndex(this, index);\n      return index >= 0 && (this.size !== undefined ?\n        this.size === Infinity || index < this.size :\n        this.indexOf(index) !== -1\n      );\n    },\n\n    interpose: function(separator) {\n      return reify(this, interposeFactory(this, separator));\n    },\n\n    interleave: function(/*...iterables*/) {\n      var iterables = [this].concat(arrCopy(arguments));\n      var zipped = zipWithFactory(this.toSeq(), IndexedSeq.of, iterables);\n      var interleaved = zipped.flatten(true);\n      if (zipped.size) {\n        interleaved.size = zipped.size * iterables.length;\n      }\n      return reify(this, interleaved);\n    },\n\n    last: function() {\n      return this.get(-1);\n    },\n\n    skipWhile: function(predicate, context) {\n      return reify(this, skipWhileFactory(this, predicate, context, false));\n    },\n\n    zip: function(/*, ...iterables */) {\n      var iterables = [this].concat(arrCopy(arguments));\n      return reify(this, zipWithFactory(this, defaultZipper, iterables));\n    },\n\n    zipWith: function(zipper/*, ...iterables */) {\n      var iterables = arrCopy(arguments);\n      iterables[0] = this;\n      return reify(this, zipWithFactory(this, zipper, iterables));\n    }\n\n  });\n\n  IndexedIterable.prototype[IS_INDEXED_SENTINEL] = true;\n  IndexedIterable.prototype[IS_ORDERED_SENTINEL] = true;\n\n\n\n  mixin(SetIterable, {\n\n    // ### ES6 Collection methods (ES6 Array and Map)\n\n    get: function(value, notSetValue) {\n      return this.has(value) ? value : notSetValue;\n    },\n\n    includes: function(value) {\n      return this.has(value);\n    },\n\n\n    // ### More sequential methods\n\n    keySeq: function() {\n      return this.valueSeq();\n    }\n\n  });\n\n  SetIterable.prototype.has = IterablePrototype.includes;\n\n\n  // Mixin subclasses\n\n  mixin(KeyedSeq, KeyedIterable.prototype);\n  mixin(IndexedSeq, IndexedIterable.prototype);\n  mixin(SetSeq, SetIterable.prototype);\n\n  mixin(KeyedCollection, KeyedIterable.prototype);\n  mixin(IndexedCollection, IndexedIterable.prototype);\n  mixin(SetCollection, SetIterable.prototype);\n\n\n  // #pragma Helper functions\n\n  function keyMapper(v, k) {\n    return k;\n  }\n\n  function entryMapper(v, k) {\n    return [k, v];\n  }\n\n  function not(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    }\n  }\n\n  function neg(predicate) {\n    return function() {\n      return -predicate.apply(this, arguments);\n    }\n  }\n\n  function quoteString(value) {\n    return typeof value === 'string' ? JSON.stringify(value) : value;\n  }\n\n  function defaultZipper() {\n    return arrCopy(arguments);\n  }\n\n  function defaultNegComparator(a, b) {\n    return a < b ? 1 : a > b ? -1 : 0;\n  }\n\n  function hashIterable(iterable) {\n    if (iterable.size === Infinity) {\n      return 0;\n    }\n    var ordered = isOrdered(iterable);\n    var keyed = isKeyed(iterable);\n    var h = ordered ? 1 : 0;\n    var size = iterable.__iterate(\n      keyed ?\n        ordered ?\n          function(v, k)  { h = 31 * h + hashMerge(hash(v), hash(k)) | 0; } :\n          function(v, k)  { h = h + hashMerge(hash(v), hash(k)) | 0; } :\n        ordered ?\n          function(v ) { h = 31 * h + hash(v) | 0; } :\n          function(v ) { h = h + hash(v) | 0; }\n    );\n    return murmurHashOfSize(size, h);\n  }\n\n  function murmurHashOfSize(size, h) {\n    h = imul(h, 0xCC9E2D51);\n    h = imul(h << 15 | h >>> -15, 0x1B873593);\n    h = imul(h << 13 | h >>> -13, 5);\n    h = (h + 0xE6546B64 | 0) ^ size;\n    h = imul(h ^ h >>> 16, 0x85EBCA6B);\n    h = imul(h ^ h >>> 13, 0xC2B2AE35);\n    h = smi(h ^ h >>> 16);\n    return h;\n  }\n\n  function hashMerge(a, b) {\n    return a ^ b + 0x9E3779B9 + (a << 6) + (a >> 2) | 0; // int\n  }\n\n  var Immutable = {\n\n    Iterable: Iterable,\n\n    Seq: Seq,\n    Collection: Collection,\n    Map: Map,\n    OrderedMap: OrderedMap,\n    List: List,\n    Stack: Stack,\n    Set: Set,\n    OrderedSet: OrderedSet,\n\n    Record: Record,\n    Range: Range,\n    Repeat: Repeat,\n\n    is: is,\n    fromJS: fromJS\n\n  };\n\n  return Immutable;\n\n}));"]},"metadata":{},"sourceType":"script"}