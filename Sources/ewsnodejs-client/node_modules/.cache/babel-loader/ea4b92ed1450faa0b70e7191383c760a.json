{"ast":null,"code":"import { STARTING, ENDING, ENDED } from \"./transition/schedule.js\";\nexport default function (node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n  if (!schedules) return;\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) {\n      empty = false;\n      continue;\n    }\n\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/d3-transition/src/interrupt.js"],"names":["STARTING","ENDING","ENDED","node","name","schedules","__transition","schedule","active","empty","i","state","timer","stop","on","call","__data__","index","group"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,MAAlB,EAA0BC,KAA1B,QAAsC,0BAAtC;AAEA,eAAe,UAASC,IAAT,EAAeC,IAAf,EAAqB;AAClC,MAAIC,SAAS,GAAGF,IAAI,CAACG,YAArB;AAAA,MACIC,QADJ;AAAA,MAEIC,MAFJ;AAAA,MAGIC,KAAK,GAAG,IAHZ;AAAA,MAIIC,CAJJ;AAMA,MAAI,CAACL,SAAL,EAAgB;AAEhBD,EAAAA,IAAI,GAAGA,IAAI,IAAI,IAAR,GAAe,IAAf,GAAsBA,IAAI,GAAG,EAApC;;AAEA,OAAKM,CAAL,IAAUL,SAAV,EAAqB;AACnB,QAAI,CAACE,QAAQ,GAAGF,SAAS,CAACK,CAAD,CAArB,EAA0BN,IAA1B,KAAmCA,IAAvC,EAA6C;AAAEK,MAAAA,KAAK,GAAG,KAAR;AAAe;AAAW;;AACzED,IAAAA,MAAM,GAAGD,QAAQ,CAACI,KAAT,GAAiBX,QAAjB,IAA6BO,QAAQ,CAACI,KAAT,GAAiBV,MAAvD;AACAM,IAAAA,QAAQ,CAACI,KAAT,GAAiBT,KAAjB;AACAK,IAAAA,QAAQ,CAACK,KAAT,CAAeC,IAAf;AACAN,IAAAA,QAAQ,CAACO,EAAT,CAAYC,IAAZ,CAAiBP,MAAM,GAAG,WAAH,GAAiB,QAAxC,EAAkDL,IAAlD,EAAwDA,IAAI,CAACa,QAA7D,EAAuET,QAAQ,CAACU,KAAhF,EAAuFV,QAAQ,CAACW,KAAhG;AACA,WAAOb,SAAS,CAACK,CAAD,CAAhB;AACD;;AAED,MAAID,KAAJ,EAAW,OAAON,IAAI,CAACG,YAAZ;AACZ","sourcesContent":["import {STARTING, ENDING, ENDED} from \"./transition/schedule.js\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n"]},"metadata":{},"sourceType":"module"}