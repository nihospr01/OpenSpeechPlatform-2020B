{"ast":null,"code":"import { tickStep } from \"d3-array\";\nimport { format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound } from \"d3-format\";\nexport default function (start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n\n  switch (specifier.type) {\n    case \"s\":\n      {\n        var value = Math.max(Math.abs(start), Math.abs(stop));\n        if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n        return formatPrefix(specifier, value);\n      }\n\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\":\n      {\n        if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n        break;\n      }\n\n    case \"f\":\n    case \"%\":\n      {\n        if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n        break;\n      }\n  }\n\n  return format(specifier);\n}","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/d3-scale/src/tickFormat.js"],"names":["tickStep","format","formatPrefix","formatSpecifier","precisionFixed","precisionPrefix","precisionRound","start","stop","count","specifier","step","precision","type","value","Math","max","abs","isNaN"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,UAAvB;AACA,SAAQC,MAAR,EAAgBC,YAAhB,EAA8BC,eAA9B,EAA+CC,cAA/C,EAA+DC,eAA/D,EAAgFC,cAAhF,QAAqG,WAArG;AAEA,eAAe,UAASC,KAAT,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,SAA7B,EAAwC;AACrD,MAAIC,IAAI,GAAGX,QAAQ,CAACO,KAAD,EAAQC,IAAR,EAAcC,KAAd,CAAnB;AAAA,MACIG,SADJ;AAEAF,EAAAA,SAAS,GAAGP,eAAe,CAACO,SAAS,IAAI,IAAb,GAAoB,IAApB,GAA2BA,SAA5B,CAA3B;;AACA,UAAQA,SAAS,CAACG,IAAlB;AACE,SAAK,GAAL;AAAU;AACR,YAAIC,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASV,KAAT,CAAT,EAA0BQ,IAAI,CAACE,GAAL,CAAST,IAAT,CAA1B,CAAZ;AACA,YAAIE,SAAS,CAACE,SAAV,IAAuB,IAAvB,IAA+B,CAACM,KAAK,CAACN,SAAS,GAAGP,eAAe,CAACM,IAAD,EAAOG,KAAP,CAA5B,CAAzC,EAAqFJ,SAAS,CAACE,SAAV,GAAsBA,SAAtB;AACrF,eAAOV,YAAY,CAACQ,SAAD,EAAYI,KAAZ,CAAnB;AACD;;AACD,SAAK,EAAL;AACA,SAAK,GAAL;AACA,SAAK,GAAL;AACA,SAAK,GAAL;AACA,SAAK,GAAL;AAAU;AACR,YAAIJ,SAAS,CAACE,SAAV,IAAuB,IAAvB,IAA+B,CAACM,KAAK,CAACN,SAAS,GAAGN,cAAc,CAACK,IAAD,EAAOI,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASV,KAAT,CAAT,EAA0BQ,IAAI,CAACE,GAAL,CAAST,IAAT,CAA1B,CAAP,CAA3B,CAAzC,EAAwHE,SAAS,CAACE,SAAV,GAAsBA,SAAS,IAAIF,SAAS,CAACG,IAAV,KAAmB,GAAvB,CAA/B;AACxH;AACD;;AACD,SAAK,GAAL;AACA,SAAK,GAAL;AAAU;AACR,YAAIH,SAAS,CAACE,SAAV,IAAuB,IAAvB,IAA+B,CAACM,KAAK,CAACN,SAAS,GAAGR,cAAc,CAACO,IAAD,CAA3B,CAAzC,EAA6ED,SAAS,CAACE,SAAV,GAAsBA,SAAS,GAAG,CAACF,SAAS,CAACG,IAAV,KAAmB,GAApB,IAA2B,CAA7D;AAC7E;AACD;AAlBH;;AAoBA,SAAOZ,MAAM,CAACS,SAAD,CAAb;AACD","sourcesContent":["import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n"]},"metadata":{},"sourceType":"module"}