{"ast":null,"code":"import _objectSpread from\"/opt/osp/ewsnodejs-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/opt/osp/ewsnodejs-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/opt/osp/ewsnodejs-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/opt/osp/ewsnodejs-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/opt/osp/ewsnodejs-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/opt/osp/ewsnodejs-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/opt/osp/ewsnodejs-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component,Fragment}from'react';import{axios}from'utils/utils';import List from'@material-ui/core/List';import ListSubheader from'@material-ui/core/ListSubheader';import ListItem from'@material-ui/core/ListItem';import DialogContentText from'@material-ui/core/DialogContentText';import TextField from'@material-ui/core/TextField';import DialogActions from'@material-ui/core/DialogActions';import DialogContent from'@material-ui/core/DialogContent';import Dialog from'@material-ui/core/Dialog';import DialogTitle from'@material-ui/core/DialogTitle';import Button from'@material-ui/core/Button';import Paper from'@material-ui/core/Paper';import Select from'react-select';var ProfileSetting=/*#__PURE__*/function(_Component){_inherits(ProfileSetting,_Component);var _super=_createSuper(ProfileSetting);function ProfileSetting(){var _this;_classCallCheck(this,ProfileSetting);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={loadDialogOpen:false,saveDialogOpen:false,profileName:\"\",profiles:[],profileOptions:[],selectedProfile:\"\"};_this.componentDidMount=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_this.handleFetchProfiles();case 1:case\"end\":return _context.stop();}}},_callee);}));_this.componentDidUpdate=function(prevProps){var currProfileBand=_this.props.currProfileBand;var profiles=_this.state.profiles;if(prevProps.currProfileBand!==currProfileBand){var profileOptions=[];profiles.forEach(function(element){if(element.bandNumber===currProfileBand){profileOptions.push({value:element.parameters,label:element.profileName});}});_this.setState({profileOptions:profileOptions});}};_this.handleFetchProfiles=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var currProfileBand,response,profiles,profileOptions;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:currProfileBand=_this.props.currProfileBand;_context2.prev=1;_context2.next=4;return axios.get(\"/api/param/amplification\");case 4:response=_context2.sent;profiles=response.data;profileOptions=[];profiles.forEach(function(element){if(element.bandNumber===currProfileBand){profileOptions.push({value:element.parameters,label:element.profileName});}});_this.setState({profileOptions:profileOptions,profiles:profiles});_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](1);alert(\"Error loading profiles\");case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[1,11]]);}));_this.handleLoadDialogOpen=function(){_this.setState({loadDialogOpen:true});};_this.handleLoadDialogClose=function(){_this.setState({loadDialogOpen:false});};_this.handleSaveDialogOpen=function(){_this.setState({saveDialogOpen:true});};_this.handleSaveDialogClose=function(){_this.setState({saveDialogOpen:false});};_this.handleChangeProfileName=function(event){_this.setState({profileName:event.target.value});};_this.handleSaveParams=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var save,_this$state,profileName,profileOptions;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:save=_this.props.save;_this$state=_this.state,profileName=_this$state.profileName,profileOptions=_this$state.profileOptions;if(!(save!=null)){_context3.next=14;break;}_context3.prev=3;_context3.next=6;return save(profileName);case 6:_context3.next=8;return _this.handleFetchProfiles();case 8:_this.setState({saveDialogOpen:false});_context3.next=14;break;case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](3);console.log(_context3.t0);case 14:case\"end\":return _context3.stop();}}},_callee3,null,[[3,11]]);}));_this.handleLoadProfile=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var load,selectedProfile;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:load=_this.props.load;selectedProfile=_this.state.selectedProfile;console.log(selectedProfile);if(!(load!=null)){_context4.next=15;break;}_context4.prev=4;_context4.next=7;return load(selectedProfile);case 7:_context4.next=12;break;case 9:_context4.prev=9;_context4.t0=_context4[\"catch\"](4);console.log(_context4.t0);case 12:_this.setState({loadDialogOpen:false});_context4.next=16;break;case 15:_this.setState({loadDialogOpen:false});case 16:case\"end\":return _context4.stop();}}},_callee4,null,[[4,9]]);}));_this.handleProfileChange=function(profile){_this.setState({selectedProfile:profile.value});};_this.handleDisableSelect=function(){};return _this;}_createClass(ProfileSetting,[{key:\"render\",value:function render(){var _this$state2=this.state,loadDialogOpen=_this$state2.loadDialogOpen,saveDialogOpen=_this$state2.saveDialogOpen;return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Paper,{style:{maxWidth:350}},/*#__PURE__*/React.createElement(List,{subheader:/*#__PURE__*/React.createElement(ListSubheader,null,\"Parameter Settings\")},/*#__PURE__*/React.createElement(ListItem,null,/*#__PURE__*/React.createElement(Button,{color:\"primary\",variant:\"contained\",fullWidth:true,onClick:this.handleLoadDialogOpen},\"Load Profile\")),/*#__PURE__*/React.createElement(ListItem,null,/*#__PURE__*/React.createElement(Button,{color:\"primary\",variant:\"contained\",fullWidth:true,onClick:this.handleSaveDialogOpen},\"Save Profile\")))),/*#__PURE__*/React.createElement(Dialog,{open:loadDialogOpen,scroll:\"body\",onClose:this.handleLoadDialogClose,fullWidth:true,maxWidth:\"xs\"},/*#__PURE__*/React.createElement(DialogTitle,null,\"Load Parameter Profile\"),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(Select,{onChange:this.handleProfileChange,options:this.state.profileOptions,styles:{menuPortal:function menuPortal(base){return _objectSpread(_objectSpread({},base),{},{zIndex:9999});}},menuPortalTarget:document.body,isSearchable:false})),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:this.handleLoadDialogClose,color:\"secondary\"},\"Cancel\"),/*#__PURE__*/React.createElement(Button,{color:\"primary\",onClick:this.handleLoadProfile},\"Load\"))),/*#__PURE__*/React.createElement(Dialog,{open:saveDialogOpen,onClose:this.handleSaveDialogClose,fullWidth:true,maxWidth:\"xs\"},/*#__PURE__*/React.createElement(DialogTitle,null,\"Save Parameters\"),/*#__PURE__*/React.createElement(DialogContent,null,/*#__PURE__*/React.createElement(DialogContentText,null,\"Please enter your profile name\"),/*#__PURE__*/React.createElement(TextField,{variant:\"outlined\",label:\"Profile Name\",fullWidth:true,onChange:this.handleChangeProfileName})),/*#__PURE__*/React.createElement(DialogActions,null,/*#__PURE__*/React.createElement(Button,{onClick:this.handleSaveDialogClose,color:\"secondary\"},\"Cancel\"),/*#__PURE__*/React.createElement(Button,{color:\"primary\",onClick:this.handleSaveParams},\"Save\"))));}}]);return ProfileSetting;}(Component);export default ProfileSetting;","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/src/components/profileSetting.jsx"],"names":["React","Component","Fragment","axios","List","ListSubheader","ListItem","DialogContentText","TextField","DialogActions","DialogContent","Dialog","DialogTitle","Button","Paper","Select","ProfileSetting","state","loadDialogOpen","saveDialogOpen","profileName","profiles","profileOptions","selectedProfile","componentDidMount","handleFetchProfiles","componentDidUpdate","prevProps","currProfileBand","props","forEach","element","bandNumber","push","value","parameters","label","setState","get","response","data","alert","handleLoadDialogOpen","handleLoadDialogClose","handleSaveDialogOpen","handleSaveDialogClose","handleChangeProfileName","event","target","handleSaveParams","save","console","log","handleLoadProfile","load","handleProfileChange","profile","handleDisableSelect","maxWidth","menuPortal","base","zIndex","document","body"],"mappings":"49BAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,KAAT,KAAsB,aAAtB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qCAA9B,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,C,GAGMC,CAAAA,c,2VACFC,K,CAAQ,CACJC,cAAc,CAAE,KADZ,CAEJC,cAAc,CAAE,KAFZ,CAGJC,WAAW,CAAE,EAHT,CAIJC,QAAQ,CAAE,EAJN,CAKJC,cAAc,CAAE,EALZ,CAMJC,eAAe,CAAE,EANb,C,OAWRC,iB,sEAAoB,mIAChB,MAAKC,mBAAL,GADgB,sD,SAKpBC,kB,CAAsB,SAACC,SAAD,CAAe,IACzBC,CAAAA,eADyB,CACL,MAAKC,KADA,CACzBD,eADyB,IAEzBP,CAAAA,QAFyB,CAEZ,MAAKJ,KAFO,CAEzBI,QAFyB,CAIjC,GAAGM,SAAS,CAACC,eAAV,GAA8BA,eAAjC,CAAiD,CAC7C,GAAIN,CAAAA,cAAc,CAAG,EAArB,CACAD,QAAQ,CAACS,OAAT,CAAiB,SAAAC,OAAO,CAAI,CACxB,GAAGA,OAAO,CAACC,UAAR,GAAwBJ,eAA3B,CAA2C,CACvCN,cAAc,CAACW,IAAf,CAAoB,CAChBC,KAAK,CAAEH,OAAO,CAACI,UADC,CAEhBC,KAAK,CAAEL,OAAO,CAACX,WAFC,CAApB,EAIH,CACJ,CAPD,EAQA,MAAKiB,QAAL,CAAc,CACVf,cAAc,CAAdA,cADU,CAAd,EAGH,CAEJ,C,OAEDG,mB,sEAAsB,6LACVG,eADU,CACU,MAAKC,KADf,CACVD,eADU,yCAGSzB,CAAAA,KAAK,CAACmC,GAAN,CAAU,0BAAV,CAHT,QAGRC,QAHQ,gBAIVlB,QAJU,CAICkB,QAAQ,CAACC,IAJV,CAMVlB,cANU,CAMO,EANP,CAOdD,QAAQ,CAACS,OAAT,CAAiB,SAAAC,OAAO,CAAI,CACxB,GAAGA,OAAO,CAACC,UAAR,GAAwBJ,eAA3B,CAA2C,CACvCN,cAAc,CAACW,IAAf,CAAoB,CAChBC,KAAK,CAAEH,OAAO,CAACI,UADC,CAEhBC,KAAK,CAAEL,OAAO,CAACX,WAFC,CAApB,EAIH,CACJ,CAPD,EAQA,MAAKiB,QAAL,CAAc,CACVf,cAAc,CAAdA,cADU,CAEVD,QAAQ,CAARA,QAFU,CAAd,EAfc,qFAqBdoB,KAAK,CAAC,wBAAD,CAAL,CArBc,uE,SAyBtBC,oB,CAAuB,UAAM,CACzB,MAAKL,QAAL,CAAc,CACVnB,cAAc,CAAE,IADN,CAAd,EAGH,C,OAEDyB,qB,CAAwB,UAAM,CAC1B,MAAKN,QAAL,CAAc,CACVnB,cAAc,CAAE,KADN,CAAd,EAGH,C,OAED0B,oB,CAAuB,UAAM,CACzB,MAAKP,QAAL,CAAc,CACVlB,cAAc,CAAE,IADN,CAAd,EAGH,C,OAED0B,qB,CAAwB,UAAM,CAC1B,MAAKR,QAAL,CAAc,CACVlB,cAAc,CAAE,KADN,CAAd,EAGH,C,OAED2B,uB,CAA0B,SAACC,KAAD,CAAW,CACjC,MAAKV,QAAL,CAAc,CACVjB,WAAW,CAAE2B,KAAK,CAACC,MAAN,CAAad,KADhB,CAAd,EAGH,C,OAEDe,gB,sEAAmB,wLACPC,IADO,CACE,MAAKrB,KADP,CACPqB,IADO,aAEyB,MAAKjC,KAF9B,CAEPG,WAFO,aAEPA,WAFO,CAEME,cAFN,aAEMA,cAFN,MAGX4B,IAAI,EAAI,IAHG,oEAKDA,CAAAA,IAAI,CAAC9B,WAAD,CALH,+BAMD,OAAKK,mBAAL,EANC,QAOP,MAAKY,QAAL,CAAc,CACVlB,cAAc,CAAE,KADN,CAAd,EAPO,qFAaPgC,OAAO,CAACC,GAAR,eAbO,uE,SAkBnBC,iB,sEAAoB,iKACRC,IADQ,CACC,MAAKzB,KADN,CACRyB,IADQ,CAER/B,eAFQ,CAEY,MAAKN,KAFjB,CAERM,eAFQ,CAGhB4B,OAAO,CAACC,GAAR,CAAY7B,eAAZ,EAHgB,KAIZ+B,IAAI,EAAI,IAJI,oEAMFA,CAAAA,IAAI,CAAC/B,eAAD,CANF,2FASR4B,OAAO,CAACC,GAAR,eATQ,QAWZ,MAAKf,QAAL,CAAc,CACVnB,cAAc,CAAE,KADN,CAAd,EAXY,gCAgBZ,MAAKmB,QAAL,CAAc,CACVnB,cAAc,CAAE,KADN,CAAd,EAhBY,sE,SAsBpBqC,mB,CAAsB,SAACC,OAAD,CAAa,CAC/B,MAAKnB,QAAL,CAAc,CACVd,eAAe,CAAEiC,OAAO,CAACtB,KADf,CAAd,EAGH,C,OAGDuB,mB,CAAsB,UAAM,CAE3B,C,iFACQ,kBACsC,KAAKxC,KAD3C,CACGC,cADH,cACGA,cADH,CACmBC,cADnB,cACmBA,cADnB,CAEL,mBACI,oBAAC,QAAD,mBACI,oBAAC,KAAD,EAAO,KAAK,CAAE,CAACuC,QAAQ,CAAE,GAAX,CAAd,eACI,oBAAC,IAAD,EAAM,SAAS,cAAE,oBAAC,aAAD,2BAAjB,eACI,oBAAC,QAAD,mBACI,oBAAC,MAAD,EACA,KAAK,CAAC,SADN,CAEA,OAAO,CAAC,WAFR,CAGA,SAAS,KAHT,CAIA,OAAO,CAAE,KAAKhB,oBAJd,iBADJ,CADJ,cAWI,oBAAC,QAAD,mBACI,oBAAC,MAAD,EACA,KAAK,CAAC,SADN,CAEA,OAAO,CAAC,WAFR,CAGA,SAAS,KAHT,CAIA,OAAO,CAAE,KAAKE,oBAJd,iBADJ,CAXJ,CADJ,CADJ,cAyBI,oBAAC,MAAD,EAAQ,IAAI,CAAE1B,cAAd,CAA8B,MAAM,CAAC,MAArC,CAA4C,OAAO,CAAE,KAAKyB,qBAA1D,CACI,SAAS,KADb,CACc,QAAQ,CAAC,IADvB,eAGI,oBAAC,WAAD,+BAHJ,cAII,oBAAC,aAAD,mBACI,oBAAC,MAAD,EACI,QAAQ,CAAE,KAAKY,mBADnB,CAEI,OAAO,CAAE,KAAKtC,KAAL,CAAWK,cAFxB,CAGI,MAAM,CAAE,CAAEqC,UAAU,CAAE,oBAAAC,IAAI,wCAAUA,IAAV,MAAgBC,MAAM,CAAE,IAAxB,IAAlB,CAHZ,CAII,gBAAgB,CAAEC,QAAQ,CAACC,IAJ/B,CAKI,YAAY,CAAG,KALnB,EADJ,CAJJ,cAaI,oBAAC,aAAD,mBACI,oBAAC,MAAD,EACI,OAAO,CAAE,KAAKpB,qBADlB,CAEI,KAAK,CAAC,WAFV,WADJ,cAOI,oBAAC,MAAD,EACI,KAAK,CAAC,SADV,CAEI,OAAO,CAAE,KAAKU,iBAFlB,SAPJ,CAbJ,CAzBJ,cAqDI,oBAAC,MAAD,EAAQ,IAAI,CAAElC,cAAd,CAA8B,OAAO,CAAE,KAAK0B,qBAA5C,CACI,SAAS,KADb,CACc,QAAQ,CAAC,IADvB,eAGI,oBAAC,WAAD,wBAHJ,cAII,oBAAC,aAAD,mBACI,oBAAC,iBAAD,uCADJ,cAEI,oBAAC,SAAD,EACI,OAAO,CAAC,UADZ,CAEI,KAAK,CAAC,cAFV,CAGI,SAAS,KAHb,CAII,QAAQ,CAAE,KAAKC,uBAJnB,EAFJ,CAJJ,cAaI,oBAAC,aAAD,mBACI,oBAAC,MAAD,EACI,OAAO,CAAE,KAAKD,qBADlB,CAEI,KAAK,CAAC,WAFV,WADJ,cAOI,oBAAC,MAAD,EACI,KAAK,CAAC,SADV,CAEI,OAAO,CAAE,KAAKI,gBAFlB,SAPJ,CAbJ,CArDJ,CADJ,CAoFH,C,4BArOwBhD,S,EAwO7B,cAAee,CAAAA,cAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { axios } from 'utils/utils';\nimport List from '@material-ui/core/List';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport ListItem from '@material-ui/core/ListItem';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TextField from '@material-ui/core/TextField';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Select from 'react-select';\n\n\nclass ProfileSetting extends Component {\n    state = {\n        loadDialogOpen: false,\n        saveDialogOpen: false,\n        profileName: \"\",\n        profiles: [],\n        profileOptions: [],\n        selectedProfile: \"\",\n    };\n\n    // CurrProfileBand could not be ready for initial render in componentDidMount\n    // Re-filer in componentDidUpdate\n    componentDidMount = async () => {\n        this.handleFetchProfiles();\n    }\n\n    // Props are ready now, filter available profiles based on bandNumber\n    componentDidUpdate  = (prevProps) => {\n        const { currProfileBand } = this.props;\n        const { profiles } = this.state;\n\n        if(prevProps.currProfileBand !== currProfileBand){\n            let profileOptions = [];\n            profiles.forEach(element => {\n                if(element.bandNumber ===  currProfileBand){\n                    profileOptions.push({\n                        value: element.parameters,\n                        label: element.profileName,\n                    });\n                }\n            })\n            this.setState({\n                profileOptions,\n            });\n        }\n\n    }\n\n    handleFetchProfiles = async () => {\n        const { currProfileBand } = this.props;\n        try {\n            const response = await axios.get(\"/api/param/amplification\");\n            let profiles = response.data;\n\n            let profileOptions = [];\n            profiles.forEach(element => {\n                if(element.bandNumber ===  currProfileBand){\n                    profileOptions.push({\n                        value: element.parameters,\n                        label: element.profileName,\n                    });\n                }\n            })\n            this.setState({\n                profileOptions,\n                profiles,\n            });\n        }\n        catch (error) {\n            alert(\"Error loading profiles\");\n        }\n    }\n\n    handleLoadDialogOpen = () => {\n        this.setState({\n            loadDialogOpen: true,\n        });\n    }\n\n    handleLoadDialogClose = () => {\n        this.setState({\n            loadDialogOpen: false,\n        });\n    }\n\n    handleSaveDialogOpen = () => {\n        this.setState({\n            saveDialogOpen: true,\n        });\n    }\n\n    handleSaveDialogClose = () => {\n        this.setState({\n            saveDialogOpen: false,\n        });\n    }\n\n    handleChangeProfileName = (event) => {\n        this.setState({\n            profileName: event.target.value,\n        });\n    }\n\n    handleSaveParams = async () => {\n        const { save } = this.props;\n        const { profileName, profileOptions } = this.state;\n        if (save != null) {\n            try {\n                await save(profileName);\n                await this.handleFetchProfiles();\n                this.setState({\n                    saveDialogOpen: false,\n                });\n\n            }\n            catch (error) {\n                console.log(error);\n            }\n        }\n    }\n\n    handleLoadProfile = async () => {\n        const { load } = this.props;\n        const { selectedProfile } = this.state;\n        console.log(selectedProfile);\n        if (load != null) {\n            try {\n                await load(selectedProfile);\n            }\n            catch (error) {\n                console.log(error);\n            } \n            this.setState({\n                loadDialogOpen: false,\n            });\n        }\n        else {\n            this.setState({\n                loadDialogOpen: false,\n            });\n        }\n    }\n\n    handleProfileChange = (profile) => {\n        this.setState({\n            selectedProfile: profile.value,\n        });\n    }\n    \n    // Disable loading profile for different bands number\n    handleDisableSelect = () => {\n\n    }\n    render() {\n        const { loadDialogOpen, saveDialogOpen } = this.state;\n        return (\n            <Fragment>\n                <Paper style={{maxWidth: 350}}>\n                    <List subheader={<ListSubheader>Parameter Settings</ListSubheader>} >\n                        <ListItem>\n                            <Button \n                            color=\"primary\" \n                            variant=\"contained\" \n                            fullWidth \n                            onClick={this.handleLoadDialogOpen}\n                            >\n                                Load Profile\n                            </Button>\n                        </ListItem>\n                        <ListItem>\n                            <Button \n                            color=\"primary\" \n                            variant=\"contained\" \n                            fullWidth \n                            onClick={this.handleSaveDialogOpen}\n                            >\n                                Save Profile\n                            </Button>\n                        </ListItem>\n                    </List>\n                </Paper>            \n                <Dialog open={loadDialogOpen} scroll=\"body\" onClose={this.handleLoadDialogClose}\n                    fullWidth maxWidth=\"xs\"\n                >\n                    <DialogTitle>Load Parameter Profile</DialogTitle>\n                    <DialogContent>\n                        <Select\n                            onChange={this.handleProfileChange}\n                            options={this.state.profileOptions}\n                            styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n                            menuPortalTarget={document.body}\n                            isSearchable={ false }\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            onClick={this.handleLoadDialogClose}\n                            color=\"secondary\"\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            color=\"primary\"\n                            onClick={this.handleLoadProfile}\n                        >\n                            Load\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog open={saveDialogOpen} onClose={this.handleSaveDialogClose}\n                    fullWidth maxWidth=\"xs\"\n                >\n                    <DialogTitle>Save Parameters</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>Please enter your profile name</DialogContentText>\n                        <TextField\n                            variant=\"outlined\"\n                            label=\"Profile Name\"\n                            fullWidth\n                            onChange={this.handleChangeProfileName}\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button\n                            onClick={this.handleSaveDialogClose}\n                            color=\"secondary\"\n                        >\n                            Cancel\n                        </Button>\n                        <Button\n                            color=\"primary\"\n                            onClick={this.handleSaveParams}\n                        >\n                            Save\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Fragment>\n        );\n    }\n}\n\nexport default ProfileSetting;"]},"metadata":{},"sourceType":"module"}