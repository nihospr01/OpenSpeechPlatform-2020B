{"ast":null,"code":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n\nvar PhotosMimeType = require('./PhotosMimeType');\n\nvar createArrayFromMixed = require('./createArrayFromMixed');\n\nvar emptyFunction = require('./emptyFunction');\n\nvar CR_LF_REGEX = new RegExp('\\r\\n', 'g');\nvar LF_ONLY = '\\n';\nvar RICH_TEXT_TYPES = {\n  'text/rtf': 1,\n  'text/html': 1\n};\n/**\n * If DataTransferItem is a file then return the Blob of data.\n *\n * @param {object} item\n * @return {?blob}\n */\n\nfunction getFileFromDataTransfer(item) {\n  if (item.kind == 'file') {\n    return item.getAsFile();\n  }\n}\n\nvar DataTransfer = function () {\n  /**\n   * @param {object} data\n   */\n  function DataTransfer(data) {\n    _classCallCheck(this, DataTransfer);\n\n    this.data = data; // Types could be DOMStringList or array\n\n    this.types = data.types ? createArrayFromMixed(data.types) : [];\n  }\n  /**\n   * Is this likely to be a rich text data transfer?\n   *\n   * @return {boolean}\n   */\n\n\n  DataTransfer.prototype.isRichText = function isRichText() {\n    // If HTML is available, treat this data as rich text. This way, we avoid\n    // using a pasted image if it is packaged with HTML -- this may occur with\n    // pastes from MS Word, for example.  However this is only rich text if\n    // there's accompanying text.\n    if (this.getHTML() && this.getText()) {\n      return true;\n    } // When an image is copied from a preview window, you end up with two\n    // DataTransferItems one of which is a file's metadata as text.  Skip those.\n\n\n    if (this.isImage()) {\n      return false;\n    }\n\n    return this.types.some(function (type) {\n      return RICH_TEXT_TYPES[type];\n    });\n  };\n  /**\n   * Get raw text.\n   *\n   * @return {?string}\n   */\n\n\n  DataTransfer.prototype.getText = function getText() {\n    var text;\n\n    if (this.data.getData) {\n      if (!this.types.length) {\n        text = this.data.getData('Text');\n      } else if (this.types.indexOf('text/plain') != -1) {\n        text = this.data.getData('text/plain');\n      }\n    }\n\n    return text ? text.replace(CR_LF_REGEX, LF_ONLY) : null;\n  };\n  /**\n   * Get HTML paste data\n   *\n   * @return {?string}\n   */\n\n\n  DataTransfer.prototype.getHTML = function getHTML() {\n    if (this.data.getData) {\n      if (!this.types.length) {\n        return this.data.getData('Text');\n      } else if (this.types.indexOf('text/html') != -1) {\n        return this.data.getData('text/html');\n      }\n    }\n  };\n  /**\n   * Is this a link data transfer?\n   *\n   * @return {boolean}\n   */\n\n\n  DataTransfer.prototype.isLink = function isLink() {\n    return this.types.some(function (type) {\n      return type.indexOf('Url') != -1 || type.indexOf('text/uri-list') != -1 || type.indexOf('text/x-moz-url');\n    });\n  };\n  /**\n   * Get a link url.\n   *\n   * @return {?string}\n   */\n\n\n  DataTransfer.prototype.getLink = function getLink() {\n    if (this.data.getData) {\n      if (this.types.indexOf('text/x-moz-url') != -1) {\n        var url = this.data.getData('text/x-moz-url').split('\\n');\n        return url[0];\n      }\n\n      return this.types.indexOf('text/uri-list') != -1 ? this.data.getData('text/uri-list') : this.data.getData('url');\n    }\n\n    return null;\n  };\n  /**\n   * Is this an image data transfer?\n   *\n   * @return {boolean}\n   */\n\n\n  DataTransfer.prototype.isImage = function isImage() {\n    var isImage = this.types.some(function (type) {\n      // Firefox will have a type of application/x-moz-file for images during\n      // dragging\n      return type.indexOf('application/x-moz-file') != -1;\n    });\n\n    if (isImage) {\n      return true;\n    }\n\n    var items = this.getFiles();\n\n    for (var i = 0; i < items.length; i++) {\n      var type = items[i].type;\n\n      if (!PhotosMimeType.isImage(type)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  DataTransfer.prototype.getCount = function getCount() {\n    if (this.data.hasOwnProperty('items')) {\n      return this.data.items.length;\n    } else if (this.data.hasOwnProperty('mozItemCount')) {\n      return this.data.mozItemCount;\n    } else if (this.data.files) {\n      return this.data.files.length;\n    }\n\n    return null;\n  };\n  /**\n   * Get files.\n   *\n   * @return {array}\n   */\n\n\n  DataTransfer.prototype.getFiles = function getFiles() {\n    if (this.data.items) {\n      // createArrayFromMixed doesn't properly handle DataTransferItemLists.\n      return Array.prototype.slice.call(this.data.items).map(getFileFromDataTransfer).filter(emptyFunction.thatReturnsArgument);\n    } else if (this.data.files) {\n      return Array.prototype.slice.call(this.data.files);\n    } else {\n      return [];\n    }\n  };\n  /**\n   * Are there any files to fetch?\n   *\n   * @return {boolean}\n   */\n\n\n  DataTransfer.prototype.hasFiles = function hasFiles() {\n    return this.getFiles().length > 0;\n  };\n\n  return DataTransfer;\n}();\n\nmodule.exports = DataTransfer;","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/fbjs/lib/DataTransfer.js"],"names":["_classCallCheck","instance","Constructor","TypeError","PhotosMimeType","require","createArrayFromMixed","emptyFunction","CR_LF_REGEX","RegExp","LF_ONLY","RICH_TEXT_TYPES","getFileFromDataTransfer","item","kind","getAsFile","DataTransfer","data","types","prototype","isRichText","getHTML","getText","isImage","some","type","text","getData","length","indexOf","replace","isLink","getLink","url","split","items","getFiles","i","getCount","hasOwnProperty","mozItemCount","files","Array","slice","call","map","filter","thatReturnsArgument","hasFiles","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar PhotosMimeType = require('./PhotosMimeType');\n\nvar createArrayFromMixed = require('./createArrayFromMixed');\nvar emptyFunction = require('./emptyFunction');\n\nvar CR_LF_REGEX = new RegExp('\\r\\n', 'g');\nvar LF_ONLY = '\\n';\n\nvar RICH_TEXT_TYPES = {\n  'text/rtf': 1,\n  'text/html': 1\n};\n\n/**\n * If DataTransferItem is a file then return the Blob of data.\n *\n * @param {object} item\n * @return {?blob}\n */\nfunction getFileFromDataTransfer(item) {\n  if (item.kind == 'file') {\n    return item.getAsFile();\n  }\n}\n\nvar DataTransfer = function () {\n  /**\n   * @param {object} data\n   */\n  function DataTransfer(data) {\n    _classCallCheck(this, DataTransfer);\n\n    this.data = data;\n\n    // Types could be DOMStringList or array\n    this.types = data.types ? createArrayFromMixed(data.types) : [];\n  }\n\n  /**\n   * Is this likely to be a rich text data transfer?\n   *\n   * @return {boolean}\n   */\n\n\n  DataTransfer.prototype.isRichText = function isRichText() {\n    // If HTML is available, treat this data as rich text. This way, we avoid\n    // using a pasted image if it is packaged with HTML -- this may occur with\n    // pastes from MS Word, for example.  However this is only rich text if\n    // there's accompanying text.\n    if (this.getHTML() && this.getText()) {\n      return true;\n    }\n\n    // When an image is copied from a preview window, you end up with two\n    // DataTransferItems one of which is a file's metadata as text.  Skip those.\n    if (this.isImage()) {\n      return false;\n    }\n\n    return this.types.some(function (type) {\n      return RICH_TEXT_TYPES[type];\n    });\n  };\n\n  /**\n   * Get raw text.\n   *\n   * @return {?string}\n   */\n\n\n  DataTransfer.prototype.getText = function getText() {\n    var text;\n    if (this.data.getData) {\n      if (!this.types.length) {\n        text = this.data.getData('Text');\n      } else if (this.types.indexOf('text/plain') != -1) {\n        text = this.data.getData('text/plain');\n      }\n    }\n    return text ? text.replace(CR_LF_REGEX, LF_ONLY) : null;\n  };\n\n  /**\n   * Get HTML paste data\n   *\n   * @return {?string}\n   */\n\n\n  DataTransfer.prototype.getHTML = function getHTML() {\n    if (this.data.getData) {\n      if (!this.types.length) {\n        return this.data.getData('Text');\n      } else if (this.types.indexOf('text/html') != -1) {\n        return this.data.getData('text/html');\n      }\n    }\n  };\n\n  /**\n   * Is this a link data transfer?\n   *\n   * @return {boolean}\n   */\n\n\n  DataTransfer.prototype.isLink = function isLink() {\n    return this.types.some(function (type) {\n      return type.indexOf('Url') != -1 || type.indexOf('text/uri-list') != -1 || type.indexOf('text/x-moz-url');\n    });\n  };\n\n  /**\n   * Get a link url.\n   *\n   * @return {?string}\n   */\n\n\n  DataTransfer.prototype.getLink = function getLink() {\n    if (this.data.getData) {\n      if (this.types.indexOf('text/x-moz-url') != -1) {\n        var url = this.data.getData('text/x-moz-url').split('\\n');\n        return url[0];\n      }\n      return this.types.indexOf('text/uri-list') != -1 ? this.data.getData('text/uri-list') : this.data.getData('url');\n    }\n\n    return null;\n  };\n\n  /**\n   * Is this an image data transfer?\n   *\n   * @return {boolean}\n   */\n\n\n  DataTransfer.prototype.isImage = function isImage() {\n    var isImage = this.types.some(function (type) {\n      // Firefox will have a type of application/x-moz-file for images during\n      // dragging\n      return type.indexOf('application/x-moz-file') != -1;\n    });\n\n    if (isImage) {\n      return true;\n    }\n\n    var items = this.getFiles();\n    for (var i = 0; i < items.length; i++) {\n      var type = items[i].type;\n      if (!PhotosMimeType.isImage(type)) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  DataTransfer.prototype.getCount = function getCount() {\n    if (this.data.hasOwnProperty('items')) {\n      return this.data.items.length;\n    } else if (this.data.hasOwnProperty('mozItemCount')) {\n      return this.data.mozItemCount;\n    } else if (this.data.files) {\n      return this.data.files.length;\n    }\n    return null;\n  };\n\n  /**\n   * Get files.\n   *\n   * @return {array}\n   */\n\n\n  DataTransfer.prototype.getFiles = function getFiles() {\n    if (this.data.items) {\n      // createArrayFromMixed doesn't properly handle DataTransferItemLists.\n      return Array.prototype.slice.call(this.data.items).map(getFileFromDataTransfer).filter(emptyFunction.thatReturnsArgument);\n    } else if (this.data.files) {\n      return Array.prototype.slice.call(this.data.files);\n    } else {\n      return [];\n    }\n  };\n\n  /**\n   * Are there any files to fetch?\n   *\n   * @return {boolean}\n   */\n\n\n  DataTransfer.prototype.hasFiles = function hasFiles() {\n    return this.getFiles().length > 0;\n  };\n\n  return DataTransfer;\n}();\n\nmodule.exports = DataTransfer;"]},"metadata":{},"sourceType":"script"}