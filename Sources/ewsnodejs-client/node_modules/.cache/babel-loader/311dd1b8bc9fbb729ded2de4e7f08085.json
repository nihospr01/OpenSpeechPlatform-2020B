{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\nimport _Suggestions from '../component/Suggestions.react';\nimport SuggestionPortal from '../component/SuggestionPortal.react';\nimport MentionContent from '../component/MentionContent.react';\nimport mentionStore from '../model/mentionStore';\nimport exportContent from './exportContent';\nimport getRegExp from '../utils/getRegExp';\n\nfunction findWithRegex(regex, contentBlock, callback) {\n  // Get the text from the contentBlock\n  var text = contentBlock.getText();\n  var matchArr = void 0;\n  var start = void 0; // eslint-disable-line\n\n  var end = void 0; // Go through all matches in the text and return the indizes to the callback\n\n  while ((matchArr = regex.exec(text)) !== null) {\n    // eslint-disable-line\n    start = matchArr.index;\n    end = start + matchArr[0].length;\n    callback(start, end);\n    if (start === end) break;\n  }\n}\n\nfunction mentionContentStrategy(contentBlock, callback, contentState) {\n  contentBlock.findEntityRanges(function (character) {\n    var entityKey = character.getEntity();\n    return entityKey && contentState.getEntity(entityKey).getType() === 'mention';\n  }, callback);\n}\n\nfunction noop() {}\n\nvar MentionContentComponent = function MentionContentComponent(props) {\n  var entityKey = props.entityKey,\n      tag = props.tag,\n      callbacks = props.callbacks;\n  var contentState = callbacks.getEditorState().getCurrentContent();\n  var data = contentState.getEntity(entityKey).getData();\n  return React.createElement(tag, _extends({}, props, {\n    data: data\n  }));\n};\n\nexport default function createMention() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var callbacks = {\n    onChange: noop,\n    onUpArrow: noop,\n    onDownArrow: noop,\n    getEditorState: noop,\n    setEditorState: noop,\n    handleReturn: noop,\n    onBlur: noop\n  };\n  var componentProps = {\n    callbacks: callbacks,\n    mentionStore: mentionStore\n  };\n  var suggestionRegex = getRegExp(config.prefix);\n  var tag = config.tag || MentionContent;\n  var decorators = [{\n    strategy: function strategy(contentBlock, callback) {\n      findWithRegex(suggestionRegex, contentBlock, callback);\n    },\n    component: function component(props) {\n      return React.createElement(SuggestionPortal, _extends({}, props, componentProps, {\n        style: config.mentionStyle,\n        suggestionRegex: getRegExp(config.prefix)\n      }));\n    }\n  }];\n\n  if (config.mode === 'immutable') {\n    decorators.unshift({\n      strategy: mentionContentStrategy,\n      component: function component(props) {\n        return React.createElement(MentionContentComponent, _extends({\n          tag: tag\n        }, props, {\n          callbacks: callbacks\n        }));\n      }\n    });\n  }\n\n  return {\n    name: 'mention',\n    Suggestions: function Suggestions(props) {\n      return React.createElement(_Suggestions, _extends({}, props, componentProps, {\n        store: mentionStore\n      }));\n    },\n    decorators: decorators,\n    onChange: function onChange(editorState) {\n      return callbacks.onChange ? callbacks.onChange(editorState) : editorState;\n    },\n    callbacks: callbacks,\n    'export': exportContent\n  };\n}","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/rc-editor-mention/es/utils/createMention.js"],"names":["_extends","React","_Suggestions","SuggestionPortal","MentionContent","mentionStore","exportContent","getRegExp","findWithRegex","regex","contentBlock","callback","text","getText","matchArr","start","end","exec","index","length","mentionContentStrategy","contentState","findEntityRanges","character","entityKey","getEntity","getType","noop","MentionContentComponent","props","tag","callbacks","getEditorState","getCurrentContent","data","getData","createElement","createMention","config","arguments","undefined","onChange","onUpArrow","onDownArrow","setEditorState","handleReturn","onBlur","componentProps","suggestionRegex","prefix","decorators","strategy","component","style","mentionStyle","mode","unshift","name","Suggestions","store","editorState"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\nimport _Suggestions from '../component/Suggestions.react';\nimport SuggestionPortal from '../component/SuggestionPortal.react';\nimport MentionContent from '../component/MentionContent.react';\nimport mentionStore from '../model/mentionStore';\nimport exportContent from './exportContent';\nimport getRegExp from '../utils/getRegExp';\n\nfunction findWithRegex(regex, contentBlock, callback) {\n  // Get the text from the contentBlock\n  var text = contentBlock.getText();\n  var matchArr = void 0;\n  var start = void 0; // eslint-disable-line\n  var end = void 0;\n  // Go through all matches in the text and return the indizes to the callback\n  while ((matchArr = regex.exec(text)) !== null) {\n    // eslint-disable-line\n    start = matchArr.index;\n    end = start + matchArr[0].length;\n    callback(start, end);\n    if (start === end) break;\n  }\n}\n\nfunction mentionContentStrategy(contentBlock, callback, contentState) {\n  contentBlock.findEntityRanges(function (character) {\n    var entityKey = character.getEntity();\n    return entityKey && contentState.getEntity(entityKey).getType() === 'mention';\n  }, callback);\n}\n\nfunction noop() {}\n\nvar MentionContentComponent = function MentionContentComponent(props) {\n  var entityKey = props.entityKey,\n      tag = props.tag,\n      callbacks = props.callbacks;\n\n  var contentState = callbacks.getEditorState().getCurrentContent();\n  var data = contentState.getEntity(entityKey).getData();\n  return React.createElement(tag, _extends({}, props, { data: data }));\n};\n\nexport default function createMention() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var callbacks = {\n    onChange: noop,\n    onUpArrow: noop,\n    onDownArrow: noop,\n    getEditorState: noop,\n    setEditorState: noop,\n    handleReturn: noop,\n    onBlur: noop\n  };\n  var componentProps = {\n    callbacks: callbacks,\n    mentionStore: mentionStore\n  };\n  var suggestionRegex = getRegExp(config.prefix);\n\n  var tag = config.tag || MentionContent;\n  var decorators = [{\n    strategy: function strategy(contentBlock, callback) {\n      findWithRegex(suggestionRegex, contentBlock, callback);\n    },\n    component: function component(props) {\n      return React.createElement(SuggestionPortal, _extends({}, props, componentProps, {\n        style: config.mentionStyle,\n        suggestionRegex: getRegExp(config.prefix)\n      }));\n    }\n  }];\n  if (config.mode === 'immutable') {\n    decorators.unshift({\n      strategy: mentionContentStrategy,\n      component: function component(props) {\n        return React.createElement(MentionContentComponent, _extends({ tag: tag }, props, { callbacks: callbacks }));\n      }\n    });\n  }\n\n  return {\n    name: 'mention',\n    Suggestions: function Suggestions(props) {\n      return React.createElement(_Suggestions, _extends({}, props, componentProps, {\n        store: mentionStore\n      }));\n    },\n    decorators: decorators,\n    onChange: function onChange(editorState) {\n      return callbacks.onChange ? callbacks.onChange(editorState) : editorState;\n    },\n    callbacks: callbacks,\n    'export': exportContent\n  };\n}"]},"metadata":{},"sourceType":"module"}