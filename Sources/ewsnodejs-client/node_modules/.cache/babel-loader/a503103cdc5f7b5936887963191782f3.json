{"ast":null,"code":"var ITERATOR = require('./_wks')('iterator');\n\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n\n  riter['return'] = function () {\n    SAFE_CLOSING = true;\n  }; // eslint-disable-next-line no-throw-literal\n\n\n  Array.from(riter, function () {\n    throw 2;\n  });\n} catch (e) {\n  /* empty */\n}\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n\n    iter.next = function () {\n      return {\n        done: safe = true\n      };\n    };\n\n    arr[ITERATOR] = function () {\n      return iter;\n    };\n\n    exec(arr);\n  } catch (e) {\n    /* empty */\n  }\n\n  return safe;\n};","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/core-js/library/modules/_iter-detect.js"],"names":["ITERATOR","require","SAFE_CLOSING","riter","Array","from","e","module","exports","exec","skipClosing","safe","arr","iter","next","done"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkB,UAAlB,CAAf;;AACA,IAAIC,YAAY,GAAG,KAAnB;;AAEA,IAAI;AACF,MAAIC,KAAK,GAAG,CAAC,CAAD,EAAIH,QAAJ,GAAZ;;AACAG,EAAAA,KAAK,CAAC,QAAD,CAAL,GAAkB,YAAY;AAAED,IAAAA,YAAY,GAAG,IAAf;AAAsB,GAAtD,CAFE,CAGF;;;AACAE,EAAAA,KAAK,CAACC,IAAN,CAAWF,KAAX,EAAkB,YAAY;AAAE,UAAM,CAAN;AAAU,GAA1C;AACD,CALD,CAKE,OAAOG,CAAP,EAAU;AAAE;AAAa;;AAE3BC,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgBC,WAAhB,EAA6B;AAC5C,MAAI,CAACA,WAAD,IAAgB,CAACR,YAArB,EAAmC,OAAO,KAAP;AACnC,MAAIS,IAAI,GAAG,KAAX;;AACA,MAAI;AACF,QAAIC,GAAG,GAAG,CAAC,CAAD,CAAV;AACA,QAAIC,IAAI,GAAGD,GAAG,CAACZ,QAAD,CAAH,EAAX;;AACAa,IAAAA,IAAI,CAACC,IAAL,GAAY,YAAY;AAAE,aAAO;AAAEC,QAAAA,IAAI,EAAEJ,IAAI,GAAG;AAAf,OAAP;AAA+B,KAAzD;;AACAC,IAAAA,GAAG,CAACZ,QAAD,CAAH,GAAgB,YAAY;AAAE,aAAOa,IAAP;AAAc,KAA5C;;AACAJ,IAAAA,IAAI,CAACG,GAAD,CAAJ;AACD,GAND,CAME,OAAON,CAAP,EAAU;AAAE;AAAa;;AAC3B,SAAOK,IAAP;AACD,CAXD","sourcesContent":["var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n"]},"metadata":{},"sourceType":"script"}