{"ast":null,"code":"import Quad from \"./quad.js\";\nexport default function (callback) {\n  var quads = [],\n      q,\n      node = this._root,\n      child,\n      x0,\n      y0,\n      x1,\n      y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2,\n          ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n\n  return this;\n}","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/d3-quadtree/src/visit.js"],"names":["Quad","callback","quads","q","node","_root","child","x0","y0","x1","y1","push","_x0","_y0","_x1","_y1","pop","length","xm","ym"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,eAAe,UAASC,QAAT,EAAmB;AAChC,MAAIC,KAAK,GAAG,EAAZ;AAAA,MAAgBC,CAAhB;AAAA,MAAmBC,IAAI,GAAG,KAAKC,KAA/B;AAAA,MAAsCC,KAAtC;AAAA,MAA6CC,EAA7C;AAAA,MAAiDC,EAAjD;AAAA,MAAqDC,EAArD;AAAA,MAAyDC,EAAzD;AACA,MAAIN,IAAJ,EAAUF,KAAK,CAACS,IAAN,CAAW,IAAIX,IAAJ,CAASI,IAAT,EAAe,KAAKQ,GAApB,EAAyB,KAAKC,GAA9B,EAAmC,KAAKC,GAAxC,EAA6C,KAAKC,GAAlD,CAAX;;AACV,SAAOZ,CAAC,GAAGD,KAAK,CAACc,GAAN,EAAX,EAAwB;AACtB,QAAI,CAACf,QAAQ,CAACG,IAAI,GAAGD,CAAC,CAACC,IAAV,EAAgBG,EAAE,GAAGJ,CAAC,CAACI,EAAvB,EAA2BC,EAAE,GAAGL,CAAC,CAACK,EAAlC,EAAsCC,EAAE,GAAGN,CAAC,CAACM,EAA7C,EAAiDC,EAAE,GAAGP,CAAC,CAACO,EAAxD,CAAT,IAAwEN,IAAI,CAACa,MAAjF,EAAyF;AACvF,UAAIC,EAAE,GAAG,CAACX,EAAE,GAAGE,EAAN,IAAY,CAArB;AAAA,UAAwBU,EAAE,GAAG,CAACX,EAAE,GAAGE,EAAN,IAAY,CAAzC;AACA,UAAIJ,KAAK,GAAGF,IAAI,CAAC,CAAD,CAAhB,EAAqBF,KAAK,CAACS,IAAN,CAAW,IAAIX,IAAJ,CAASM,KAAT,EAAgBY,EAAhB,EAAoBC,EAApB,EAAwBV,EAAxB,EAA4BC,EAA5B,CAAX;AACrB,UAAIJ,KAAK,GAAGF,IAAI,CAAC,CAAD,CAAhB,EAAqBF,KAAK,CAACS,IAAN,CAAW,IAAIX,IAAJ,CAASM,KAAT,EAAgBC,EAAhB,EAAoBY,EAApB,EAAwBD,EAAxB,EAA4BR,EAA5B,CAAX;AACrB,UAAIJ,KAAK,GAAGF,IAAI,CAAC,CAAD,CAAhB,EAAqBF,KAAK,CAACS,IAAN,CAAW,IAAIX,IAAJ,CAASM,KAAT,EAAgBY,EAAhB,EAAoBV,EAApB,EAAwBC,EAAxB,EAA4BU,EAA5B,CAAX;AACrB,UAAIb,KAAK,GAAGF,IAAI,CAAC,CAAD,CAAhB,EAAqBF,KAAK,CAACS,IAAN,CAAW,IAAIX,IAAJ,CAASM,KAAT,EAAgBC,EAAhB,EAAoBC,EAApB,EAAwBU,EAAxB,EAA4BC,EAA5B,CAAX;AACtB;AACF;;AACD,SAAO,IAAP;AACD","sourcesContent":["import Quad from \"./quad.js\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n"]},"metadata":{},"sourceType":"module"}