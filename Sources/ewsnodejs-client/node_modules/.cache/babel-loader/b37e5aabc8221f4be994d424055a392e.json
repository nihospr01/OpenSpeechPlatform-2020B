{"ast":null,"code":"export function encodeContent(text) {\n  return text.split('&').join('&amp;').split('<').join('&lt;').split('>').join('&gt;').split('\\xA0').join('&nbsp;').split('\\n').join('<br />' + '\\n');\n}\nexport function decodeContent(text) {\n  return text.split('<br />' + '\\n').join('\\n');\n}\nexport default function exportText(editorState) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    encode: false\n  };\n  var content = editorState.getCurrentContent();\n  var blockMap = content.getBlockMap();\n  var encode = options.encode;\n  return blockMap.map(function (block) {\n    var resultText = '';\n    var lastPosition = 0;\n    var text = block.getText();\n    block.findEntityRanges(function (character) {\n      return !!character.getEntity();\n    }, function (start, end) {\n      var key = block.getEntityAt(start);\n      var entityData = content.getEntity(key).getData();\n      resultText += text.slice(lastPosition, start);\n      resultText += entityData && entityData['export'] ? entityData['export'](entityData) : text.slice(start, end);\n      lastPosition = end;\n    });\n    resultText += text.slice(lastPosition);\n    return encode ? encodeContent(resultText) : resultText;\n  }).join(encode ? '<br />\\n' : '\\n');\n}","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/rc-editor-core/es/EditorCore/export/exportText.js"],"names":["encodeContent","text","split","join","decodeContent","exportText","editorState","options","arguments","length","undefined","encode","content","getCurrentContent","blockMap","getBlockMap","map","block","resultText","lastPosition","getText","findEntityRanges","character","getEntity","start","end","key","getEntityAt","entityData","getData","slice"],"mappings":"AAAA,OAAO,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AAChC,SAAOA,IAAI,CAACC,KAAL,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,OAArB,EAA8BD,KAA9B,CAAoC,GAApC,EAAyCC,IAAzC,CAA8C,MAA9C,EAAsDD,KAAtD,CAA4D,GAA5D,EAAiEC,IAAjE,CAAsE,MAAtE,EAA8ED,KAA9E,CAAoF,MAApF,EAA4FC,IAA5F,CAAiG,QAAjG,EAA2GD,KAA3G,CAAiH,IAAjH,EAAuHC,IAAvH,CAA4H,WAAW,IAAvI,CAAP;AACH;AACD,OAAO,SAASC,aAAT,CAAuBH,IAAvB,EAA6B;AAChC,SAAOA,IAAI,CAACC,KAAL,CAAW,WAAW,IAAtB,EAA4BC,IAA5B,CAAiC,IAAjC,CAAP;AACH;AACD,eAAe,SAASE,UAAT,CAAoBC,WAApB,EAAiC;AAC5C,MAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE;AAAEG,IAAAA,MAAM,EAAE;AAAV,GAAlF;AAEA,MAAIC,OAAO,GAAGN,WAAW,CAACO,iBAAZ,EAAd;AACA,MAAIC,QAAQ,GAAGF,OAAO,CAACG,WAAR,EAAf;AACA,MAAIJ,MAAM,GAAGJ,OAAO,CAACI,MAArB;AAEA,SAAOG,QAAQ,CAACE,GAAT,CAAa,UAAUC,KAAV,EAAiB;AACjC,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAIC,YAAY,GAAG,CAAnB;AACA,QAAIlB,IAAI,GAAGgB,KAAK,CAACG,OAAN,EAAX;AACAH,IAAAA,KAAK,CAACI,gBAAN,CAAuB,UAAUC,SAAV,EAAqB;AACxC,aAAO,CAAC,CAACA,SAAS,CAACC,SAAV,EAAT;AACH,KAFD,EAEG,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AACrB,UAAIC,GAAG,GAAGT,KAAK,CAACU,WAAN,CAAkBH,KAAlB,CAAV;AACA,UAAII,UAAU,GAAGhB,OAAO,CAACW,SAAR,CAAkBG,GAAlB,EAAuBG,OAAvB,EAAjB;AACAX,MAAAA,UAAU,IAAIjB,IAAI,CAAC6B,KAAL,CAAWX,YAAX,EAAyBK,KAAzB,CAAd;AACAN,MAAAA,UAAU,IAAIU,UAAU,IAAIA,UAAU,CAAC,QAAD,CAAxB,GAAqCA,UAAU,CAAC,QAAD,CAAV,CAAqBA,UAArB,CAArC,GAAwE3B,IAAI,CAAC6B,KAAL,CAAWN,KAAX,EAAkBC,GAAlB,CAAtF;AACAN,MAAAA,YAAY,GAAGM,GAAf;AACH,KARD;AASAP,IAAAA,UAAU,IAAIjB,IAAI,CAAC6B,KAAL,CAAWX,YAAX,CAAd;AACA,WAAOR,MAAM,GAAGX,aAAa,CAACkB,UAAD,CAAhB,GAA+BA,UAA5C;AACH,GAfM,EAeJf,IAfI,CAeCQ,MAAM,GAAG,UAAH,GAAgB,IAfvB,CAAP;AAgBH","sourcesContent":["export function encodeContent(text) {\n    return text.split('&').join('&amp;').split('<').join('&lt;').split('>').join('&gt;').split('\\xA0').join('&nbsp;').split('\\n').join('<br />' + '\\n');\n}\nexport function decodeContent(text) {\n    return text.split('<br />' + '\\n').join('\\n');\n}\nexport default function exportText(editorState) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { encode: false };\n\n    var content = editorState.getCurrentContent();\n    var blockMap = content.getBlockMap();\n    var encode = options.encode;\n\n    return blockMap.map(function (block) {\n        var resultText = '';\n        var lastPosition = 0;\n        var text = block.getText();\n        block.findEntityRanges(function (character) {\n            return !!character.getEntity();\n        }, function (start, end) {\n            var key = block.getEntityAt(start);\n            var entityData = content.getEntity(key).getData();\n            resultText += text.slice(lastPosition, start);\n            resultText += entityData && entityData['export'] ? entityData['export'](entityData) : text.slice(start, end);\n            lastPosition = end;\n        });\n        resultText += text.slice(lastPosition);\n        return encode ? encodeContent(resultText) : resultText;\n    }).join(encode ? '<br />\\n' : '\\n');\n}"]},"metadata":{},"sourceType":"module"}