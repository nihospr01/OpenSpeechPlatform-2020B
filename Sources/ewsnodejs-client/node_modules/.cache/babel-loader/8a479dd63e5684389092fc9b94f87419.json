{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule generateRandomKey\n * @format\n * \n */\n'use strict';\n\nvar seenKeys = {};\nvar MULTIPLIER = Math.pow(2, 24);\n\nfunction generateRandomKey() {\n  var key = void 0;\n\n  while (key === undefined || seenKeys.hasOwnProperty(key) || !isNaN(+key)) {\n    key = Math.floor(Math.random() * MULTIPLIER).toString(32);\n  }\n\n  seenKeys[key] = true;\n  return key;\n}\n\nmodule.exports = generateRandomKey;","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/node_modules/draft-js/lib/generateRandomKey.js"],"names":["seenKeys","MULTIPLIER","Math","pow","generateRandomKey","key","undefined","hasOwnProperty","isNaN","floor","random","toString","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,QAAQ,GAAG,EAAf;AACA,IAAIC,UAAU,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,CAAjB;;AAEA,SAASC,iBAAT,GAA6B;AAC3B,MAAIC,GAAG,GAAG,KAAK,CAAf;;AACA,SAAOA,GAAG,KAAKC,SAAR,IAAqBN,QAAQ,CAACO,cAAT,CAAwBF,GAAxB,CAArB,IAAqD,CAACG,KAAK,CAAC,CAACH,GAAF,CAAlE,EAA0E;AACxEA,IAAAA,GAAG,GAAGH,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACQ,MAAL,KAAgBT,UAA3B,EAAuCU,QAAvC,CAAgD,EAAhD,CAAN;AACD;;AACDX,EAAAA,QAAQ,CAACK,GAAD,CAAR,GAAgB,IAAhB;AACA,SAAOA,GAAP;AACD;;AAEDO,MAAM,CAACC,OAAP,GAAiBT,iBAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule generateRandomKey\n * @format\n * \n */\n\n'use strict';\n\nvar seenKeys = {};\nvar MULTIPLIER = Math.pow(2, 24);\n\nfunction generateRandomKey() {\n  var key = void 0;\n  while (key === undefined || seenKeys.hasOwnProperty(key) || !isNaN(+key)) {\n    key = Math.floor(Math.random() * MULTIPLIER).toString(32);\n  }\n  seenKeys[key] = true;\n  return key;\n}\n\nmodule.exports = generateRandomKey;"]},"metadata":{},"sourceType":"script"}