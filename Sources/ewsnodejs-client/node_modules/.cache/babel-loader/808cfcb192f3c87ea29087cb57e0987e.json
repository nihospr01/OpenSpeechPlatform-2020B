{"ast":null,"code":"import _slicedToArray from\"/opt/osp/ewsnodejs-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useMemo,useEffect,useState}from'react';import Alert from'@material-ui/lab/Alert';import{withRouter}from'react-router-dom';import{compose}from'recompose';import withUserAuth from'context/withUserAuth';import axios from'axios';var serverPrefix=\"/api/researcher/video?name=\";var type=\"video/mp4\";function VideoPlayer(_ref){var videoSrc=_ref.videoSrc,hasUrl=_ref.hasUrl,videoName=_ref.videoName,width=_ref.width,loop=_ref.loop,autoPlay=_ref.autoPlay;var url=useMemo(function(){return hasUrl?videoSrc:serverPrefix+videoName;},[hasUrl,videoSrc,serverPrefix]);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),reqError=_useState2[0],setReqError=_useState2[1];useEffect(function(){if(!hasUrl){axios.get(url).catch(function(error){var _error$response;if((error===null||error===void 0?void 0:(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)!=null){if(error.response.status==404){setReqError(\"Can't find video: \"+videoName);}else{setReqError(\"Can't play video: \"+videoName);}}});}},[url,setReqError,videoName]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"video\",{controls:true,autoPlay:autoPlay,preload:\"auto\",width:width,loop:loop,playsInline:true},/*#__PURE__*/React.createElement(\"source\",{src:url,type:type})),reqError&&/*#__PURE__*/React.createElement(Alert,{severity:\"warning\"},reqError));}export default compose(withUserAuth,withRouter)(VideoPlayer);","map":{"version":3,"sources":["/opt/osp/ewsnodejs-client/src/components/VideoPlayer.jsx"],"names":["React","useMemo","useEffect","useState","Alert","withRouter","compose","withUserAuth","axios","serverPrefix","type","VideoPlayer","videoSrc","hasUrl","videoName","width","loop","autoPlay","url","reqError","setReqError","get","catch","error","response","status"],"mappings":"gJAAA,MAAOA,CAAAA,KAAP,EAAeC,OAAf,CAAwBC,SAAxB,CAAmCC,QAAnC,KAAkD,OAAlD,CACA,MAAOC,CAAAA,KAAP,KAAkB,wBAAlB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,OAAT,KAAwB,WAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,sBAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAWA,GAAMC,CAAAA,YAAY,CAAG,6BAArB,CAEA,GAAMC,CAAAA,IAAI,CAAG,WAAb,CAEA,QAASC,CAAAA,WAAT,MAKwD,IALlCC,CAAAA,QAKkC,MALlCA,QAKkC,CAJlCC,MAIkC,MAJlCA,MAIkC,CAHlCC,SAGkC,MAHlCA,SAGkC,CAFlCC,KAEkC,MAFlCA,KAEkC,CADlCC,IACkC,MADlCA,IACkC,CAAlCC,QAAkC,MAAlCA,QAAkC,CAEpD,GAAMC,CAAAA,GAAG,CAAGjB,OAAO,CACf,iBAAMY,CAAAA,MAAM,CAAGD,QAAH,CAAcH,YAAY,CAAGK,SAAzC,EADe,CAElB,CAACD,MAAD,CAASD,QAAT,CAAmBH,YAAnB,CAFkB,CAAnB,CAFoD,cAMnBN,QAAQ,CAAC,IAAD,CANW,wCAM5CgB,QAN4C,eAMlCC,WANkC,eAQnDlB,SAAS,CAAC,UAAM,CACb,GAAI,CAACW,MAAL,CAAa,CACTL,KAAK,CAACa,GAAN,CAAUH,GAAV,EAAeI,KAAf,CAAqB,SAAAC,KAAK,CAAI,qBAC1B,GAAI,CAAAA,KAAK,OAAL,EAAAA,KAAK,SAAL,yBAAAA,KAAK,CAAEC,QAAP,0DAAiBC,MAAjB,GAA2B,IAA/B,CAAqC,CACjC,GAAGF,KAAK,CAACC,QAAN,CAAeC,MAAf,EAAyB,GAA5B,CAAiC,CAC7BL,WAAW,CAAC,qBAAuBN,SAAxB,CAAX,CACH,CAFD,IAGK,CACDM,WAAW,CAAC,qBAAuBN,SAAxB,CAAX,CACH,CACJ,CAEJ,CAVD,EAWH,CAEJ,CAfS,CAeR,CAACI,GAAD,CAAME,WAAN,CAAmBN,SAAnB,CAfQ,CAAT,CAkBD,mBACI,4CACI,6BACI,QAAQ,CAAI,IADhB,CAEI,QAAQ,CAAIG,QAFhB,CAGI,OAAO,CAAG,MAHd,CAII,KAAK,CAAIF,KAJb,CAKI,IAAI,CAAGC,IALX,CAMI,WAAW,CAAI,IANnB,eAOI,8BACI,GAAG,CAAIE,GADX,CAEI,IAAI,CAAIR,IAFZ,EAPJ,CADJ,CAaKS,QAAQ,eACL,oBAAC,KAAD,EAAO,QAAQ,CAAC,SAAhB,EACKA,QADL,CAdR,CADJ,CAqBD,CAED,cAAeb,CAAAA,OAAO,CACpBC,YADoB,CAEpBF,UAFoB,CAAP,CAGfM,WAHe,CAAf","sourcesContent":["import React, {useMemo, useEffect, useState} from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport withUserAuth from 'context/withUserAuth';\nimport axios from 'axios';\n\ntype Props = {\n    videoSrc: ?string,\n    hasUrl: boolean,\n    videoName: string,\n    width: ?string,\n    loop: ?string,\n    autoPlay: ?boolean,\n};\n\nconst serverPrefix = \"/api/researcher/video?name=\"\n\nconst type = \"video/mp4\"\n\nfunction VideoPlayer({videoSrc, \n                      hasUrl, \n                      videoName, \n                      width, \n                      loop, \n                      autoPlay}:Props): React.Component {\n\n    const url = useMemo(\n        () => hasUrl ? videoSrc : serverPrefix + videoName,\n     [hasUrl, videoSrc, serverPrefix]);\n\n     const [reqError, setReqError] = useState(null)\n\n     useEffect(() => {\n        if (!hasUrl) {\n            axios.get(url).catch(error => {\n                if (error?.response?.status != null) {\n                    if(error.response.status == 404) {\n                        setReqError(\"Can't find video: \" + videoName)\n                    }\n                    else {\n                        setReqError(\"Can't play video: \" + videoName)\n                    }\n                }\n                \n            })\n        }\n        \n    },[url, setReqError, videoName])\n\n    \n    return (\n        <div>\n            <video \n                controls = {true}\n                autoPlay = {autoPlay}\n                preload = \"auto\"\n                width = {width}\n                loop ={loop}\n                playsInline = {true}> \n                <source \n                    src = {url}\n                    type = {type}>\n                </source> \n            </video>\n            {reqError && \n                <Alert severity=\"warning\">\n                    {reqError}\n                </Alert>}\n        </div>\n    );\n\n  }\n  \n  export default compose(\n    withUserAuth,\n    withRouter,\n)(VideoPlayer);"]},"metadata":{},"sourceType":"module"}