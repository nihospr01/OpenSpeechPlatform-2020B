{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport ReactDOM from 'react-dom';\nimport scrollIntoView from 'dom-scroll-into-view';\nimport has from 'lodash/has';\nimport createBaseForm from './createBaseForm';\nimport { mixin as formMixin } from './createForm';\nimport { getParams } from './utils';\n\nfunction computedStyle(el, prop) {\n  var getComputedStyle = window.getComputedStyle;\n  var style = // If we have getComputedStyle\n  getComputedStyle ? // Query it\n  // TODO: From CSS-Query notes, we might need (node, null) for FF\n  getComputedStyle(el) : // Otherwise, we are in IE and use currentStyle\n  el.currentStyle;\n\n  if (style) {\n    return style[// Switch to camelCase for CSSOM\n    // DEV: Grabbed from jQuery\n    // https://github.com/jquery/jquery/blob/1.9-stable/src/css.js#L191-L194\n    // https://github.com/jquery/jquery/blob/1.9-stable/src/core.js#L593-L597\n    prop.replace(/-(\\w)/gi, function (word, letter) {\n      return letter.toUpperCase();\n    })];\n  }\n\n  return undefined;\n}\n\nfunction getScrollableContainer(n) {\n  var node = n;\n  var nodeName = void 0;\n  /* eslint no-cond-assign:0 */\n\n  while ((nodeName = node.nodeName.toLowerCase()) !== 'body') {\n    var overflowY = computedStyle(node, 'overflowY'); // https://stackoverflow.com/a/36900407/3040605\n\n    if (node !== n && (overflowY === 'auto' || overflowY === 'scroll') && node.scrollHeight > node.clientHeight) {\n      return node;\n    }\n\n    node = node.parentNode;\n  }\n\n  return nodeName === 'body' ? node.ownerDocument : node;\n}\n\nvar mixin = {\n  getForm: function getForm() {\n    return _extends({}, formMixin.getForm.call(this), {\n      validateFieldsAndScroll: this.validateFieldsAndScroll\n    });\n  },\n  validateFieldsAndScroll: function validateFieldsAndScroll(ns, opt, cb) {\n    var _this = this;\n\n    var _getParams = getParams(ns, opt, cb),\n        names = _getParams.names,\n        callback = _getParams.callback,\n        options = _getParams.options;\n\n    var newCb = function newCb(error, values) {\n      if (error) {\n        var validNames = _this.fieldsStore.getValidFieldsName();\n\n        var firstNode = void 0;\n        var firstTop = void 0;\n        validNames.forEach(function (name) {\n          if (has(error, name)) {\n            var instance = _this.getFieldInstance(name);\n\n            if (instance) {\n              var node = ReactDOM.findDOMNode(instance);\n              var top = node.getBoundingClientRect().top;\n\n              if (node.type !== 'hidden' && (firstTop === undefined || firstTop > top)) {\n                firstTop = top;\n                firstNode = node;\n              }\n            }\n          }\n        });\n\n        if (firstNode) {\n          var c = options.container || getScrollableContainer(firstNode);\n          scrollIntoView(firstNode, c, _extends({\n            onlyScrollIfNeeded: true\n          }, options.scroll));\n        }\n      }\n\n      if (typeof callback === 'function') {\n        callback(error, values);\n      }\n    };\n\n    return this.validateFields(names, options, newCb);\n  }\n};\n\nfunction createDOMForm(option) {\n  return createBaseForm(_extends({}, option), [mixin]);\n}\n\nexport default createDOMForm;","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/rc-form/es/createDOMForm.js"],"names":["_extends","ReactDOM","scrollIntoView","has","createBaseForm","mixin","formMixin","getParams","computedStyle","el","prop","getComputedStyle","window","style","currentStyle","replace","word","letter","toUpperCase","undefined","getScrollableContainer","n","node","nodeName","toLowerCase","overflowY","scrollHeight","clientHeight","parentNode","ownerDocument","getForm","call","validateFieldsAndScroll","ns","opt","cb","_this","_getParams","names","callback","options","newCb","error","values","validNames","fieldsStore","getValidFieldsName","firstNode","firstTop","forEach","name","instance","getFieldInstance","findDOMNode","top","getBoundingClientRect","type","c","container","onlyScrollIfNeeded","scroll","validateFields","createDOMForm","option"],"mappings":"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","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport ReactDOM from 'react-dom';\nimport scrollIntoView from 'dom-scroll-into-view';\nimport has from 'lodash/has';\nimport createBaseForm from './createBaseForm';\nimport { mixin as formMixin } from './createForm';\nimport { getParams } from './utils';\n\nfunction computedStyle(el, prop) {\n  var getComputedStyle = window.getComputedStyle;\n  var style =\n  // If we have getComputedStyle\n  getComputedStyle ?\n  // Query it\n  // TODO: From CSS-Query notes, we might need (node, null) for FF\n  getComputedStyle(el) :\n\n  // Otherwise, we are in IE and use currentStyle\n  el.currentStyle;\n  if (style) {\n    return style[\n    // Switch to camelCase for CSSOM\n    // DEV: Grabbed from jQuery\n    // https://github.com/jquery/jquery/blob/1.9-stable/src/css.js#L191-L194\n    // https://github.com/jquery/jquery/blob/1.9-stable/src/core.js#L593-L597\n    prop.replace(/-(\\w)/gi, function (word, letter) {\n      return letter.toUpperCase();\n    })];\n  }\n  return undefined;\n}\n\nfunction getScrollableContainer(n) {\n  var node = n;\n  var nodeName = void 0;\n  /* eslint no-cond-assign:0 */\n  while ((nodeName = node.nodeName.toLowerCase()) !== 'body') {\n    var overflowY = computedStyle(node, 'overflowY');\n    // https://stackoverflow.com/a/36900407/3040605\n    if (node !== n && (overflowY === 'auto' || overflowY === 'scroll') && node.scrollHeight > node.clientHeight) {\n      return node;\n    }\n    node = node.parentNode;\n  }\n  return nodeName === 'body' ? node.ownerDocument : node;\n}\n\nvar mixin = {\n  getForm: function getForm() {\n    return _extends({}, formMixin.getForm.call(this), {\n      validateFieldsAndScroll: this.validateFieldsAndScroll\n    });\n  },\n  validateFieldsAndScroll: function validateFieldsAndScroll(ns, opt, cb) {\n    var _this = this;\n\n    var _getParams = getParams(ns, opt, cb),\n        names = _getParams.names,\n        callback = _getParams.callback,\n        options = _getParams.options;\n\n    var newCb = function newCb(error, values) {\n      if (error) {\n        var validNames = _this.fieldsStore.getValidFieldsName();\n        var firstNode = void 0;\n        var firstTop = void 0;\n\n        validNames.forEach(function (name) {\n          if (has(error, name)) {\n            var instance = _this.getFieldInstance(name);\n            if (instance) {\n              var node = ReactDOM.findDOMNode(instance);\n              var top = node.getBoundingClientRect().top;\n              if (node.type !== 'hidden' && (firstTop === undefined || firstTop > top)) {\n                firstTop = top;\n                firstNode = node;\n              }\n            }\n          }\n        });\n\n        if (firstNode) {\n          var c = options.container || getScrollableContainer(firstNode);\n          scrollIntoView(firstNode, c, _extends({\n            onlyScrollIfNeeded: true\n          }, options.scroll));\n        }\n      }\n\n      if (typeof callback === 'function') {\n        callback(error, values);\n      }\n    };\n\n    return this.validateFields(names, options, newCb);\n  }\n};\n\nfunction createDOMForm(option) {\n  return createBaseForm(_extends({}, option), [mixin]);\n}\n\nexport default createDOMForm;"]},"metadata":{},"sourceType":"module"}