{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule editOnFocus\n * @format\n * \n */\n'use strict';\n\nvar EditorState = require('./EditorState');\n\nvar UserAgent = require('fbjs/lib/UserAgent');\n\nfunction editOnFocus(editor, e) {\n  var editorState = editor._latestEditorState;\n  var currentSelection = editorState.getSelection();\n\n  if (currentSelection.getHasFocus()) {\n    return;\n  }\n\n  var selection = currentSelection.set('hasFocus', true);\n  editor.props.onFocus && editor.props.onFocus(e); // When the tab containing this text editor is hidden and the user does a\n  // find-in-page in a _different_ tab, Chrome on Mac likes to forget what the\n  // selection was right after sending this focus event and (if you let it)\n  // moves the cursor back to the beginning of the editor, so we force the\n  // selection here instead of simply accepting it in order to preserve the\n  // old cursor position. See https://crbug.com/540004.\n  // But it looks like this is fixed in Chrome 60.0.3081.0.\n  // Other browsers also don't have this bug, so we prefer to acceptSelection\n  // when possible, to ensure that unfocusing and refocusing a Draft editor\n  // doesn't preserve the selection, matching how textareas work.\n\n  if (UserAgent.isBrowser('Chrome < 60.0.3081.0')) {\n    editor.update(EditorState.forceSelection(editorState, selection));\n  } else {\n    editor.update(EditorState.acceptSelection(editorState, selection));\n  }\n}\n\nmodule.exports = editOnFocus;","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/draft-js/lib/editOnFocus.js"],"names":["EditorState","require","UserAgent","editOnFocus","editor","e","editorState","_latestEditorState","currentSelection","getSelection","getHasFocus","selection","set","props","onFocus","isBrowser","update","forceSelection","acceptSelection","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,oBAAD,CAAvB;;AAEA,SAASE,WAAT,CAAqBC,MAArB,EAA6BC,CAA7B,EAAgC;AAC9B,MAAIC,WAAW,GAAGF,MAAM,CAACG,kBAAzB;AACA,MAAIC,gBAAgB,GAAGF,WAAW,CAACG,YAAZ,EAAvB;;AACA,MAAID,gBAAgB,CAACE,WAAjB,EAAJ,EAAoC;AAClC;AACD;;AAED,MAAIC,SAAS,GAAGH,gBAAgB,CAACI,GAAjB,CAAqB,UAArB,EAAiC,IAAjC,CAAhB;AACAR,EAAAA,MAAM,CAACS,KAAP,CAAaC,OAAb,IAAwBV,MAAM,CAACS,KAAP,CAAaC,OAAb,CAAqBT,CAArB,CAAxB,CAR8B,CAU9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAIH,SAAS,CAACa,SAAV,CAAoB,sBAApB,CAAJ,EAAiD;AAC/CX,IAAAA,MAAM,CAACY,MAAP,CAAchB,WAAW,CAACiB,cAAZ,CAA2BX,WAA3B,EAAwCK,SAAxC,CAAd;AACD,GAFD,MAEO;AACLP,IAAAA,MAAM,CAACY,MAAP,CAAchB,WAAW,CAACkB,eAAZ,CAA4BZ,WAA5B,EAAyCK,SAAzC,CAAd;AACD;AACF;;AAEDQ,MAAM,CAACC,OAAP,GAAiBjB,WAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule editOnFocus\n * @format\n * \n */\n\n'use strict';\n\nvar EditorState = require('./EditorState');\nvar UserAgent = require('fbjs/lib/UserAgent');\n\nfunction editOnFocus(editor, e) {\n  var editorState = editor._latestEditorState;\n  var currentSelection = editorState.getSelection();\n  if (currentSelection.getHasFocus()) {\n    return;\n  }\n\n  var selection = currentSelection.set('hasFocus', true);\n  editor.props.onFocus && editor.props.onFocus(e);\n\n  // When the tab containing this text editor is hidden and the user does a\n  // find-in-page in a _different_ tab, Chrome on Mac likes to forget what the\n  // selection was right after sending this focus event and (if you let it)\n  // moves the cursor back to the beginning of the editor, so we force the\n  // selection here instead of simply accepting it in order to preserve the\n  // old cursor position. See https://crbug.com/540004.\n  // But it looks like this is fixed in Chrome 60.0.3081.0.\n  // Other browsers also don't have this bug, so we prefer to acceptSelection\n  // when possible, to ensure that unfocusing and refocusing a Draft editor\n  // doesn't preserve the selection, matching how textareas work.\n  if (UserAgent.isBrowser('Chrome < 60.0.3081.0')) {\n    editor.update(EditorState.forceSelection(editorState, selection));\n  } else {\n    editor.update(EditorState.acceptSelection(editorState, selection));\n  }\n}\n\nmodule.exports = editOnFocus;"]},"metadata":{},"sourceType":"script"}