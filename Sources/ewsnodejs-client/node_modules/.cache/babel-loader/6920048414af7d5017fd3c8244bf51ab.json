{"ast":null,"code":"import { path } from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport { x as pointX, y as pointY } from \"./point.js\";\nexport default function () {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();else output.lineEnd();\n      }\n\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function (_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function (_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function (_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function (_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}","map":{"version":3,"sources":["/opt/OpenSpeechPlatform-UCSD/Software/ewsnodejs-client/node_modules/d3-shape/src/line.js"],"names":["path","constant","curveLinear","x","pointX","y","pointY","defined","context","curve","output","line","data","i","n","length","d","defined0","buffer","lineStart","lineEnd","point","_","arguments"],"mappings":"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","sourcesContent":["import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport curveLinear from \"./curve/linear.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n"]},"metadata":{},"sourceType":"module"}