.TH "libosp/osp_tcp/json_parser/jsmn.c" 3 "Mon Oct 8 2018" "Open Speech Platform" \" -*- nroff -*-
.ad l
.nh
.SH NAME
libosp/osp_tcp/json_parser/jsmn.c
.SH SYNOPSIS
.br
.PP
\fC#include 'jsmn\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "static \fBjsmntok_t\fP * \fBjsmn_alloc_token\fP (\fBjsmn_parser\fP *parser, \fBjsmntok_t\fP *tokens, size_t num_tokens)"
.br
.ti -1c
.RI "static void \fBjsmn_fill_token\fP (\fBjsmntok_t\fP *token, \fBjsmntype_t\fP type, int start, int end)"
.br
.ti -1c
.RI "static int \fBjsmn_parse_primitive\fP (\fBjsmn_parser\fP *parser, const char *js, size_t len, \fBjsmntok_t\fP *tokens, size_t num_tokens)"
.br
.ti -1c
.RI "static int \fBjsmn_parse_string\fP (\fBjsmn_parser\fP *parser, const char *js, size_t len, \fBjsmntok_t\fP *tokens, size_t num_tokens)"
.br
.ti -1c
.RI "int \fBjsmn_parse\fP (\fBjsmn_parser\fP *parser, const char *js, size_t len, \fBjsmntok_t\fP *tokens, unsigned int num_tokens)"
.br
.ti -1c
.RI "void \fBjsmn_init\fP (\fBjsmn_parser\fP *parser)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "static \fBjsmntok_t\fP* jsmn_alloc_token (\fBjsmn_parser\fP * parser, \fBjsmntok_t\fP * tokens, size_t num_tokens)\fC [static]\fP"
Allocates a fresh unused token from the token pull\&. 
.SS "static void jsmn_fill_token (\fBjsmntok_t\fP * token, \fBjsmntype_t\fP type, int start, int end)\fC [static]\fP"
Fills token type and boundaries\&. 
.SS "void jsmn_init (\fBjsmn_parser\fP * parser)"
Creates a new parser based over a given buffer with an array of tokens available\&. 
.SS "int jsmn_parse (\fBjsmn_parser\fP * parser, const char * js, size_t len, \fBjsmntok_t\fP * tokens, unsigned int num_tokens)"
Parse JSON string and fill tokens\&. 
.SS "static int jsmn_parse_primitive (\fBjsmn_parser\fP * parser, const char * js, size_t len, \fBjsmntok_t\fP * tokens, size_t num_tokens)\fC [static]\fP"
Fills next available token with JSON primitive\&. 
.SS "static int jsmn_parse_string (\fBjsmn_parser\fP * parser, const char * js, size_t len, \fBjsmntok_t\fP * tokens, size_t num_tokens)\fC [static]\fP"
Fills next token with JSON string\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Open Speech Platform from the source code\&.
