.TH "libosp/osp_process/osp_process.c" 3 "Fri Feb 23 2018" "Open Speech Platform" \" -*- nroff -*-
.ad l
.nh
.SH NAME
libosp/osp_process/osp_process.c
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include 'constants\&.h'\fP
.br
\fC#include 'logger\&.h'\fP
.br
\fC#include 'speech_enhancement\&.h'\fP
.br
\fC#include 'osp_process\&.h'\fP
.br
\fC#include 'utilities\&.h'\fP
.br
\fC#include 'filter\&.h'\fP
.br
\fC#include 'coeffs\&.h'\fP
.br
\fC#include 'afc\&.h'\fP
.br
\fC#include 'delay_line\&.h'\fP
.br
\fC#include 'array_utilities\&.h'\fP
.br
\fC#include 'peak_detect\&.h'\fP
.br
\fC#include 'wdrc\&.h'\fP
.br
\fC#include 'wdrc_mpo_support\&.h'\fP
.br
\fC#include 'mpo\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBFEEDBACK_EST_DELAY\fP   100"
.br
.RI "Feedback delay in samples\&. For file loopback its 0\&. For real-time processing one needs to account for I/O delay\&. "
.ti -1c
.RI "#define \fBSTEREO\fP"
.br
.RI "Toggle for stereo and mono\&. "
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "static void \fBosp_process_ha\fP (\fBosp_user_data\fP *osp, \fBFilter\fP *filter, \fBPeak_detect\fP pd, float *e_n, float *s_n, size_t len)"
.br
.RI "Function that performs basic Hearing Aid (HA) processing on a single channel\&. "
.ti -1c
.RI "int \fBosp_init\fP (unsigned int frame_size, int sample_rate, unsigned char afc_adaptation_type)"
.br
.RI "This file groups all of the different OSP library calls in one place\&. This is more of an example way of using the different parts of the OSP libraries to implement a hearing aid algorith with MHA and AFC all in one place\&. "
.ti -1c
.RI "void \fBosp_process_audio\fP (\fBosp_user_data\fP *osp, float *x_nL, float *x_nR, float *outL, float *outR, size_t len)"
.br
.RI "Function to perform Master Hearing Aid (MHA) processing on the input signal for both channels\&. "
.ti -1c
.RI "unsigned int \fBosp_get_num_bands\fP ()"
.br
.RI "Function to get the number of Sub-Bands\&. "
.ti -1c
.RI "void \fBosp_close\fP ()"
.br
.RI "Wrapper function to free all the modules of Master Hearing Aid (MHA) "
.ti -1c
.RI "void \fBosp_dump_afc_filter\fP ()"
.br
.RI "Function to dump AFC filter taps for both left and right channels\&. "
.ti -1c
.RI "void \fBosp_data_init\fP (\fBosp_user_data\fP *user_data)"
.br
.RI "Helper function for initializing Master Hearing Aid (MHA) parameters\&. "
.ti -1c
.RI "void \fBosp_data_set_gain\fP (\fBosp_user_data\fP *user_data, int gain)"
.br
.RI "Helper function for initializing gain parameters for WDRC with a constant gain\&. "
.ti -1c
.RI "void \fBosp_data_set_nh\fP (\fBosp_user_data\fP *user_data)"
.br
.RI "Helper function for initializing gain parameters for WDRC with NH audiogram\&. "
.ti -1c
.RI "void \fBosp_data_set_n2\fP (\fBosp_user_data\fP *user_data)"
.br
.RI "Helper function for initializing gain parameters for WDRC with N2 audiogram\&. "
.ti -1c
.RI "void \fBosp_data_set_n4\fP (\fBosp_user_data\fP *user_data)"
.br
.RI "Helper function for initializing gain parameters for WDRC with N4 audiogram\&. "
.ti -1c
.RI "void \fBosp_data_set_s2\fP (\fBosp_user_data\fP *user_data)"
.br
.RI "Helper function for initializing gain parameters for WDRC with S2 audiogram\&. "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "static \fBFilter\fP \fBfilterL\fP [\fBNUM_BANDS\fP]"
.br
.ti -1c
.RI "static \fBFilter\fP \fBfilterR\fP [\fBNUM_BANDS\fP]"
.br
.ti -1c
.RI "static \fBFilter\fP \fBsynthetic_feedback_filter_left\fP"
.br
.ti -1c
.RI "static \fBFilter\fP \fBsynthetic_feedback_filter_right\fP"
.br
.ti -1c
.RI "static \fBPeak_detect\fP \fBpdL\fP"
.br
.ti -1c
.RI "static \fBPeak_detect\fP \fBpdR\fP"
.br
.ti -1c
.RI "static \fBAfc\fP \fBafc_left\fP"
.br
.ti -1c
.RI "static \fBAfc\fP \fBafc_right\fP"
.br
.ti -1c
.RI "static \fBDelay_Line\fP \fBdelay_line_left\fP"
.br
.ti -1c
.RI "static \fBDelay_Line\fP \fBdelay_line_right\fP"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define FEEDBACK_EST_DELAY   100"

.PP
Feedback delay in samples\&. For file loopback its 0\&. For real-time processing one needs to account for I/O delay\&. 
.SS "#define STEREO"

.PP
Toggle for stereo and mono\&. 
.SH "Function Documentation"
.PP 
.SS "void osp_close ()"

.PP
Wrapper function to free all the modules of Master Hearing Aid (MHA) 
.SS "void osp_data_init (\fBosp_user_data\fP * user_data)"

.PP
Helper function for initializing Master Hearing Aid (MHA) parameters\&. 
.PP
\fBSee also:\fP
.RS 4
\fBosp_user_data\fP 
.PP
\fBosp_data_set_gain\fP, \fBosp_data_set_nh\fP, \fBosp_data_set_n2\fP ,\fBosp_data_set_n4\fP ,\fBosp_data_set_s2\fP 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIuser_data\fP Pointer to an osp_user_data instance which will be allocated in the function 
.RE
.PP

.SS "void osp_data_set_gain (\fBosp_user_data\fP * user_data, int gain)"

.PP
Helper function for initializing gain parameters for WDRC with a constant gain\&. 
.PP
\fBSee also:\fP
.RS 4
\fBosp_user_data\fP 
.PP
\fBosp_data_set_gain\fP, \fBosp_data_set_nh\fP, \fBosp_data_set_n2\fP ,\fBosp_data_set_n4\fP ,\fBosp_data_set_s2\fP 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIuser_data\fP Pointer to the instance of osp_user_data initialized by osp_data_init 
.br
\fIgain\fP The constant gain value 
.RE
.PP

.SS "void osp_data_set_n2 (\fBosp_user_data\fP * user_data)"

.PP
Helper function for initializing gain parameters for WDRC with N2 audiogram\&. 
.PP
\fBSee also:\fP
.RS 4
\fBosp_user_data\fP 
.PP
\fBosp_data_set_gain\fP, \fBosp_data_set_nh\fP, \fBosp_data_set_n2\fP ,\fBosp_data_set_n4\fP ,\fBosp_data_set_s2\fP 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIuser_data\fP Pointer to the instance of osp_user_data initialized by osp_data_init 
.RE
.PP

.SS "void osp_data_set_n4 (\fBosp_user_data\fP * user_data)"

.PP
Helper function for initializing gain parameters for WDRC with N4 audiogram\&. 
.PP
\fBSee also:\fP
.RS 4
\fBosp_user_data\fP 
.PP
\fBosp_data_set_gain\fP, \fBosp_data_set_nh\fP, \fBosp_data_set_n2\fP ,\fBosp_data_set_n4\fP ,\fBosp_data_set_s2\fP 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIuser_data\fP Pointer to the instance of osp_user_data initialized by osp_data_init 
.RE
.PP

.SS "void osp_data_set_nh (\fBosp_user_data\fP * user_data)"

.PP
Helper function for initializing gain parameters for WDRC with NH audiogram\&. 
.PP
\fBSee also:\fP
.RS 4
\fBosp_user_data\fP 
.PP
\fBosp_data_set_gain\fP, \fBosp_data_set_nh\fP, \fBosp_data_set_n2\fP ,\fBosp_data_set_n4\fP ,\fBosp_data_set_s2\fP 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIuser_data\fP Pointer to the instance of osp_user_data initialized by osp_data_init 
.RE
.PP

.SS "void osp_data_set_s2 (\fBosp_user_data\fP * user_data)"

.PP
Helper function for initializing gain parameters for WDRC with S2 audiogram\&. 
.PP
\fBSee also:\fP
.RS 4
\fBosp_user_data\fP 
.PP
\fBosp_data_set_gain\fP, \fBosp_data_set_nh\fP, \fBosp_data_set_n2\fP ,\fBosp_data_set_n4\fP ,\fBosp_data_set_s2\fP 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIuser_data\fP Pointer to the instance of osp_user_data initialized by osp_data_init 
.RE
.PP

.SS "void osp_dump_afc_filter ()"

.PP
Function to dump AFC filter taps for both left and right channels\&. File names can be changed by changing AFC_FILTER_TAP_FILE_L, AFC_FILTER_TAP_FILE_R in \fBconstants\&.h\fP 
.SS "unsigned int osp_get_num_bands ()"

.PP
Function to get the number of Sub-Bands\&. 
.PP
\fBReturns:\fP
.RS 4
int Number of Sub-Bands give by NUM_BANDS 
.RE
.PP

.SS "int osp_init (unsigned int frame_size, int sample_rate, unsigned char afc_adaptation_type)"

.PP
This file groups all of the different OSP library calls in one place\&. This is more of an example way of using the different parts of the OSP libraries to implement a hearing aid algorith with MHA and AFC all in one place\&. Wrapper function to initalize all the modules of Master Hearing Aid (MHA)
.PP
\fBParameters:\fP
.RS 4
\fIframe_size\fP The number of samples in a frame\&. i\&.e\&. the number of samples to process 
.br
\fIsample_rate\fP The sample rate at which all MHA processing will be done 
.br
\fIafc_adaptation_type\fP The type of AFC adaptation 
.RE
.PP
\fBReturns:\fP
.RS 4
0 if successful initialization\&. -1 otherwise 
.RE
.PP

.SS "void osp_process_audio (\fBosp_user_data\fP * osp, float * x_nL, float * x_nR, float * outL, float * outR, size_t len)"

.PP
Function to perform Master Hearing Aid (MHA) processing on the input signal for both channels\&. If STEREO is false, only the right channel is processed
.PP
\fBSee also:\fP
.RS 4
\fBosp_user_data\fP 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIosp\fP The instance of the osp_user_data structure that was initialized in osp_data_init\&. This contains all the MHA parameters\&. 
.br
\fIx_nL\fP Pointer to the array containing left channel input 
.br
\fIx_nR\fP Pointer to the array containing right channel input 
.br
\fIoutL\fP Pointer to the array to store the output of MHA processing on left channel input 
.br
\fIoutR\fP Pointer to the array to store the output of MHA processing on right channel input 
.br
\fIlen\fP The length of the input signal e_n that is given for processing\&. i\&.e\&. frame length\&. 
.RE
.PP

.SS "static void osp_process_ha (\fBosp_user_data\fP * osp, \fBFilter\fP * filter, \fBPeak_detect\fP pd, float * e_n, float * s_n, size_t len)\fC [static]\fP"

.PP
Function that performs basic Hearing Aid (HA) processing on a single channel\&. The signal is split into Sub-Bands\&. Peak Detect and WDRC are applied on each Sub-Band\&. The WDRC outputs are then added across the Sub-Bands\&. This will be the output of the HA\&.
.PP
\fBSee also:\fP
.RS 4
\fBosp_user_data\fP 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIosp\fP The instance of the osp_user_data structure that was initialized in osp_data_init\&. This contains all the MHA parameters\&. 
.br
\fIfilter\fP The filter data structure instance for that channel 
.br
\fIpd\fP The peak detect data structure instance for that channel 
.br
\fIe_n\fP Pointer to the input signal of the HA\&. This will be the sum of desired input signal plus the feedback signal\&. 
.br
\fIs_n\fP Pointer to the output signal of the HA\&. i\&.e\&. the output of the HA\&. This output will be used by AFC to remove feedback\&. 
.br
\fIlen\fP The length of the input signal e_n that is given for processing\&. i\&.e\&. frame length\&. 
.RE
.PP

.SH "Variable Documentation"
.PP 
.SS "\fBAfc\fP afc_left\fC [static]\fP"

.SS "\fBAfc\fP afc_right\fC [static]\fP"

.SS "\fBDelay_Line\fP delay_line_left\fC [static]\fP"

.SS "\fBDelay_Line\fP delay_line_right\fC [static]\fP"

.SS "\fBFilter\fP filterL[\fBNUM_BANDS\fP]\fC [static]\fP"

.SS "\fBFilter\fP filterR[\fBNUM_BANDS\fP]\fC [static]\fP"

.SS "\fBPeak_detect\fP pdL\fC [static]\fP"

.SS "\fBPeak_detect\fP pdR\fC [static]\fP"

.SS "\fBFilter\fP synthetic_feedback_filter_left\fC [static]\fP"

.SS "\fBFilter\fP synthetic_feedback_filter_right\fC [static]\fP"

.SH "Author"
.PP 
Generated automatically by Doxygen for Open Speech Platform from the source code\&.
