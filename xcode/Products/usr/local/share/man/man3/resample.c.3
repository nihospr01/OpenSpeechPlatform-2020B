.TH "libosp/resample/resample.c" 3 "Mon Oct 8 2018" "Open Speech Platform" \" -*- nroff -*-
.ad l
.nh
.SH NAME
libosp/resample/resample.c
.SH SYNOPSIS
.br
.PP
\fC#include <stdlib\&.h>\fP
.br
\fC#include 'resample\&.h'\fP
.br
\fC#include 'filter\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBresample_t\fP"
.br
.RI "Data struct containing variables for resampler\&. "
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBSIZE_32\fP   32"
.br
.ti -1c
.RI "#define \fBSIZE_48\fP   48"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "static size_t \fBinterpolate\fP (float *input, float *output, size_t input_len, int int_factor)"
.br
.ti -1c
.RI "static size_t \fBdecimate\fP (float *input, float *output, size_t input_len, int dec_factor)"
.br
.ti -1c
.RI "\fBResample\fP \fBresample_init\fP (const float *upsample_taps, int up_len, const float *downsample_taps, int down_len)"
.br
.RI "Initialization function for the resample structure\&. "
.ti -1c
.RI "size_t \fBresample_48_32\fP (\fBResample\fP obj, float *in_48, float *out_32, int size_input)"
.br
.RI "Resamples an input of 48 samples at 48kHz sampling rate, and resamples it to 32kHz\&. "
.ti -1c
.RI "size_t \fBresample_32_48\fP (\fBResample\fP obj, float *in_32, float *out_48, size_t size_input)"
.br
.RI "Resamples an input of 32 samples at 32kHz sampling rate, and resamples it to 48kHz\&. "
.ti -1c
.RI "size_t \fBresample_96_32\fP (\fBResample\fP obj, float *in_96, float *out_32, size_t size_input)"
.br
.RI "Resamples an input of 96 samples at 96kHz sampling rate, and resamples it to 32kHz\&. "
.ti -1c
.RI "size_t \fBresample_32_96\fP (\fBResample\fP obj, float *in_32, float *out_96, size_t size_input)"
.br
.RI "Resamples an input of 32 samples at 32kHz sampling rate, and resamples it to 96kHz\&. "
.ti -1c
.RI "int \fBresample_destroy\fP (\fBResample\fP obj)"
.br
.RI "Frees the Resample struct\&. "
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define SIZE_32   32"

.SS "#define SIZE_48   48"

.SH "Function Documentation"
.PP 
.SS "static size_t decimate (float * input, float * output, size_t input_len, int dec_factor)\fC [static]\fP"

.SS "static size_t interpolate (float * input, float * output, size_t input_len, int int_factor)\fC [static]\fP"

.SS "size_t resample_32_48 (\fBResample\fP obj, float * in_32, float * out_48, size_t size_input)"

.PP
Resamples an input of 32 samples at 32kHz sampling rate, and resamples it to 48kHz\&. 
.PP
\fBParameters:\fP
.RS 4
\fIobj\fP Resample struct 
.br
\fIin_32\fP Input array of float samples\&. Must be 32 elements long 
.br
\fIout_48\fP Outout array of float samples\&. Must be allocated to be 48 elements long\&. 
.br
\fIsize_input\fP The size of the in_32 array\&. This is tested internally and must be 32, or else -1 is returned\&. 
.RE
.PP

.SS "size_t resample_32_96 (\fBResample\fP obj, float * in_32, float * out_96, size_t size_input)"

.PP
Resamples an input of 32 samples at 32kHz sampling rate, and resamples it to 96kHz\&. 
.PP
\fBParameters:\fP
.RS 4
\fIobj\fP Resample struct 
.br
\fIin_32\fP Input array of float samples\&. Must be 32 elements long 
.br
\fIout_96\fP Outout array of float samples\&. Must be allocated to be 96 elements long\&. 
.br
\fIsize_input\fP The size of the in_32 array\&. This is tested internally and must be 32, or else -1 is returned\&. 
.RE
.PP

.SS "size_t resample_48_32 (\fBResample\fP obj, float * in_48, float * out_32, int size_input)"

.PP
Resamples an input of 48 samples at 48kHz sampling rate, and resamples it to 32kHz\&. 
.PP
\fBParameters:\fP
.RS 4
\fIobj\fP Resample struct 
.br
\fIin_48\fP Input array of float samples\&. Must be 48 elements long 
.br
\fIout_32\fP Outout array of float samples\&. Must be allocated to be 32 elements long\&. 
.br
\fIsize_input\fP The size of the in_48 array\&. This is tested internally and must be 48, or else -1 is returned\&. 
.RE
.PP

.SS "size_t resample_96_32 (\fBResample\fP obj, float * in_96, float * out_32, size_t size_input)"

.PP
Resamples an input of 96 samples at 96kHz sampling rate, and resamples it to 32kHz\&. 
.PP
\fBParameters:\fP
.RS 4
\fIobj\fP Resample struct 
.br
\fIin_96\fP Input array of float samples\&. Must be 96 elements long 
.br
\fIout_32\fP Outout array of float samples\&. Must be allocated to be 32 elements long\&. 
.br
\fIsize_input\fP The size of the in_96 array\&. This is tested internally and must be 96, or else -1 is returned\&. 
.RE
.PP

.SS "int resample_destroy (\fBResample\fP obj)"

.PP
Frees the Resample struct\&. 
.PP
\fBParameters:\fP
.RS 4
\fIobj\fP Resample struct 
.RE
.PP
\fBReturns:\fP
.RS 4
Returns 0 on success, -1 on error 
.RE
.PP

.SS "\fBResample\fP resample_init (const float * upsample_taps, int up_len, const float * downsample_taps, int down_len)"

.PP
Initialization function for the resample structure\&. 
.PP
\fBSee also:\fP
.RS 4
\fBresample_t\fP 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIupsample_taps\fP The taps of the filter to be filtered with the input after being interpolated 
.br
\fIup_len\fP Length of upsample filter 
.br
\fIdownsample_taps\fP The taps of the filter to be filtered with the signal before being decimated 
.br
\fIdown_len\fP Length of the downsample filter
.RE
.PP
\fBReturns:\fP
.RS 4
Returns the allocated instance of the OSP TCP layer data structure ('object' 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Open Speech Platform from the source code\&.
